/**
 * @fileoverview added by tsickle
 * Generated from: lib/app-switcher/app-switcher-interfaces.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { of } from 'rxjs';
import { InjectionToken } from '@angular/core';
/**
 * @record
 */
export function IDiscoveryApplication() { }
if (false) {
    /** @type {?} */
    IDiscoveryApplication.prototype.ServiceName;
    /** @type {?} */
    IDiscoveryApplication.prototype.FriendlyName;
    /** @type {?} */
    IDiscoveryApplication.prototype.Description;
    /** @type {?} */
    IDiscoveryApplication.prototype.BuildNumber;
    /** @type {?} */
    IDiscoveryApplication.prototype.Version;
    /** @type {?} */
    IDiscoveryApplication.prototype.DiscoveryServiceId;
    /** @type {?} */
    IDiscoveryApplication.prototype.ServiceUrl;
    /** @type {?|undefined} */
    IDiscoveryApplication.prototype.Heartbeat;
    /** @type {?|undefined} */
    IDiscoveryApplication.prototype.IsHidden;
    /** @type {?} */
    IDiscoveryApplication.prototype.DiscoveryType;
    /** @type {?} */
    IDiscoveryApplication.prototype.Icon;
}
/**
 * @record
 */
export function IDiscoveryRequest() { }
if (false) {
    /** @type {?} */
    IDiscoveryRequest.prototype.value;
}
/**
 * @record
 */
export function IAppSwitcherService() { }
if (false) {
    /** @type {?} */
    IAppSwitcherService.prototype.allApplicationsUri;
    /**
     * @return {?}
     */
    IAppSwitcherService.prototype.getApplications = function () { };
}
/** @type {?} */
export const APP_SWITCHER_SERVICE = new InjectionToken('IAppSwitcherService');
/**
 * @record
 */
export function IAppSwitcherConfig() { }
if (false) {
    /** @type {?} */
    IAppSwitcherConfig.prototype.discoveryServiceUri;
}
/** @type {?} */
export const APP_SWITCHER_CONFIG = new InjectionToken('IAppSwitcherConfig');
export class MockAppSwitcherService {
    /**
     * @return {?}
     */
    getApplications() {
        return of({
            value: [
                {
                    ServiceName: 'MyApp',
                    FriendlyName: 'My App',
                    Description: 'The currently showing app',
                    BuildNumber: '123',
                    Version: 1,
                    DiscoveryServiceId: 1,
                    ServiceUrl: 'http://myapp.com',
                    DiscoveryType: 'Application',
                    Icon: ''
                },
                {
                    ServiceName: 'AnotherApp',
                    FriendlyName: 'Another App',
                    Description: 'App we could switch to',
                    BuildNumber: '123',
                    Version: 1,
                    DiscoveryServiceId: 2,
                    ServiceUrl: 'http://anotherapp.com',
                    DiscoveryType: 'Application',
                    Icon: ''
                }
            ]
        });
    }
}
if (false) {
    /** @type {?} */
    MockAppSwitcherService.prototype.allApplicationsUri;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXN3aXRjaGVyLWludGVyZmFjZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGVhbHRoY2F0YWx5c3QvY2FzaG1lcmUvIiwic291cmNlcyI6WyJsaWIvYXBwLXN3aXRjaGVyL2FwcC1zd2l0Y2hlci1pbnRlcmZhY2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFhLEVBQUUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNwQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7O0FBRTdDLDJDQVlDOzs7SUFYRyw0Q0FBb0I7O0lBQ3BCLDZDQUFxQjs7SUFDckIsNENBQW9COztJQUNwQiw0Q0FBMkI7O0lBQzNCLHdDQUFnQjs7SUFDaEIsbURBQWtDOztJQUNsQywyQ0FBbUI7O0lBQ25CLDBDQUFpQjs7SUFDakIseUNBQW1COztJQUNuQiw4Q0FBc0I7O0lBQ3RCLHFDQUFhOzs7OztBQUdqQix1Q0FFQzs7O0lBREcsa0NBQStCOzs7OztBQUduQyx5Q0FJQzs7O0lBSEcsaURBQTJCOzs7O0lBRTNCLGdFQUFpRDs7O0FBR3JELE1BQU0sT0FBTyxvQkFBb0IsR0FBRyxJQUFJLGNBQWMsQ0FBc0IscUJBQXFCLENBQUM7Ozs7QUFFbEcsd0NBRUM7OztJQURHLGlEQUE0Qjs7O0FBR2hDLE1BQU0sT0FBTyxtQkFBbUIsR0FBRyxJQUFJLGNBQWMsQ0FBcUIsb0JBQW9CLENBQUM7QUFFL0YsTUFBTSxPQUFPLHNCQUFzQjs7OztJQUcvQixlQUFlO1FBQ1gsT0FBTyxFQUFFLENBQUM7WUFDTixLQUFLLEVBQUU7Z0JBQ0g7b0JBQ0ksV0FBVyxFQUFFLE9BQU87b0JBQ3BCLFlBQVksRUFBRSxRQUFRO29CQUN0QixXQUFXLEVBQUUsMkJBQTJCO29CQUN4QyxXQUFXLEVBQUUsS0FBSztvQkFDbEIsT0FBTyxFQUFFLENBQUM7b0JBQ1Ysa0JBQWtCLEVBQUUsQ0FBQztvQkFDckIsVUFBVSxFQUFFLGtCQUFrQjtvQkFDOUIsYUFBYSxFQUFFLGFBQWE7b0JBQzVCLElBQUksRUFBRSxFQUFFO2lCQUNYO2dCQUNEO29CQUNJLFdBQVcsRUFBRSxZQUFZO29CQUN6QixZQUFZLEVBQUUsYUFBYTtvQkFDM0IsV0FBVyxFQUFFLHdCQUF3QjtvQkFDckMsV0FBVyxFQUFFLEtBQUs7b0JBQ2xCLE9BQU8sRUFBRSxDQUFDO29CQUNWLGtCQUFrQixFQUFFLENBQUM7b0JBQ3JCLFVBQVUsRUFBRSx1QkFBdUI7b0JBQ25DLGFBQWEsRUFBRSxhQUFhO29CQUM1QixJQUFJLEVBQUUsRUFBRTtpQkFDWDthQUNKO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKOzs7SUE5Qkcsb0RBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XG5pbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBJRGlzY292ZXJ5QXBwbGljYXRpb24ge1xuICAgIFNlcnZpY2VOYW1lOiBzdHJpbmc7XG4gICAgRnJpZW5kbHlOYW1lOiBzdHJpbmc7XG4gICAgRGVzY3JpcHRpb246IHN0cmluZztcbiAgICBCdWlsZE51bWJlcjogc3RyaW5nIHwgbnVsbDtcbiAgICBWZXJzaW9uOiBudW1iZXI7XG4gICAgRGlzY292ZXJ5U2VydmljZUlkOiBudW1iZXIgfCBudWxsO1xuICAgIFNlcnZpY2VVcmw6IHN0cmluZztcbiAgICBIZWFydGJlYXQ/OiBEYXRlO1xuICAgIElzSGlkZGVuPzogYm9vbGVhbjtcbiAgICBEaXNjb3ZlcnlUeXBlOiBzdHJpbmc7XG4gICAgSWNvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElEaXNjb3ZlcnlSZXF1ZXN0IHtcbiAgICB2YWx1ZTogSURpc2NvdmVyeUFwcGxpY2F0aW9uW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUFwcFN3aXRjaGVyU2VydmljZSB7XG4gICAgYWxsQXBwbGljYXRpb25zVXJpOiBzdHJpbmc7XG5cbiAgICBnZXRBcHBsaWNhdGlvbnMoKTogT2JzZXJ2YWJsZTxJRGlzY292ZXJ5UmVxdWVzdD47XG59XG5cbmV4cG9ydCBjb25zdCBBUFBfU1dJVENIRVJfU0VSVklDRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxJQXBwU3dpdGNoZXJTZXJ2aWNlPignSUFwcFN3aXRjaGVyU2VydmljZScpO1xuXG5leHBvcnQgaW50ZXJmYWNlIElBcHBTd2l0Y2hlckNvbmZpZyB7XG4gICAgZGlzY292ZXJ5U2VydmljZVVyaTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgQVBQX1NXSVRDSEVSX0NPTkZJRyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxJQXBwU3dpdGNoZXJDb25maWc+KCdJQXBwU3dpdGNoZXJDb25maWcnKTtcblxuZXhwb3J0IGNsYXNzIE1vY2tBcHBTd2l0Y2hlclNlcnZpY2UgaW1wbGVtZW50cyBJQXBwU3dpdGNoZXJTZXJ2aWNlIHtcbiAgICBhbGxBcHBsaWNhdGlvbnNVcmk6IHN0cmluZztcblxuICAgIGdldEFwcGxpY2F0aW9ucygpOiBPYnNlcnZhYmxlPElEaXNjb3ZlcnlSZXF1ZXN0PiB7XG4gICAgICAgIHJldHVybiBvZih7XG4gICAgICAgICAgICB2YWx1ZTogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgU2VydmljZU5hbWU6ICdNeUFwcCcsXG4gICAgICAgICAgICAgICAgICAgIEZyaWVuZGx5TmFtZTogJ015IEFwcCcsXG4gICAgICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnVGhlIGN1cnJlbnRseSBzaG93aW5nIGFwcCcsXG4gICAgICAgICAgICAgICAgICAgIEJ1aWxkTnVtYmVyOiAnMTIzJyxcbiAgICAgICAgICAgICAgICAgICAgVmVyc2lvbjogMSxcbiAgICAgICAgICAgICAgICAgICAgRGlzY292ZXJ5U2VydmljZUlkOiAxLFxuICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlVXJsOiAnaHR0cDovL215YXBwLmNvbScsXG4gICAgICAgICAgICAgICAgICAgIERpc2NvdmVyeVR5cGU6ICdBcHBsaWNhdGlvbicsXG4gICAgICAgICAgICAgICAgICAgIEljb246ICcnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFNlcnZpY2VOYW1lOiAnQW5vdGhlckFwcCcsXG4gICAgICAgICAgICAgICAgICAgIEZyaWVuZGx5TmFtZTogJ0Fub3RoZXIgQXBwJyxcbiAgICAgICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICdBcHAgd2UgY291bGQgc3dpdGNoIHRvJyxcbiAgICAgICAgICAgICAgICAgICAgQnVpbGROdW1iZXI6ICcxMjMnLFxuICAgICAgICAgICAgICAgICAgICBWZXJzaW9uOiAxLFxuICAgICAgICAgICAgICAgICAgICBEaXNjb3ZlcnlTZXJ2aWNlSWQ6IDIsXG4gICAgICAgICAgICAgICAgICAgIFNlcnZpY2VVcmw6ICdodHRwOi8vYW5vdGhlcmFwcC5jb20nLFxuICAgICAgICAgICAgICAgICAgICBEaXNjb3ZlcnlUeXBlOiAnQXBwbGljYXRpb24nLFxuICAgICAgICAgICAgICAgICAgICBJY29uOiAnJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19