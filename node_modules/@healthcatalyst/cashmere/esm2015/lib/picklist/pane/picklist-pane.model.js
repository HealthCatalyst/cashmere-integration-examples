/**
 * @fileoverview added by tsickle
 * Generated from: lib/picklist/pane/picklist-pane.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { from } from 'rxjs';
/**
 * @template T
 */
export class FilterableSelectList {
    /**
     * @param {?=} options
     */
    constructor(options = new Map()) {
        this.options = options;
        this.selectedOptions = new Map();
        this.lastClickedOption = null;
        this.filteredOptions = new Array();
        this.isActive = true;
        this.additionalRemoteOptions = 0;
        this.loadingOptions = from([]);
        this.appendingOptions = from([]);
        this.codeIsSignificant = false;
    }
}
if (false) {
    /** @type {?} */
    FilterableSelectList.prototype.selectedOptions;
    /** @type {?} */
    FilterableSelectList.prototype.lastClickedOption;
    /** @type {?} */
    FilterableSelectList.prototype.filteredOptions;
    /** @type {?} */
    FilterableSelectList.prototype.isActive;
    /** @type {?} */
    FilterableSelectList.prototype.additionalRemoteOptions;
    /** @type {?} */
    FilterableSelectList.prototype.loadingOptions;
    /** @type {?} */
    FilterableSelectList.prototype.appendingOptions;
    /** @type {?} */
    FilterableSelectList.prototype.codeIsSignificant;
    /** @type {?} */
    FilterableSelectList.prototype.sort;
    /** @type {?} */
    FilterableSelectList.prototype.options;
}
export class SubSelectList extends FilterableSelectList {
    /**
     * @param {?} parentValueSet
     * @param {?=} options
     */
    constructor(parentValueSet, options = new Map()) {
        super(options);
        this.parentValueSet = parentValueSet;
        this.options = options;
    }
}
if (false) {
    /** @type {?} */
    SubSelectList.prototype.parentValueSet;
    /** @type {?} */
    SubSelectList.prototype.options;
}
/**
 * @param {?} model
 * @return {?}
 */
export function isSubList(model) {
    /** @type {?} */
    const subList = (/** @type {?} */ (model));
    return subList && subList.parentValueSet !== undefined;
}
export class SelectListOption {
    /**
     * @param {?} option
     * @param {?} code
     */
    constructor(option, code) {
        this.option = option;
        this.code = code;
        this.selected = false;
    }
}
if (false) {
    /** @type {?} */
    SelectListOption.prototype.selected;
    /** @type {?} */
    SelectListOption.prototype.option;
    /** @type {?} */
    SelectListOption.prototype.code;
}
export class ValueListOption extends SelectListOption {
    /**
     * @param {?} option
     * @param {?} code
     */
    constructor(option, code) {
        super(option, code);
    }
}
export class ValueSetListOption extends SelectListOption {
    /**
     * @param {?} option
     * @param {?} code
     */
    constructor(option, code) {
        super(option, code);
        this.showValues = false;
        this.loadingValues = false;
        this.subValuesSelectList = new SubSelectList(this);
    }
}
if (false) {
    /** @type {?} */
    ValueSetListOption.prototype.subValuesSelectList;
    /** @type {?} */
    ValueSetListOption.prototype.showValues;
    /** @type {?} */
    ValueSetListOption.prototype.loadingValues;
}
export class PicklistValueOptions {
    constructor() {
        this.values = new Map();
        this.valueSets = new Map();
    }
}
if (false) {
    /** @type {?} */
    PicklistValueOptions.prototype.values;
    /** @type {?} */
    PicklistValueOptions.prototype.valueSets;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja2xpc3QtcGFuZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BoZWFsdGhjYXRhbHlzdC9jYXNobWVyZS8iLCJzb3VyY2VzIjpbImxpYi9waWNrbGlzdC9wYW5lL3BpY2tsaXN0LXBhbmUubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDOzs7O0FBR3RDLE1BQU0sT0FBTyxvQkFBb0I7Ozs7SUFXN0IsWUFBbUIsVUFBVSxJQUFJLEdBQUcsRUFBYTtRQUE5QixZQUFPLEdBQVAsT0FBTyxDQUF1QjtRQVYxQyxvQkFBZSxHQUFHLElBQUksR0FBRyxFQUFhLENBQUM7UUFDdkMsc0JBQWlCLEdBQWEsSUFBSSxDQUFDO1FBQ25DLG9CQUFlLEdBQUcsSUFBSSxLQUFLLEVBQUssQ0FBQztRQUNqQyxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRWhCLDRCQUF1QixHQUFHLENBQUMsQ0FBQztRQUM1QixtQkFBYyxHQUF3QixJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDL0MscUJBQWdCLEdBQXdCLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNqRCxzQkFBaUIsR0FBWSxLQUFLLENBQUM7SUFFVSxDQUFDO0NBQ3hEOzs7SUFYRywrQ0FBOEM7O0lBQzlDLGlEQUEwQzs7SUFDMUMsK0NBQXdDOztJQUN4Qyx3Q0FBdUI7O0lBRXZCLHVEQUFtQzs7SUFDbkMsOENBQXNEOztJQUN0RCxnREFBd0Q7O0lBQ3hELGlEQUEwQzs7SUFDMUMsb0NBQW9COztJQUNSLHVDQUFxQzs7QUFHckQsTUFBTSxPQUFPLGFBQWMsU0FBUSxvQkFBcUM7Ozs7O0lBQ3BFLFlBQW1CLGNBQWtDLEVBQVMsVUFBVSxJQUFJLEdBQUcsRUFBMkI7UUFDdEcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBREEsbUJBQWMsR0FBZCxjQUFjLENBQW9CO1FBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBcUM7SUFFMUcsQ0FBQztDQUNKOzs7SUFIZSx1Q0FBeUM7O0lBQUUsZ0NBQW1EOzs7Ozs7QUFLOUcsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUE2Qzs7VUFDN0QsT0FBTyxHQUFHLG1CQUFlLEtBQUssRUFBQTtJQUNwQyxPQUFPLE9BQU8sSUFBSSxPQUFPLENBQUMsY0FBYyxLQUFLLFNBQVMsQ0FBQztBQUMzRCxDQUFDO0FBRUQsTUFBTSxPQUFPLGdCQUFnQjs7Ozs7SUFHekIsWUFBbUIsTUFBVyxFQUFTLElBQVk7UUFBaEMsV0FBTSxHQUFOLE1BQU0sQ0FBSztRQUFTLFNBQUksR0FBSixJQUFJLENBQVE7UUFDL0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztDQUNKOzs7SUFMRyxvQ0FBeUI7O0lBRWIsa0NBQWtCOztJQUFFLGdDQUFtQjs7QUFLdkQsTUFBTSxPQUFPLGVBQWdCLFNBQVEsZ0JBQWdCOzs7OztJQUNqRCxZQUFZLE1BQW9CLEVBQUUsSUFBWTtRQUMxQyxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3hCLENBQUM7Q0FDSjtBQUVELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxnQkFBZ0I7Ozs7O0lBS3BELFlBQVksTUFBdUIsRUFBRSxJQUFZO1FBQzdDLEtBQUssQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFKakIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUl6QixJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNKOzs7SUFSRyxpREFBMEM7O0lBQzFDLHdDQUEwQjs7SUFDMUIsMkNBQTZCOztBQVFqQyxNQUFNLE9BQU8sb0JBQW9CO0lBQWpDO1FBQ1csV0FBTSxHQUFHLElBQUksR0FBRyxFQUEyQixDQUFDO1FBQzVDLGNBQVMsR0FBRyxJQUFJLEdBQUcsRUFBOEIsQ0FBQztJQUM3RCxDQUFDO0NBQUE7OztJQUZHLHNDQUFtRDs7SUFDbkQseUNBQXlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtmcm9tLCBPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7SVZhbHVlT3B0aW9uLCBJVmFsdWVTZXRPcHRpb259IGZyb20gJy4uL3BpY2tsaXN0Lm1vZGVsJztcblxuZXhwb3J0IGNsYXNzIEZpbHRlcmFibGVTZWxlY3RMaXN0PFQgZXh0ZW5kcyBTZWxlY3RMaXN0T3B0aW9uPiB7XG4gICAgcHVibGljIHNlbGVjdGVkT3B0aW9ucyA9IG5ldyBNYXA8c3RyaW5nLCBUPigpO1xuICAgIHB1YmxpYyBsYXN0Q2xpY2tlZE9wdGlvbjogVCB8IG51bGwgPSBudWxsO1xuICAgIHB1YmxpYyBmaWx0ZXJlZE9wdGlvbnMgPSBuZXcgQXJyYXk8VD4oKTtcbiAgICBwdWJsaWMgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgcHVibGljIGFkZGl0aW9uYWxSZW1vdGVPcHRpb25zID0gMDtcbiAgICBwdWJsaWMgbG9hZGluZ09wdGlvbnM6IE9ic2VydmFibGU8Ym9vbGVhbj4gPSBmcm9tKFtdKTtcbiAgICBwdWJsaWMgYXBwZW5kaW5nT3B0aW9uczogT2JzZXJ2YWJsZTxib29sZWFuPiA9IGZyb20oW10pO1xuICAgIHB1YmxpYyBjb2RlSXNTaWduaWZpY2FudDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHB1YmxpYyBzb3J0OiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IocHVibGljIG9wdGlvbnMgPSBuZXcgTWFwPHN0cmluZywgVD4oKSkge31cbn1cblxuZXhwb3J0IGNsYXNzIFN1YlNlbGVjdExpc3QgZXh0ZW5kcyBGaWx0ZXJhYmxlU2VsZWN0TGlzdDxWYWx1ZUxpc3RPcHRpb24+IHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcGFyZW50VmFsdWVTZXQ6IFZhbHVlU2V0TGlzdE9wdGlvbiwgcHVibGljIG9wdGlvbnMgPSBuZXcgTWFwPHN0cmluZywgVmFsdWVMaXN0T3B0aW9uPigpKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3ViTGlzdChtb2RlbDogRmlsdGVyYWJsZVNlbGVjdExpc3Q8U2VsZWN0TGlzdE9wdGlvbj4pOiBtb2RlbCBpcyBTdWJTZWxlY3RMaXN0IHtcbiAgICBjb25zdCBzdWJMaXN0ID0gPFN1YlNlbGVjdExpc3Q+bW9kZWw7XG4gICAgcmV0dXJuIHN1Ykxpc3QgJiYgc3ViTGlzdC5wYXJlbnRWYWx1ZVNldCAhPT0gdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgY2xhc3MgU2VsZWN0TGlzdE9wdGlvbiB7XG4gICAgcHVibGljIHNlbGVjdGVkOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIG9wdGlvbjogYW55LCBwdWJsaWMgY29kZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBmYWxzZTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBWYWx1ZUxpc3RPcHRpb24gZXh0ZW5kcyBTZWxlY3RMaXN0T3B0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb246IElWYWx1ZU9wdGlvbiwgY29kZTogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbiwgY29kZSk7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgVmFsdWVTZXRMaXN0T3B0aW9uIGV4dGVuZHMgU2VsZWN0TGlzdE9wdGlvbiB7XG4gICAgcHVibGljIHN1YlZhbHVlc1NlbGVjdExpc3Q6IFN1YlNlbGVjdExpc3Q7XG4gICAgcHVibGljIHNob3dWYWx1ZXMgPSBmYWxzZTtcbiAgICBwdWJsaWMgbG9hZGluZ1ZhbHVlcyA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3Iob3B0aW9uOiBJVmFsdWVTZXRPcHRpb24sIGNvZGU6IHN0cmluZykge1xuICAgICAgICBzdXBlcihvcHRpb24sIGNvZGUpO1xuICAgICAgICB0aGlzLnN1YlZhbHVlc1NlbGVjdExpc3QgPSBuZXcgU3ViU2VsZWN0TGlzdCh0aGlzKTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBQaWNrbGlzdFZhbHVlT3B0aW9ucyB7XG4gICAgcHVibGljIHZhbHVlcyA9IG5ldyBNYXA8c3RyaW5nLCBWYWx1ZUxpc3RPcHRpb24+KCk7XG4gICAgcHVibGljIHZhbHVlU2V0cyA9IG5ldyBNYXA8c3RyaW5nLCBWYWx1ZVNldExpc3RPcHRpb24+KCk7XG59XG4iXX0=