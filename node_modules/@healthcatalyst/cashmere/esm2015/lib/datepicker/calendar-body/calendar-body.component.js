/**
 * @fileoverview added by tsickle
 * Generated from: lib/datepicker/calendar-body/calendar-body.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, ElementRef, NgZone } from '@angular/core';
import { take } from 'rxjs/operators';
/**
 * An internal class that represents the data corresponding to a single calendar cell.
 * \@docs-private
 */
export class HcCalendarCell {
    /**
     * @param {?} value
     * @param {?} displayValue
     * @param {?} ariaLabel
     * @param {?} enabled
     * @param {?=} cssClasses
     */
    constructor(value, displayValue, ariaLabel, enabled, cssClasses) {
        this.value = value;
        this.displayValue = displayValue;
        this.ariaLabel = ariaLabel;
        this.enabled = enabled;
        this.cssClasses = cssClasses;
    }
}
if (false) {
    /** @type {?} */
    HcCalendarCell.prototype.value;
    /** @type {?} */
    HcCalendarCell.prototype.displayValue;
    /** @type {?} */
    HcCalendarCell.prototype.ariaLabel;
    /** @type {?} */
    HcCalendarCell.prototype.enabled;
    /** @type {?} */
    HcCalendarCell.prototype.cssClasses;
}
/**
 * An internal component used to display calendar data in a table.
 * \@docs-private
 */
export class CalendarBodyComponent {
    /**
     * @param {?} _elementRef
     * @param {?} _ngZone
     */
    constructor(_elementRef, _ngZone) {
        this._elementRef = _elementRef;
        this._ngZone = _ngZone;
        /**
         * The number of columns in the table.
         */
        this.numCols = 7;
        /**
         * The cell number of the active cell in the table.
         */
        this.activeCell = 0;
        /**
         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be
         * maintained even as the table resizes.
         */
        this.cellAspectRatio = 1;
        /**
         * Emits when a new value is selected.
         */
        this.selectedValueChange = new EventEmitter();
    }
    /**
     * @param {?} cell
     * @return {?}
     */
    _cellClicked(cell) {
        if (cell.enabled) {
            this.selectedValueChange.emit(cell.value);
        }
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        /** @type {?} */
        const columnChanges = changes.numCols;
        const { rows, numCols } = this;
        if (changes.rows || columnChanges) {
            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;
        }
        if (changes.cellAspectRatio || columnChanges || !this._cellPadding) {
            this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;
        }
        if (columnChanges || !this._cellWidth) {
            this._cellWidth = `${100 / numCols}%`;
        }
    }
    /**
     * @param {?} rowIndex
     * @param {?} colIndex
     * @return {?}
     */
    _isActiveCell(rowIndex, colIndex) {
        /** @type {?} */
        let cellNumber = rowIndex * this.numCols + colIndex;
        // Account for the fact that the first row may not have as many cells.
        if (rowIndex) {
            cellNumber -= this._firstRowOffset;
        }
        return cellNumber === this.activeCell;
    }
    /**
     * Focuses the active cell after the microtask queue is empty.
     * @return {?}
     */
    _focusActiveCell() {
        this._ngZone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            this._ngZone.onStable
                .asObservable()
                .pipe(take(1))
                .subscribe((/**
             * @return {?}
             */
            () => {
                /** @type {?} */
                const activeCell = this._elementRef.nativeElement.querySelector('.hc-calendar-body-active');
                if (activeCell) {
                    activeCell.focus();
                }
            }));
        }));
    }
}
CalendarBodyComponent.decorators = [
    { type: Component, args: [{
                selector: '[hc-calendar-body]',
                template: "<!-- Create the first row separately so we can include a special spacer cell. -->\n<tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\">\n    <!--\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\n    percentage of the width (a variant of the trick described here:\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\n  -->\n    <td *ngIf=\"rowIndex === 0 && _firstRowOffset\" aria-hidden=\"true\" class=\"hc-calendar-body-label\" [attr.colspan]=\"_firstRowOffset\"></td>\n    <td\n        *ngFor=\"let item of row; let colIndex = index\"\n        role=\"gridcell\"\n        class=\"hc-calendar-body-cell\"\n        [ngClass]=\"item.cssClasses\"\n        [tabindex]=\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\"\n        [class.hc-calendar-body-available]=\"item.enabled && !_isActiveCell(rowIndex, colIndex)\"\n        [class.hc-calendar-body-disabled]=\"!item.enabled\"\n        [class.hc-calendar-body-active]=\"_isActiveCell(rowIndex, colIndex)\"\n        [attr.aria-label]=\"item.ariaLabel\"\n        [attr.aria-disabled]=\"!item.enabled || null\"\n        [attr.aria-selected]=\"selectedValue === item.value\"\n        (click)=\"_cellClicked(item)\"\n        [style.width]=\"_cellWidth\"\n        [style.paddingTop]=\"_cellPadding\"\n        [style.paddingBottom]=\"_cellPadding\"\n    >\n        <div\n            class=\"hc-calendar-body-cell-content\"\n            [class.hc-calendar-body-selected]=\"selectedValue === item.value\"\n            [class.hc-calendar-body-today]=\"todayValue === item.value\"\n        >\n            {{ item.displayValue }}\n        </div>\n    </td>\n</tr>\n",
                host: {
                    class: 'hc-calendar-body',
                    role: 'grid',
                    'aria-readonly': 'true'
                },
                exportAs: 'hcCalendarBody',
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["@charset \"UTF-8\";body,html{font-family:\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-size:14px;color:#333}h1{font-size:2.57143rem;font-weight:300;line-height:1.2;color:#333;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}h2{font-size:1.57143rem;font-weight:600;line-height:1.5;color:#333}h3{font-size:1.28571rem;font-weight:600;line-height:1.5;color:#333}h4{font-size:1rem;font-weight:600;line-height:1.5;color:#333}p{font-size:1.14286rem;font-weight:400;line-height:1.5;color:#333}code{color:#a94c9d;font-family:Consolas,Menlo,'Ubuntu Mono',monospace;background-color:#f1f1f1;border-radius:3px;padding:3px 7px;font-size:1rem;font-weight:400;line-height:1.4}pre{border:1px solid #a1a1a1;padding:20px;margin:16px auto;border-radius:5px;display:block;background-color:#f1f1f1;font-weight:400}pre>span{font-size:1rem;line-height:1.4;padding:10px 0;background-color:#f1f1f1}pre>code{overflow-x:auto;display:block;font-size:1rem;padding:10px;line-height:1.4;background-color:#f1f1f1;color:#333;border:unset;border-radius:unset}a{text-decoration:none;color:#00aeff}a:hover{color:#33beff}a:active{color:#008bcc}.hc-font-xsm{font-size:.85714rem}.hc-font-sm{font-size:1rem}.hc-font-md{font-size:1.14286rem}.hc-font-lg{font-size:1.28571rem}.hc-font-xlg{font-size:1.57143rem}.hc-font-light{font-weight:300}.hc-font-reg{font-weight:400}.hc-font-bold,strong{font-weight:600}.hc-font-xbold{font-weight:700}.hc-text-titlecase{text-transform:capitalize}.hc-text-uppercase{text-transform:uppercase}.hc-text-lowercase{text-transform:lowercase}.hc-text-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.hc-font-em,em{color:#6d6e70;font-style:italic}article ul{list-style-type:none;display:table}article>ul>li{display:table;padding-left:20px}article ul>li:before{content:'\u2022  ';display:table-cell;padding-right:10px}article ol li ol li ol li:first-child,article ol li ol li:first-child,article ol>li:first-child,article ul li ul li ul li:first-child,article ul li ul li:first-child,article ul>li:first-child{margin-top:6px!important}article ol li ol li ol li:last-child,article ol li ol li:last-child,article ol>li:last-child,article ul li ul li ul li:last-child,article ul li ul li:last-child,article ul>li:last-child{margin-bottom:6px!important}article ol>li{padding-left:6px;margin-left:40px!important}article ul li ul li{display:table;margin-left:0}article ul li ul li:before{content:'\u2013  ';display:table-cell;padding-right:15px}article ol>li>ol>li{list-style-type:lower-alpha;padding-left:6px;margin-left:18px!important}article ul li ul li ul li:before{content:'- ';display:table-cell;padding-right:15px}article ol li ol li ol li{list-style-type:lower-roman;padding-left:10px;margin-left:12px!important}article table tbody>tr>td{vertical-align:top}article table ul li{font-size:14px;margin-left:15px!important;display:table}article table ol li{font-size:14px;margin-left:30px!important;padding-right:10px;padding-left:6px!important}article table ul li ul li{font-size:14px;padding-right:6px;margin-left:0!important;display:table}article table ul li ul li:before{padding-right:12px}article table ul li ul li ul li{font-size:14px;display:table}article table ul li ul li ul li:before{padding-right:10px}article ol li ol li ol li:first-child,article ol li ol li:first-child,article ol>li:first-child,article table ol li ol li ol>li:first-child,article table ol li ol>li:first-child,article table ol>li:first-child,article table ul li ul li ul>li:first-child,article table ul li ul>li:first-child,article table ul>li:first-child,article ul li ul li ul li:first-child,article ul li ul li:first-child,article ul>li:first-child{padding-top:6px}article ol li ol li ol li:last-child,article ol li ol li:last-child,article ol>li:last-child,article table ol li ol li ol>li:last-child,article table ol li ol>li:last-child,article table ol>li:last-child,article table ul li ul li ul>li:last-child,article table ul li ul>li:last-child,article table ul>li:last-child,article ul li ul li ul li:last-child,article ul li ul li:last-child,article ul>li:last-child{padding-bottom:6px}.hc-calendar-body{font-size:14px;min-width:224px}.hc-calendar-body-label{color:#00aeff;font-size:14px;height:0;line-height:0;padding-left:4.71429%;padding-right:4.71429%;text-align:left}[dir=rtl] .hc-calendar-body-label{text-align:right}.hc-calendar-body-cell{cursor:pointer;height:0;line-height:0;outline:0;position:relative;text-align:center}.hc-calendar-body-disabled{color:#c0c5cc}.hc-calendar-body-cell-content{-webkit-box-align:center;align-items:center;border-radius:999px;box-sizing:border-box;color:#333;display:-webkit-box;display:flex;height:90%;-webkit-box-pack:center;justify-content:center;left:5%;line-height:1;position:absolute;top:5%;width:90%;border:1px solid transparent}.hc-calendar-body-disabled .hc-calendar-body-cell-content:not(.hc-calendar-body-selected):not(.hc-calendar-body-today){color:#c0c5cc}.cdk-keyboard-focused .hc-calendar-body-active .hc-calendar-body-cell-content:not(.hc-calendar-body-selected),.cdk-program-focused .hc-calendar-body-active .hc-calendar-body-cell-content:not(.hc-calendar-body-selected),.hc-calendar-body-available:hover .hc-calendar-body-cell-content{border:2px solid #008bcc}.hc-calendar-body-selected{background-color:#008bcc;color:#fff;font-weight:700}.hc-calendar-body-disabled .hc-calendar-body-selected{background-color:#c0c5cc}.hc-calendar-body-selected.hc-calendar-body-today{box-shadow:inset 0 0 0 1px #c0c5cc}.hc-calendar-body-disabled .hc-calendar-body-today:not(.hc-calendar-body-selected),.hc-calendar-body-today:not(.hc-calendar-body-selected){background-color:#c0c5cc;border-color:transparent}"]
            }] }
];
/** @nocollapse */
CalendarBodyComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: NgZone }
];
CalendarBodyComponent.propDecorators = {
    label: [{ type: Input }],
    rows: [{ type: Input }],
    todayValue: [{ type: Input }],
    selectedValue: [{ type: Input }],
    labelMinRequiredCells: [{ type: Input }],
    numCols: [{ type: Input }],
    activeCell: [{ type: Input }],
    cellAspectRatio: [{ type: Input }],
    selectedValueChange: [{ type: Output }]
};
if (false) {
    /**
     * The label for the table. (e.g. "Jan 2017").
     * @type {?}
     */
    CalendarBodyComponent.prototype.label;
    /**
     * The cells to display in the table.
     * @type {?}
     */
    CalendarBodyComponent.prototype.rows;
    /**
     * The value in the table that corresponds to today.
     * @type {?}
     */
    CalendarBodyComponent.prototype.todayValue;
    /**
     * The value in the table that is currently selected.
     * @type {?}
     */
    CalendarBodyComponent.prototype.selectedValue;
    /**
     * The minimum number of free cells needed to fit the label in the first row.
     * @type {?}
     */
    CalendarBodyComponent.prototype.labelMinRequiredCells;
    /**
     * The number of columns in the table.
     * @type {?}
     */
    CalendarBodyComponent.prototype.numCols;
    /**
     * The cell number of the active cell in the table.
     * @type {?}
     */
    CalendarBodyComponent.prototype.activeCell;
    /**
     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be
     * maintained even as the table resizes.
     * @type {?}
     */
    CalendarBodyComponent.prototype.cellAspectRatio;
    /**
     * Emits when a new value is selected.
     * @type {?}
     */
    CalendarBodyComponent.prototype.selectedValueChange;
    /**
     * The number of blank cells to put at the beginning for the first row.
     * @type {?}
     */
    CalendarBodyComponent.prototype._firstRowOffset;
    /**
     * Padding for the individual date cells.
     * @type {?}
     */
    CalendarBodyComponent.prototype._cellPadding;
    /**
     * Width of an individual cell.
     * @type {?}
     */
    CalendarBodyComponent.prototype._cellWidth;
    /**
     * @type {?}
     * @private
     */
    CalendarBodyComponent.prototype._elementRef;
    /**
     * @type {?}
     * @private
     */
    CalendarBodyComponent.prototype._ngZone;
}
//# sourceMappingURL=data:application/json;base64,