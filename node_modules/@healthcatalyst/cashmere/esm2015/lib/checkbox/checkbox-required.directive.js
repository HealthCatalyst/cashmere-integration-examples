/**
 * @fileoverview added by tsickle
 * Generated from: lib/checkbox/checkbox-required.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/* tslint:disable:directive-selector */
import { Directive, forwardRef, HostBinding } from '@angular/core';
import { CheckboxRequiredValidator, NG_VALIDATORS } from '@angular/forms';
/** @type {?} */
export const HC_CHECKBOX_REQUIRED_VALIDATOR = {
    provide: NG_VALIDATORS,
    useExisting: forwardRef((/**
     * @return {?}
     */
    () => HcCheckboxRequiredValidatorDirective)),
    multi: true
};
/**
 * \@docs-private
 */
export class HcCheckboxRequiredValidatorDirective extends CheckboxRequiredValidator {
    /**
     * @return {?}
     */
    get isRequired() {
        return this.required ? '' : null;
    }
}
HcCheckboxRequiredValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `hc-checkbox[required][formControlName],
             hc-checkbox[required][formControl],hc-checkbox[required][ngModel]`,
                providers: [HC_CHECKBOX_REQUIRED_VALIDATOR]
            },] }
];
HcCheckboxRequiredValidatorDirective.propDecorators = {
    isRequired: [{ type: HostBinding, args: ['attr.required',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtcmVxdWlyZWQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGhlYWx0aGNhdGFseXN0L2Nhc2htZXJlLyIsInNvdXJjZXMiOlsibGliL2NoZWNrYm94L2NoZWNrYm94LXJlcXVpcmVkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQVcsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFDLHlCQUF5QixFQUFFLGFBQWEsRUFBQyxNQUFNLGdCQUFnQixDQUFDOztBQUV4RSxNQUFNLE9BQU8sOEJBQThCLEdBQWE7SUFDcEQsT0FBTyxFQUFFLGFBQWE7SUFDdEIsV0FBVyxFQUFFLFVBQVU7OztJQUFDLEdBQUcsRUFBRSxDQUFDLG9DQUFvQyxFQUFDO0lBQ25FLEtBQUssRUFBRSxJQUFJO0NBQ2Q7Ozs7QUFRRCxNQUFNLE9BQU8sb0NBQXFDLFNBQVEseUJBQXlCOzs7O0lBQy9FLElBQ0ksVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDckMsQ0FBQzs7O1lBVEosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRTsrRUFDaUU7Z0JBQzNFLFNBQVMsRUFBRSxDQUFDLDhCQUE4QixDQUFDO2FBQzlDOzs7eUJBRUksV0FBVyxTQUFDLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZTpkaXJlY3RpdmUtc2VsZWN0b3IgKi9cblxuaW1wb3J0IHtEaXJlY3RpdmUsIGZvcndhcmRSZWYsIEhvc3RCaW5kaW5nLCBQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NoZWNrYm94UmVxdWlyZWRWYWxpZGF0b3IsIE5HX1ZBTElEQVRPUlN9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuZXhwb3J0IGNvbnN0IEhDX0NIRUNLQk9YX1JFUVVJUkVEX1ZBTElEQVRPUjogUHJvdmlkZXIgPSB7XG4gICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBIY0NoZWNrYm94UmVxdWlyZWRWYWxpZGF0b3JEaXJlY3RpdmUpLFxuICAgIG11bHRpOiB0cnVlXG59O1xuXG4vKiogQGRvY3MtcHJpdmF0ZSAqL1xuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6IGBoYy1jaGVja2JveFtyZXF1aXJlZF1bZm9ybUNvbnRyb2xOYW1lXSxcbiAgICAgICAgICAgICBoYy1jaGVja2JveFtyZXF1aXJlZF1bZm9ybUNvbnRyb2xdLGhjLWNoZWNrYm94W3JlcXVpcmVkXVtuZ01vZGVsXWAsXG4gICAgcHJvdmlkZXJzOiBbSENfQ0hFQ0tCT1hfUkVRVUlSRURfVkFMSURBVE9SXVxufSlcbmV4cG9ydCBjbGFzcyBIY0NoZWNrYm94UmVxdWlyZWRWYWxpZGF0b3JEaXJlY3RpdmUgZXh0ZW5kcyBDaGVja2JveFJlcXVpcmVkVmFsaWRhdG9yIHtcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIucmVxdWlyZWQnKVxuICAgIGdldCBpc1JlcXVpcmVkKCk6IHN0cmluZyB8IG51bGwge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXF1aXJlZCA/ICcnIDogbnVsbDtcbiAgICB9XG59XG4iXX0=