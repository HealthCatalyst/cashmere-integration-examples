/**
 * @fileoverview added by tsickle
 * Generated from: lib/modal/modal-window.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { animate, state, style, transition, trigger } from '@angular/animations';
import { Component, ElementRef, HostBinding, HostListener, Input, ViewEncapsulation } from '@angular/core';
import { ActiveModal } from './active-modal';
export class ModalWindowComponent {
    /**
     * @param {?} activeModal
     * @param {?} el
     */
    constructor(activeModal, el) {
        this.activeModal = activeModal;
        this.el = el;
        this._ignoreOverlayClick = false;
        this._size = 'auto';
    }
    /**
     * @return {?}
     */
    _fadeInOut() {
        return state;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    _overlayClick(event) {
        /** @type {?} */
        let modalContentNotPresent = true;
        /** @type {?} */
        let path = this._eventPath(event);
        /** @type {?} */
        let modalWindowTargetIncluded = path.findIndex((/**
         * @param {?} p
         * @return {?}
         */
        p => p === this.el.nativeElement)) > -1;
        /** @type {?} */
        let classList = path.map((/**
         * @param {?} p
         * @return {?}
         */
        p => p.classList));
        for (let cl of classList) {
            if (cl) {
                if (cl.contains('hc-modal-content')) {
                    modalContentNotPresent = false;
                }
            }
        }
        /* The hc-modal has 100% height (although not completely visible).
            To enable closing the modal while clicking above or below the modal (in
            addition to the sides) this function will check to see if the click
            event includes:
                1. This window element
                2. Not the hc-modal-content and
                3. the overlay click option is disabled. */
        if (!this._ignoreOverlayClick && modalContentNotPresent && modalWindowTargetIncluded) {
            this.activeModal.dismiss();
        }
    }
    // Serves as a polyfill for Event.composedPath() or Event.Path
    /**
     * @param {?} evt
     * @return {?}
     */
    _eventPath(evt) {
        /** @type {?} */
        let path = (evt.composedPath && evt.composedPath()) || evt.path;
        /** @type {?} */
        let target = evt.target;
        if (path != null) {
            // Safari doesn't include Window, but it should.
            return path.indexOf(window) < 0 ? path.concat(window) : path;
        }
        if (target === window) {
            return [window];
        }
        /**
         * @param {?} node
         * @param {?=} memo
         * @return {?}
         */
        function _getParents(node, memo) {
            memo = memo || [];
            /** @type {?} */
            let parentNode = node.parentNode;
            if (!parentNode) {
                return memo;
            }
            else {
                return _getParents(parentNode, memo.concat(parentNode));
            }
        }
        return [target].concat(_getParents(target), window);
    }
}
ModalWindowComponent.decorators = [
    { type: Component, args: [{
                selector: 'hc-modal-window',
                template: `
        <div [class]="'hc-modal hc-modal-' + _size"><ng-content></ng-content></div>
    `,
                encapsulation: ViewEncapsulation.None,
                // tslint:disable-next-line: no-host-metadata-property
                host: { class: 'hc-modal-window' },
                animations: [
                    trigger('fadeInOut', [
                        state('in', style({ opacity: 1 })),
                        transition('void <=> *', [
                            style({
                                opacity: 0
                            }),
                            animate('0.2s ease-in-out')
                        ])
                    ])
                ],
                styles: [".hc-modal-window{-webkit-box-align:center;align-items:center;bottom:0;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;left:0;position:fixed;right:0;top:0}.hc-modal{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:calc(100% - 50px);-webkit-box-pack:center;justify-content:center;max-height:calc(100% - 50px);min-height:135px}.hc-modal-auto{width:auto}.hc-modal-sm{width:300px}.hc-modal-md{width:500px}.hc-modal-lg{width:800px}.hc-modal-xl{width:992px}"]
            }] }
];
/** @nocollapse */
ModalWindowComponent.ctorParameters = () => [
    { type: ActiveModal },
    { type: ElementRef }
];
ModalWindowComponent.propDecorators = {
    _ignoreOverlayClick: [{ type: Input }],
    _size: [{ type: Input }],
    _fadeInOut: [{ type: HostBinding, args: ['@fadeInOut',] }],
    _overlayClick: [{ type: HostListener, args: ['mousedown', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    ModalWindowComponent.prototype._ignoreOverlayClick;
    /** @type {?} */
    ModalWindowComponent.prototype._size;
    /**
     * @type {?}
     * @private
     */
    ModalWindowComponent.prototype.activeModal;
    /**
     * @type {?}
     * @private
     */
    ModalWindowComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtd2luZG93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BoZWFsdGhjYXRhbHlzdC9jYXNobWVyZS8iLCJzb3VyY2VzIjpbImxpYi9tb2RhbC9tb2RhbC13aW5kb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUUvRSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUF1QjNDLE1BQU0sT0FBTyxvQkFBb0I7Ozs7O0lBTTdCLFlBQW9CLFdBQXdCLEVBQVUsRUFBYztRQUFoRCxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUFVLE9BQUUsR0FBRixFQUFFLENBQVk7UUFKcEUsd0JBQW1CLEdBQUcsS0FBSyxDQUFDO1FBRTVCLFVBQUssR0FBYyxNQUFNLENBQUM7SUFFNkMsQ0FBQzs7OztJQUd4RSxVQUFVO1FBQ04sT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQzs7Ozs7SUFHRCxhQUFhLENBQUMsS0FBVTs7WUFDaEIsc0JBQXNCLEdBQUcsSUFBSTs7WUFDN0IsSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDOztZQUM3Qix5QkFBeUIsR0FBRyxJQUFJLENBQUMsU0FBUzs7OztRQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFDLEdBQUcsQ0FBQyxDQUFDOztZQUNqRixTQUFTLEdBQWlDLElBQUksQ0FBQyxHQUFHOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFDO1FBQ3hFLEtBQUssSUFBSSxFQUFFLElBQUksU0FBUyxFQUFFO1lBQ3RCLElBQUksRUFBRSxFQUFFO2dCQUNKLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFO29CQUNqQyxzQkFBc0IsR0FBRyxLQUFLLENBQUM7aUJBQ2xDO2FBQ0o7U0FDSjtRQUVEOzs7Ozs7MkRBTW1EO1FBQ25ELElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLElBQUksc0JBQXNCLElBQUkseUJBQXlCLEVBQUU7WUFDbEYsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUM5QjtJQUNMLENBQUM7Ozs7OztJQUdELFVBQVUsQ0FBQyxHQUFROztZQUNYLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxZQUFZLElBQUksR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUk7O1lBQzNELE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTTtRQUV2QixJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7WUFDZCxnREFBZ0Q7WUFDaEQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1NBQ2hFO1FBRUQsSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO1lBQ25CLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNuQjs7Ozs7O1FBRUQsU0FBUyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUs7WUFDNUIsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7O2dCQUNkLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVTtZQUVoQyxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNiLE9BQU8sSUFBSSxDQUFDO2FBQ2Y7aUJBQU07Z0JBQ0gsT0FBTyxXQUFXLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQzthQUMzRDtRQUNMLENBQUM7UUFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN4RCxDQUFDOzs7WUF0RkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLFFBQVEsRUFBRTs7S0FFVDtnQkFDRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7Z0JBRXJDLElBQUksRUFBRSxFQUFDLEtBQUssRUFBRSxpQkFBaUIsRUFBQztnQkFFaEMsVUFBVSxFQUFFO29CQUNSLE9BQU8sQ0FBQyxXQUFXLEVBQUU7d0JBQ2pCLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUMsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7d0JBQ2hDLFVBQVUsQ0FBQyxZQUFZLEVBQUU7NEJBQ3JCLEtBQUssQ0FBQztnQ0FDRixPQUFPLEVBQUUsQ0FBQzs2QkFDYixDQUFDOzRCQUNGLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQzt5QkFDOUIsQ0FBQztxQkFDTCxDQUFDO2lCQUNMOzthQUNKOzs7O1lBdEJPLFdBQVc7WUFEQSxVQUFVOzs7a0NBeUJ4QixLQUFLO29CQUVMLEtBQUs7eUJBS0wsV0FBVyxTQUFDLFlBQVk7NEJBS3hCLFlBQVksU0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7Ozs7SUFackMsbURBQzRCOztJQUM1QixxQ0FDMEI7Ozs7O0lBRWQsMkNBQWdDOzs7OztJQUFFLGtDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YW5pbWF0ZSwgc3RhdGUsIHN0eWxlLCB0cmFuc2l0aW9uLCB0cmlnZ2VyfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7TW9kYWxTaXplfSBmcm9tICcuL21vZGFsLW9wdGlvbnMnO1xuaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0FjdGl2ZU1vZGFsfSBmcm9tICcuL2FjdGl2ZS1tb2RhbCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaGMtbW9kYWwtd2luZG93JyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8ZGl2IFtjbGFzc109XCInaGMtbW9kYWwgaGMtbW9kYWwtJyArIF9zaXplXCI+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PjwvZGl2PlxuICAgIGAsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWhvc3QtbWV0YWRhdGEtcHJvcGVydHlcbiAgICBob3N0OiB7Y2xhc3M6ICdoYy1tb2RhbC13aW5kb3cnfSxcbiAgICBzdHlsZVVybHM6IFsnLi9tb2RhbC13aW5kb3cuY29tcG9uZW50LnNjc3MnXSxcbiAgICBhbmltYXRpb25zOiBbXG4gICAgICAgIHRyaWdnZXIoJ2ZhZGVJbk91dCcsIFtcbiAgICAgICAgICAgIHN0YXRlKCdpbicsIHN0eWxlKHtvcGFjaXR5OiAxfSkpLFxuICAgICAgICAgICAgdHJhbnNpdGlvbigndm9pZCA8PT4gKicsIFtcbiAgICAgICAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBhbmltYXRlKCcwLjJzIGVhc2UtaW4tb3V0JylcbiAgICAgICAgICAgIF0pXG4gICAgICAgIF0pXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBNb2RhbFdpbmRvd0NvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBfaWdub3JlT3ZlcmxheUNsaWNrID0gZmFsc2U7XG4gICAgQElucHV0KClcbiAgICBfc2l6ZTogTW9kYWxTaXplID0gJ2F1dG8nO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBhY3RpdmVNb2RhbDogQWN0aXZlTW9kYWwsIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHt9XG5cbiAgICBASG9zdEJpbmRpbmcoJ0BmYWRlSW5PdXQnKVxuICAgIF9mYWRlSW5PdXQoKSB7XG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCdtb3VzZWRvd24nLCBbJyRldmVudCddKVxuICAgIF9vdmVybGF5Q2xpY2soZXZlbnQ6IGFueSkge1xuICAgICAgICBsZXQgbW9kYWxDb250ZW50Tm90UHJlc2VudCA9IHRydWU7XG4gICAgICAgIGxldCBwYXRoID0gdGhpcy5fZXZlbnRQYXRoKGV2ZW50KTtcbiAgICAgICAgbGV0IG1vZGFsV2luZG93VGFyZ2V0SW5jbHVkZWQgPSBwYXRoLmZpbmRJbmRleChwID0+IHAgPT09IHRoaXMuZWwubmF0aXZlRWxlbWVudCkgPiAtMTtcbiAgICAgICAgbGV0IGNsYXNzTGlzdDogKERPTVRva2VuTGlzdCB8IHVuZGVmaW5lZClbXSA9IHBhdGgubWFwKHAgPT4gcC5jbGFzc0xpc3QpO1xuICAgICAgICBmb3IgKGxldCBjbCBvZiBjbGFzc0xpc3QpIHtcbiAgICAgICAgICAgIGlmIChjbCkge1xuICAgICAgICAgICAgICAgIGlmIChjbC5jb250YWlucygnaGMtbW9kYWwtY29udGVudCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGFsQ29udGVudE5vdFByZXNlbnQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKiBUaGUgaGMtbW9kYWwgaGFzIDEwMCUgaGVpZ2h0IChhbHRob3VnaCBub3QgY29tcGxldGVseSB2aXNpYmxlKS5cbiAgICAgICAgICAgIFRvIGVuYWJsZSBjbG9zaW5nIHRoZSBtb2RhbCB3aGlsZSBjbGlja2luZyBhYm92ZSBvciBiZWxvdyB0aGUgbW9kYWwgKGluXG4gICAgICAgICAgICBhZGRpdGlvbiB0byB0aGUgc2lkZXMpIHRoaXMgZnVuY3Rpb24gd2lsbCBjaGVjayB0byBzZWUgaWYgdGhlIGNsaWNrXG4gICAgICAgICAgICBldmVudCBpbmNsdWRlczpcbiAgICAgICAgICAgICAgICAxLiBUaGlzIHdpbmRvdyBlbGVtZW50XG4gICAgICAgICAgICAgICAgMi4gTm90IHRoZSBoYy1tb2RhbC1jb250ZW50IGFuZFxuICAgICAgICAgICAgICAgIDMuIHRoZSBvdmVybGF5IGNsaWNrIG9wdGlvbiBpcyBkaXNhYmxlZC4gKi9cbiAgICAgICAgaWYgKCF0aGlzLl9pZ25vcmVPdmVybGF5Q2xpY2sgJiYgbW9kYWxDb250ZW50Tm90UHJlc2VudCAmJiBtb2RhbFdpbmRvd1RhcmdldEluY2x1ZGVkKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZU1vZGFsLmRpc21pc3MoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFNlcnZlcyBhcyBhIHBvbHlmaWxsIGZvciBFdmVudC5jb21wb3NlZFBhdGgoKSBvciBFdmVudC5QYXRoXG4gICAgX2V2ZW50UGF0aChldnQ6IGFueSkge1xuICAgICAgICBsZXQgcGF0aCA9IChldnQuY29tcG9zZWRQYXRoICYmIGV2dC5jb21wb3NlZFBhdGgoKSkgfHwgZXZ0LnBhdGgsXG4gICAgICAgICAgICB0YXJnZXQgPSBldnQudGFyZ2V0O1xuXG4gICAgICAgIGlmIChwYXRoICE9IG51bGwpIHtcbiAgICAgICAgICAgIC8vIFNhZmFyaSBkb2Vzbid0IGluY2x1ZGUgV2luZG93LCBidXQgaXQgc2hvdWxkLlxuICAgICAgICAgICAgcmV0dXJuIHBhdGguaW5kZXhPZih3aW5kb3cpIDwgMCA/IHBhdGguY29uY2F0KHdpbmRvdykgOiBwYXRoO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRhcmdldCA9PT0gd2luZG93KSB7XG4gICAgICAgICAgICByZXR1cm4gW3dpbmRvd107XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBfZ2V0UGFyZW50cyhub2RlLCBtZW1vPykge1xuICAgICAgICAgICAgbWVtbyA9IG1lbW8gfHwgW107XG4gICAgICAgICAgICBsZXQgcGFyZW50Tm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcblxuICAgICAgICAgICAgaWYgKCFwYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0UGFyZW50cyhwYXJlbnROb2RlLCBtZW1vLmNvbmNhdChwYXJlbnROb2RlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gW3RhcmdldF0uY29uY2F0KF9nZXRQYXJlbnRzKHRhcmdldCksIHdpbmRvdyk7XG4gICAgfVxufVxuIl19