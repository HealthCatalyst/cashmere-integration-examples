/**
 * @fileoverview added by tsickle
 * Generated from: lib/shared/work-tracker.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ReplaySubject } from 'rxjs';
export class WorkTrackerService {
    /**
     * @param {?} task
     * @return {?}
     */
    start(task) {
        /** @type {?} */
        let working = new ReplaySubject();
        working.next(true);
        task()
            .then((/**
         * @return {?}
         */
        () => {
            working.next(false);
        }))
            .catch((/**
         * @return {?}
         */
        () => {
            working.next(false);
        }));
        return working.asObservable();
    }
    /**
     * @param {?} task
     * @return {?}
     */
    startObservable(task) {
        /** @type {?} */
        let working = new ReplaySubject();
        /** @type {?} */
        let taskSubscription = task();
        working.next(true);
        taskSubscription.add((/**
         * @return {?}
         */
        () => {
            working.next(false);
            taskSubscription.unsubscribe();
        }));
        return working.asObservable();
    }
}
WorkTrackerService.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29yay10cmFja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGVhbHRoY2F0YWx5c3QvY2FzaG1lcmUvIiwic291cmNlcyI6WyJsaWIvc2hhcmVkL3dvcmstdHJhY2tlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQWEsYUFBYSxFQUFlLE1BQU0sTUFBTSxDQUFDO0FBRzdELE1BQU0sT0FBTyxrQkFBa0I7Ozs7O0lBQ3BCLEtBQUssQ0FBQyxJQUF3Qjs7WUFDN0IsT0FBTyxHQUFHLElBQUksYUFBYSxFQUFXO1FBQzFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkIsSUFBSSxFQUFFO2FBQ0QsSUFBSTs7O1FBQUMsR0FBRyxFQUFFO1lBQ1AsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QixDQUFDLEVBQUM7YUFDRCxLQUFLOzs7UUFBQyxHQUFHLEVBQUU7WUFDUixPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hCLENBQUMsRUFBQyxDQUFDO1FBRVAsT0FBTyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDbEMsQ0FBQzs7Ozs7SUFFTSxlQUFlLENBQUMsSUFBd0I7O1lBQ3ZDLE9BQU8sR0FBRyxJQUFJLGFBQWEsRUFBVzs7WUFDdEMsZ0JBQWdCLEdBQUcsSUFBSSxFQUFFO1FBQzdCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbkIsZ0JBQWdCLENBQUMsR0FBRzs7O1FBQUMsR0FBRyxFQUFFO1lBQ3RCLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEIsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkMsQ0FBQyxFQUFDLENBQUM7UUFFSCxPQUFPLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNsQyxDQUFDOzs7WUEzQkosVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge09ic2VydmFibGUsIFJlcGxheVN1YmplY3QsIFN1YnNjcmlwdGlvbn0gZnJvbSAncnhqcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBXb3JrVHJhY2tlclNlcnZpY2Uge1xuICAgIHB1YmxpYyBzdGFydCh0YXNrOiAoKSA9PiBQcm9taXNlPGFueT4pOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICAgICAgbGV0IHdvcmtpbmcgPSBuZXcgUmVwbGF5U3ViamVjdDxib29sZWFuPigpO1xuICAgICAgICB3b3JraW5nLm5leHQodHJ1ZSk7XG4gICAgICAgIHRhc2soKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHdvcmtpbmcubmV4dChmYWxzZSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKCgpID0+IHtcbiAgICAgICAgICAgICAgICB3b3JraW5nLm5leHQoZmFsc2UpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHdvcmtpbmcuYXNPYnNlcnZhYmxlKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXJ0T2JzZXJ2YWJsZSh0YXNrOiAoKSA9PiBTdWJzY3JpcHRpb24pOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICAgICAgbGV0IHdvcmtpbmcgPSBuZXcgUmVwbGF5U3ViamVjdDxib29sZWFuPigpO1xuICAgICAgICBsZXQgdGFza1N1YnNjcmlwdGlvbiA9IHRhc2soKTtcbiAgICAgICAgd29ya2luZy5uZXh0KHRydWUpO1xuXG4gICAgICAgIHRhc2tTdWJzY3JpcHRpb24uYWRkKCgpID0+IHtcbiAgICAgICAgICAgIHdvcmtpbmcubmV4dChmYWxzZSk7XG4gICAgICAgICAgICB0YXNrU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB3b3JraW5nLmFzT2JzZXJ2YWJsZSgpO1xuICAgIH1cbn1cbiJdfQ==