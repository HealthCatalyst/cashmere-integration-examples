import { AfterContentInit, EventEmitter } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
export declare function validateAlignInput(inputStr: string): void;
/** Parent component that can have a `<hc-accordion-toolbar>` and content that is collapsable */
export declare class AccordionComponent implements AfterContentInit {
    private _animationDisabled;
    private _currentlyAnimating;
    private _hideToolbar;
    private _toolbarTrigger;
    private _triggerAlign;
    private __isOpen;
    /** Side the accordion trigger is attached to: `left` or `right` */
    triggerAlign: string;
    /** Whether the entire width of the accordion bar is clickable, or only the down arrow button; default = true */
    toolbarTrigger: boolean;
    /** Hide toolbar. */
    hideToolbar: boolean;
    /** Whether the accordion is opened. */
    open: boolean;
    /** Allows for two-way binding of the `open` property */
    openChange: EventEmitter<boolean>;
    /** Event emitted when accordion is opened. */
    opened: EventEmitter<any>;
    /** Event emitted when accordion has started to open. */
    openStart: EventEmitter<any>;
    /** Event emitted when accordion is closed. */
    closed: EventEmitter<any>;
    /** Event emitted when accordion has started to close. */
    closeStart: EventEmitter<any>;
    _hostClass: boolean;
    readonly _alignment: string;
    readonly _pointer: string;
    readonly _openState: 'void' | 'open-instant' | 'open';
    _animationStart(event: AnimationEvent): void;
    _animationEnd(event: AnimationEvent): void;
    readonly _isOpened: boolean;
    readonly _isOpening: boolean;
    readonly _isClosed: boolean;
    readonly _isClosing: boolean;
    ngAfterContentInit(): void;
    _triggerClick(event: Event, toolbarClick: boolean): void;
    /** Opens accordion. */
    toggleOpen(): void;
    /** Closes accordion. */
    toggleClose(): void;
    /** Toggle this accordion. */
    toggle(isOpen?: boolean): void;
}
