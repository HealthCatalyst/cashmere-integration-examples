import { AfterViewInit, ChangeDetectorRef, ElementRef, QueryList, OnDestroy } from '@angular/core';
import { HcPopoverAnchorDirective } from '../pop/directives/popover-anchor.directive';
import { MoreItem } from './more-item';
import { NavbarLinkComponent } from './navbar-link/navbar-link.component';
import { NavbarMobileMenuComponent } from './navbar-mobile-menu/navbar-mobile-menu.component';
import { HcIcon } from '../icon/icon.component';
/** The navbar is a wrapper that positions branding, navigation, and other elements in a concise header. */
export declare class NavbarComponent implements AfterViewInit, OnDestroy {
    private ref;
    /** Display name of current user */
    user: string;
    /** Url to application logo image file */
    appIcon: string;
    /** Either url to brand icon image file or HcIcon object for a font glyph */
    brandIcon: string | HcIcon;
    /** Router link triggered when home icon is clicked */
    homeUri: any[] | string;
    /** Fixes the position of navbar to the top of the page. *Default is false.* */
    fixedTop: boolean;
    _mobileMenu: QueryList<NavbarMobileMenuComponent>;
    _navLinks: QueryList<NavbarLinkComponent>;
    navbarContent: ElementRef;
    navContent: ElementRef;
    _navbarMore: HcPopoverAnchorDirective;
    private unsubscribe$;
    private _menuOpen;
    private _linkWidths;
    private _linksTotalWidth;
    _collapse: boolean;
    _moreList: Array<MoreItem>;
    _navResize(): void;
    constructor(ref: ChangeDetectorRef);
    /** Forces a recalculation of the navbar links to determine how many should be rolling into a More menu.
     * Call this if you've updated the contents of any navbar links. */
    refreshNavLinks(): void;
    private _collectNavLinkWidths;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    _toggleMobileMenu(): void;
    _menuClick(event: any): void;
    readonly _mobileMenuIcon: string;
    _moreClick(): void;
    _brandIconType(): string;
    _brandIconSet(): string;
    _brandIconGlyph(): string;
    _brandIconSize(): string;
}
