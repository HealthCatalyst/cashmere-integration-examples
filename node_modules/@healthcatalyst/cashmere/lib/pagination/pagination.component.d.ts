import { OnInit } from '@angular/core';
import { BasePaginationComponent } from './base-pagination';
/** The pagination control enables the user to navigate across paged content.
 * Although commonly used with tables and data grids, this control may be used any place where paged data is used.
 * @inheritdoc
 * */
export declare class PaginationComponent extends BasePaginationComponent implements OnInit {
    /** The set of provided page size options to display to the user. *Defaults to [10, 20, 50].* */
    pageSizeOptions: number[];
    private _pageSizeOptions;
    isFocused: boolean;
    /** Displayed set of page size options. Will be sorted and include current page size. */
    _displayedPageSizeOptions: number[];
    /** Whether to hide the page size selection UI from the user. *Defaults to false.* */
    hidePageSize: boolean;
    private _hidePageSize;
    ngOnInit(): void;
    readonly _visiblePages: Array<number | null>;
    readonly _collapsedVisiblePages: Array<number | null>;
    _pageSizeUpdated(): void;
    _previousPage(): void;
    _goToPage(pageNum: number): void;
    _nextPage(): void;
    /**
     * Changes the page size so that the first item displayed on the page will still be
     * displayed using the new page size.
     *
     * For example, if the page size is 10 and on the second page (items indexed 11-20) then
     * switching so that the page size is 5 will set the third page as the current page so
     * that the 11th item will still be displayed.
     */
    _changePageSize(pageSize: number): void;
    /**
     * Updates the list of page size options to display to the user. Includes making sure that
     * the page size is an option and that the list is sorted.
     */
    private _updateDisplayedPageSizeOptions;
}
