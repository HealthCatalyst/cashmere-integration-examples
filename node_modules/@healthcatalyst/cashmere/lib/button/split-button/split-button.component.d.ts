import { ElementRef, EventEmitter } from '@angular/core';
import { ButtonComponent } from '../button.component';
import { HcPopComponent } from '../../pop/popover.component';
/** SplitButton click event */
export declare class SplitButtonClickEvent {
    source: SplitButtonComponent;
    constructor(source: SplitButtonComponent);
}
/** Split button provides a primary action button along with a secondary menu of actions */
export declare class SplitButtonComponent {
    private elementRef;
    private _tabIndex;
    private _disabled;
    private _style;
    private _size;
    _splitBtnToggle: ButtonComponent;
    _splitMenu: HcPopComponent;
    /** Primary button's click event */
    click: EventEmitter<SplitButtonClickEvent>;
    /** Additional information shown as tooltip */
    title: string;
    /** Positioning for the menu. Possible values: 'start', 'end', 'center' */
    menuPosition: string;
    /** True if clicking anywhere in the menu should automatically close it. */
    autoCloseMenuOnClick: boolean;
    /** Type of button. Possible values: 'submit', 'reset', 'button' */
    type: string;
    /** Used as a reference in JavaScript, or to reference form data after a form is submitted */
    name: string;
    /** Value of primary button when submitted within a form */
    value: string;
    /** Button tabindex */
    tabIndex: number;
    /**
     * @deprecated
     * @description Use `buttonStyle` instead
     * */
    color: string;
    /** Sets style of button. Choose from: `'primary' | 'primary-alt' | 'destructive' | 'neutral' | 'secondary' | 'link' | 'link-inline'` */
    buttonStyle: string;
    /** Sets size of button. Choose from: `'sm' | 'md' | 'lg'` */
    size: string;
    /** Whether the control is disabled. */
    disabled: boolean;
    readonly _hostClass: boolean;
    constructor(elementRef: ElementRef);
    _stopClick($event: MouseEvent): void;
    /** Used to give focus to the button */
    focus(): void;
    _mainBtnClick(event: MouseEvent): void;
    /** Manually close the menu */
    closeMenu(): void;
    /** Manually open the menu */
    openMenu(): void;
}
