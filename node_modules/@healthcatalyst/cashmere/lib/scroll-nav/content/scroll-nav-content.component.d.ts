import { AfterViewInit, OnDestroy, EventEmitter, AfterViewChecked } from '@angular/core';
import { CdkScrollable } from '@angular/cdk/scrolling';
import { HcScrollNavComponent } from '../nav/scroll-nav.component';
/** Contains scrollable content that is navigable via `hc-scroll-nav` links. */
export declare class HcScrollNavContentComponent implements AfterViewInit, AfterViewChecked, OnDestroy {
    private readonly DEFAULT_BUFFER;
    /** Reference to the scroll nav component. */
    nav: HcScrollNavComponent;
    /** If true, will force the height of the final scroll target area to be the height of the scrollable container.
     * This is helpful if you want the last target in the content area to be able to scroll to the top. You can alternatively
     * target the last item with css. *Defaults to true.* */
    makeLastTargetFullHeight: boolean;
    /** Number in pixels, used to give a little leeway in the shifting of the active nav when scrolling. *Defaults to 40.*
     * Example: Left at default, if showing just the bottom 40 pixels of the section before, count the next section as active. */
    bufferSpace: number;
    /** If true, applies smooth scrolling via css. *Defaults to true.* */
    shouldAnimateScroll: boolean;
    /** Fires when a new section is scrolled into view. Broadcasts the id of that section. */
    newSectionInView: EventEmitter<string>;
    _cdkScrollableElement: CdkScrollable;
    private targets;
    /** Id of the current section scrolled into view. */
    sectionInView: string;
    readonly _scrollTargets: Array<HTMLElement>;
    private unsubscribe$;
    private minHeightForLastTargetSet;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    _onWindowResize(): void;
    /** Scroll to top and reset the "automatic full height for the last item" setting. */
    refresh(): void;
    /** Helper function to scroll to the top of the content area. */
    scrollToTop(): void;
    /** Will update the navigation state. */
    checkActiveSection(): void;
    private insureMinHeightForLastTarget;
    private setActiveClass;
}
