import { ModalOverlayComponent } from './modal-overlay.component';
import { ComponentRef, EventEmitter } from '@angular/core';
import { ModalWindowComponent } from './modal-window.component';
import { Observable } from 'rxjs';
export declare class HcModal<T> {
    /** Allows direct access to the component used to create the modal. Null when TemplateRef is used */
    componentRef: ComponentRef<T> | null;
    /** Allows direct access to overlay component which holds the component/template */
    overlay: ComponentRef<ModalOverlayComponent> | null;
    /** Allows direct access to window component which holds the component/template */
    window: ComponentRef<ModalWindowComponent> | null;
    /** Subscribe to result in order to get access to modal result values passed in ActiveModal.close() */
    readonly result: Observable<any>;
    private _result;
    _removeOpenClass: (() => void) | null;
    _modalClose: EventEmitter<any>;
    /** Data that was passed in through ModalOptions */
    data?: any;
    /** Closes the modal with a result.
     * Use this close method when opening a modal using a TemplateRef.
     * To close a modal that was created from a Component, inject ActiveModal and use the close method
     * on ActiveModal */
    close(result?: any): void;
    /** Dismisses the modal with no result.
     * Use this dismiss method when opening a modal using a TemplateRef.
     * To dismiss a modal that was created from a Component, inject ActiveModal and use the dismiss method
     * on ActiveModal */
    dismiss(): void;
    private removeModalElements;
}
