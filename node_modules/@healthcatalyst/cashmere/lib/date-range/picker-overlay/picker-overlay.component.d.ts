import { OnInit, AfterViewInit, QueryList, ChangeDetectorRef } from '@angular/core';
import { DateRangeOptions, PresetItem } from '../model/model';
import { OverlayRef } from '@angular/cdk/overlay';
import { ConfigStoreService } from '../services/config-store.service';
import { D } from '../../datepicker/datetime/date-formats';
import { CalendarWrapperComponent } from '../calendar-wrapper/calendar-wrapper.component';
import { Observable } from 'rxjs';
export declare class PickerOverlayComponent implements OnInit, AfterViewInit {
    configStoreService: ConfigStoreService;
    private overlayRef;
    private cd;
    options$: Observable<DateRangeOptions>;
    _fromDate: D | undefined;
    _toDate: D | undefined;
    _selectedPreset: number | null;
    _rangeIsInvalid: boolean;
    _presetValues: PresetItem[] | undefined;
    _skipRangeCheck: boolean;
    __fromDate: D | undefined;
    __toDate: D | undefined;
    __selectedPreset: number | null;
    __rangeIsInvalid: boolean;
    calendarWrappers: QueryList<CalendarWrapperComponent>;
    constructor(configStoreService: ConfigStoreService, overlayRef: OverlayRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    _updateFromDate(date?: D): void;
    _updateToDate(date?: D): void;
    _updateRangeByPreset(index: number): void;
    _isRangePreset(): void;
    _applyNewDates(): void;
    _validateRange(): void;
    _discardNewDates(): void;
}
