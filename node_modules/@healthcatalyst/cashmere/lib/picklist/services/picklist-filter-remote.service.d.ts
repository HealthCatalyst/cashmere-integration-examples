import { Subscription } from 'rxjs';
import { PicklistFilterService } from './picklist-filter.service';
import { PicklistStateService } from './picklist-state.service';
import { FilterableSelectList, ValueListOption, ValueSetListOption } from '../pane/picklist-pane.model';
import { PicklistValueType } from '../picklist.model';
export declare class PicklistFilterRemoteService {
    private stateService;
    filterService?: PicklistFilterService;
    readonly valueList: FilterableSelectList<ValueListOption>;
    readonly valueSetList: FilterableSelectList<ValueSetListOption>;
    readonly searchTerm: string;
    currentValuePage: number;
    currentValueSetPage: number;
    private cancelSearch;
    private readonly cancelSearch$;
    private options$;
    constructor(stateService: PicklistStateService);
    reset(filterService: PicklistFilterService): void;
    filter(type?: PicklistValueType, shouldAppend?: boolean, selectAllCount?: number | null): Subscription;
    private processIncomingRemoteOptions;
    private processPagedValues;
    private processPagedValueSets;
    private buildRemoteQueryParams;
    private buildPageSettings;
    private resetPagingForSelectAllIfNeeded;
    private clearLists;
    private clearFilteredOptions;
}
