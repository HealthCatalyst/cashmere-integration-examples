import { WorkTrackerService } from '../../shared/work-tracker.service';
import { PicklistFilterService } from './picklist-filter.service';
import { PicklistValuesetMovingService } from './picklist-valueset-moving.service';
import { PicklistFilterLocalService } from './picklist-filter-local.service';
import { PicklistStateService } from './picklist-state.service';
import { PicklistPaneComponent } from '../pane/picklist-pane.component';
import { PicklistOptionsSource, PicklistSettings } from '../picklist.model';
import { FilterableSelectList, PicklistValueOptions, ValueListOption, ValueSetListOption } from '../pane/picklist-pane.model';
/**
 * Handles loading + moving items to/from list
 */
export declare class PicklistService {
    private workTracker;
    private filterService;
    private localFilterService;
    private valuesetMovingService;
    private stateService;
    readonly pane: PicklistPaneComponent;
    readonly picklist: PicklistSettings;
    readonly optionsSource: PicklistOptionsSource;
    readonly valueList: FilterableSelectList<ValueListOption>;
    readonly valueSetList: FilterableSelectList<ValueSetListOption>;
    readonly totalValuesCount: number;
    readonly totalValueSetsCount: number;
    constructor(workTracker: WorkTrackerService, filterService: PicklistFilterService, localFilterService: PicklistFilterLocalService, valuesetMovingService: PicklistValuesetMovingService, stateService: PicklistStateService);
    reset(settings: PicklistSettings, optionsSource: PicklistOptionsSource, pane: PicklistPaneComponent): void;
    addOptions(listOptions: PicklistValueOptions): void;
    moveOutSelectedOptions(shouldBreakValuesets?: boolean): PicklistValueOptions;
    loadValuesForValueset(valueset: ValueSetListOption): void;
}
