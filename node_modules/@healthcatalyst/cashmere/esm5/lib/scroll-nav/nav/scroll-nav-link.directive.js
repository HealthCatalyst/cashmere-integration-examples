/**
 * @fileoverview added by tsickle
 * Generated from: lib/scroll-nav/nav/scroll-nav-link.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostBinding, ElementRef, Input, HostListener } from '@angular/core';
/**
 * Marks the host element as a link within an `hc-scroll-nav`.
 */
var ScrollNavLinkDirective = /** @class */ (function () {
    function ScrollNavLinkDirective(_el) {
        this._el = _el;
        this._hostClass = true;
    }
    /**
     * @return {?}
     */
    ScrollNavLinkDirective.prototype._onClick = /**
     * @return {?}
     */
    function () {
        this.navigateToSection(this.hcScrollLink);
    };
    /**
     * @private
     * @param {?} id
     * @return {?}
     */
    ScrollNavLinkDirective.prototype.navigateToSection = /**
     * @private
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var el = document.getElementById(id);
        if (!el) {
            throw new Error("Failed to navigate. Could not find the element with the id: " + id + ".");
        }
        else {
            el.scrollIntoView();
        }
    };
    ScrollNavLinkDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[hcScrollLink]'
                },] }
    ];
    /** @nocollapse */
    ScrollNavLinkDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ScrollNavLinkDirective.propDecorators = {
        hcScrollLink: [{ type: Input }],
        _hostClass: [{ type: HostBinding, args: ['class.hc-scroll-nav-link',] }],
        _onClick: [{ type: HostListener, args: ['click',] }]
    };
    return ScrollNavLinkDirective;
}());
export { ScrollNavLinkDirective };
if (false) {
    /**
     * The `id` of the corresponding `hcScrollTarget` that you would like to link to.
     * @type {?}
     */
    ScrollNavLinkDirective.prototype.hcScrollLink;
    /** @type {?} */
    ScrollNavLinkDirective.prototype._hostClass;
    /** @type {?} */
    ScrollNavLinkDirective.prototype._el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLW5hdi1saW5rLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BoZWFsdGhjYXRhbHlzdC9jYXNobWVyZS8iLCJzb3VyY2VzIjpbImxpYi9zY3JvbGwtbmF2L25hdi9zY3JvbGwtbmF2LWxpbmsuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUMsTUFBTSxlQUFlLENBQUM7Ozs7QUFHdEY7SUFTSSxnQ0FBbUIsR0FBZTtRQUFmLFFBQUcsR0FBSCxHQUFHLENBQVk7UUFGbEMsZUFBVSxHQUFHLElBQUksQ0FBQztJQUVtQixDQUFDOzs7O0lBRWYseUNBQVE7OztJQUEvQjtRQUNJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Ozs7O0lBRU8sa0RBQWlCOzs7OztJQUF6QixVQUEwQixFQUFVOztZQUMxQixFQUFFLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLEVBQUUsRUFBRTtZQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsaUVBQStELEVBQUUsTUFBRyxDQUFDLENBQUM7U0FDekY7YUFBTTtZQUNILEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN2QjtJQUNMLENBQUM7O2dCQXRCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGdCQUFnQjtpQkFDN0I7Ozs7Z0JBTCtCLFVBQVU7OzsrQkFRckMsS0FBSzs2QkFDTCxXQUFXLFNBQUMsMEJBQTBCOzJCQUt0QyxZQUFZLFNBQUMsT0FBTzs7SUFZekIsNkJBQUM7Q0FBQSxBQXZCRCxJQXVCQztTQXBCWSxzQkFBc0I7Ozs7OztJQUUvQiw4Q0FBcUM7O0lBQ3JDLDRDQUNrQjs7SUFFTixxQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIEVsZW1lbnRSZWYsIElucHV0LCBIb3N0TGlzdGVuZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKiogTWFya3MgdGhlIGhvc3QgZWxlbWVudCBhcyBhIGxpbmsgd2l0aGluIGFuIGBoYy1zY3JvbGwtbmF2YC4gKi9cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW2hjU2Nyb2xsTGlua10nXG59KVxuZXhwb3J0IGNsYXNzIFNjcm9sbE5hdkxpbmtEaXJlY3RpdmUge1xuICAgIC8qKiBUaGUgYGlkYCBvZiB0aGUgY29ycmVzcG9uZGluZyBgaGNTY3JvbGxUYXJnZXRgIHRoYXQgeW91IHdvdWxkIGxpa2UgdG8gbGluayB0by4gKi9cbiAgICBASW5wdXQoKSBwdWJsaWMgaGNTY3JvbGxMaW5rOiBzdHJpbmc7XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5oYy1zY3JvbGwtbmF2LWxpbmsnKVxuICAgIF9ob3N0Q2xhc3MgPSB0cnVlO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIF9lbDogRWxlbWVudFJlZikge31cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJykgX29uQ2xpY2soKSB7XG4gICAgICAgIHRoaXMubmF2aWdhdGVUb1NlY3Rpb24odGhpcy5oY1Njcm9sbExpbmspO1xuICAgIH1cblxuICAgIHByaXZhdGUgbmF2aWdhdGVUb1NlY3Rpb24oaWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgICAgICAgaWYgKCFlbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gbmF2aWdhdGUuIENvdWxkIG5vdCBmaW5kIHRoZSBlbGVtZW50IHdpdGggdGhlIGlkOiAke2lkfS5gKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsLnNjcm9sbEludG9WaWV3KCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=