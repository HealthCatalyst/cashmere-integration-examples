/**
 * @fileoverview added by tsickle
 * Generated from: lib/scroll-nav/nav/scroll-nav.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, ViewEncapsulation, QueryList, ContentChildren } from '@angular/core';
import { ScrollNavLinkDirective } from './scroll-nav-link.directive';
/**
 * Container for scroll navigation links.
 */
var HcScrollNavComponent = /** @class */ (function () {
    function HcScrollNavComponent(_elementRef) {
        this._elementRef = _elementRef;
        this.ACTIVE_CLASS = 'hc-scroll-nav-link-active';
    }
    Object.defineProperty(HcScrollNavComponent.prototype, "_links", {
        get: /**
         * @return {?}
         */
        function () {
            return this.linkList.toArray().map((/**
             * @param {?} e
             * @return {?}
             */
            function (e) { return e._el.nativeElement; }));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    HcScrollNavComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this._links && this._links[0]) {
            this._links[0].classList.add(this.ACTIVE_CLASS);
        }
    };
    /**
     * @param {?} id
     * @return {?}
     */
    HcScrollNavComponent.prototype._setActiveClassById = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var link = this.linkList.find((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return e.hcScrollLink === id; }));
        if (!link) {
            throw new Error("Failed to mark active class. Could not find the element with the data target for id: " + id + ".");
        }
        this.setActiveClass(link._el.nativeElement);
    };
    /**
     * @private
     * @param {?} element
     * @return {?}
     */
    HcScrollNavComponent.prototype.setActiveClass = /**
     * @private
     * @param {?} element
     * @return {?}
     */
    function (element) {
        var _this = this;
        this._links.forEach((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            e.classList.remove(_this.ACTIVE_CLASS);
        }));
        element.classList.add(this.ACTIVE_CLASS);
    };
    HcScrollNavComponent.decorators = [
        { type: Component, args: [{
                    selector: 'hc-scroll-nav',
                    encapsulation: ViewEncapsulation.None,
                    template: "<div class=\"hc-scroll-nav-links-container\">\n  <ng-content></ng-content>\n</div>",
                    styles: [".hc-scroll-nav-links-container{margin-right:30px}.hc-scroll-nav-links-container ul{list-style:none}.hc-scroll-nav-link{font-size:1rem;background-color:transparent;color:#333;cursor:pointer;font-weight:500;padding:10px 15px}.hc-scroll-nav-link:hover{background-color:rgba(215,221,228,.25)}.hc-scroll-nav-link:active{background-color:rgba(215,221,228,.5)}.hc-scroll-nav-link-active,.hc-scroll-nav-link-active:hover{background-color:#00aeff;color:#fff;font-weight:500}"]
                }] }
    ];
    /** @nocollapse */
    HcScrollNavComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    HcScrollNavComponent.propDecorators = {
        linkList: [{ type: ContentChildren, args: [ScrollNavLinkDirective,] }]
    };
    return HcScrollNavComponent;
}());
export { HcScrollNavComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    HcScrollNavComponent.prototype.linkList;
    /**
     * @type {?}
     * @private
     */
    HcScrollNavComponent.prototype.ACTIVE_CLASS;
    /** @type {?} */
    HcScrollNavComponent.prototype._elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLW5hdi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGVhbHRoY2F0YWx5c3QvY2FzaG1lcmUvIiwic291cmNlcyI6WyJsaWIvc2Nyb2xsLW5hdi9uYXYvc2Nyb2xsLW5hdi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBaUIsU0FBUyxFQUFFLGVBQWUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNsSCxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7OztBQUduRTtJQWFJLDhCQUFtQixXQUF1QjtRQUF2QixnQkFBVyxHQUFYLFdBQVcsQ0FBWTtRQUZ6QixpQkFBWSxHQUFHLDJCQUEyQixDQUFDO0lBRWYsQ0FBQztJQUw5QyxzQkFBVyx3Q0FBTTs7OztRQUFqQjtZQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHOzs7O1lBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBbkIsQ0FBbUIsRUFBQyxDQUFDO1FBQ2pFLENBQUM7OztPQUFBOzs7O0lBS00sOENBQWU7OztJQUF0QjtRQUNJLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDbkQ7SUFDTCxDQUFDOzs7OztJQUVNLGtEQUFtQjs7OztJQUExQixVQUEyQixFQUFVOztZQUMzQixJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJOzs7O1FBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsWUFBWSxLQUFLLEVBQUUsRUFBckIsQ0FBcUIsRUFBQztRQUMzRCxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1AsTUFBTSxJQUFJLEtBQUssQ0FBQywwRkFBd0YsRUFBRSxNQUFHLENBQUMsQ0FBQztTQUNsSDtRQUNELElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7Ozs7SUFFTyw2Q0FBYzs7Ozs7SUFBdEIsVUFBdUIsT0FBb0I7UUFBM0MsaUJBS0M7UUFKRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLENBQUM7WUFDakIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzFDLENBQUMsRUFBQyxDQUFDO1FBQ0gsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzdDLENBQUM7O2dCQWxDSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUVyQyw4RkFBd0M7O2lCQUMzQzs7OztnQkFUa0IsVUFBVTs7OzJCQVd4QixlQUFlLFNBQUMsc0JBQXNCOztJQTRCM0MsMkJBQUM7Q0FBQSxBQW5DRCxJQW1DQztTQTdCWSxvQkFBb0I7Ozs7OztJQUM3Qix3Q0FBNkY7Ozs7O0lBSTdGLDRDQUE0RDs7SUFFaEQsMkNBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIFZpZXdFbmNhcHN1bGF0aW9uLCBBZnRlclZpZXdJbml0LCBRdWVyeUxpc3QsIENvbnRlbnRDaGlsZHJlbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1Njcm9sbE5hdkxpbmtEaXJlY3RpdmV9IGZyb20gJy4vc2Nyb2xsLW5hdi1saW5rLmRpcmVjdGl2ZSc7XG5cbi8qKiBDb250YWluZXIgZm9yIHNjcm9sbCBuYXZpZ2F0aW9uIGxpbmtzLiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdoYy1zY3JvbGwtbmF2JyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIHN0eWxlVXJsczogWydzY3JvbGwtbmF2LmNvbXBvbmVudC5zY3NzJ10sXG4gICAgdGVtcGxhdGVVcmw6ICdzY3JvbGwtbmF2LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBIY1Njcm9sbE5hdkNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIEBDb250ZW50Q2hpbGRyZW4oU2Nyb2xsTmF2TGlua0RpcmVjdGl2ZSkgcHJpdmF0ZSBsaW5rTGlzdDogUXVlcnlMaXN0PFNjcm9sbE5hdkxpbmtEaXJlY3RpdmU+O1xuICAgIHB1YmxpYyBnZXQgX2xpbmtzKCk6IEFycmF5PEhUTUxFbGVtZW50PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpbmtMaXN0LnRvQXJyYXkoKS5tYXAoZSA9PiBlLl9lbC5uYXRpdmVFbGVtZW50KTtcbiAgICB9XG4gICAgcHJpdmF0ZSByZWFkb25seSBBQ1RJVkVfQ0xBU1MgPSAnaGMtc2Nyb2xsLW5hdi1saW5rLWFjdGl2ZSc7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgICBwdWJsaWMgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fbGlua3MgJiYgdGhpcy5fbGlua3NbMF0pIHtcbiAgICAgICAgICAgIHRoaXMuX2xpbmtzWzBdLmNsYXNzTGlzdC5hZGQodGhpcy5BQ1RJVkVfQ0xBU1MpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIF9zZXRBY3RpdmVDbGFzc0J5SWQoaWQ6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBjb25zdCBsaW5rID0gdGhpcy5saW5rTGlzdC5maW5kKGUgPT4gZS5oY1Njcm9sbExpbmsgPT09IGlkKTtcbiAgICAgICAgaWYgKCFsaW5rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBtYXJrIGFjdGl2ZSBjbGFzcy4gQ291bGQgbm90IGZpbmQgdGhlIGVsZW1lbnQgd2l0aCB0aGUgZGF0YSB0YXJnZXQgZm9yIGlkOiAke2lkfS5gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldEFjdGl2ZUNsYXNzKGxpbmsuX2VsLm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2V0QWN0aXZlQ2xhc3MoZWxlbWVudDogSFRNTEVsZW1lbnQpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fbGlua3MuZm9yRWFjaChlID0+IHtcbiAgICAgICAgICAgIGUuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLkFDVElWRV9DTEFTUyk7XG4gICAgICAgIH0pO1xuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5BQ1RJVkVfQ0xBU1MpO1xuICAgIH1cbn1cbiJdfQ==