/**
 * @fileoverview added by tsickle
 * Generated from: lib/picklist/pane/picklist-pane.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { Subject } from 'rxjs';
import { PicklistService } from '../services/picklist.service';
import { PicklistActionService } from '../services/picklist-action.service';
import { PicklistFilterService } from '../services/picklist-filter.service';
import { PicklistFilterRemoteService } from '../services/picklist-filter-remote.service';
import { PicklistFilterLocalService } from '../services/picklist-filter-local.service';
import { PicklistStateService } from '../services/picklist-state.service';
import { PicklistValuesetMovingService } from '../services/picklist-valueset-moving.service';
import { WorkTrackerService } from '../../shared/work-tracker.service';
var PicklistPaneComponent = /** @class */ (function () {
    function PicklistPaneComponent(listService, actionService, filterService) {
        this.listService = listService;
        this.actionService = actionService;
        this.filterService = filterService;
        this.emptyMsg = 'No options';
        this.moveSelectedItems = new EventEmitter();
        this.companion = null;
        this.shouldExcludeCompanion = false;
        this.codeIsSignificant = false;
        this.searchTerm = '';
        this.searchTermStream = new Subject();
        this.selectAllWasLastClicked = false;
        this.selectAllLimit = 2000;
    }
    /**
     * @param {?} source
     * @param {?} settings
     * @param {?} companion
     * @param {?=} excludeCompanion
     * @return {?}
     */
    PicklistPaneComponent.prototype.reset = /**
     * @param {?} source
     * @param {?} settings
     * @param {?} companion
     * @param {?=} excludeCompanion
     * @return {?}
     */
    function (source, settings, companion, excludeCompanion) {
        if (excludeCompanion === void 0) { excludeCompanion = false; }
        this.companion = companion;
        this.shouldExcludeCompanion = excludeCompanion;
        this.codeIsSignificant = settings.codeIsSignificant;
        this.selectAllWasLastClicked = false;
        this.searchTerm = '';
        this.wireUpSearch();
        this.listService.reset(settings, source, this);
    };
    Object.defineProperty(PicklistPaneComponent.prototype, "valueList", {
        get: /**
         * @return {?}
         */
        function () {
            return this.listService.valueList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PicklistPaneComponent.prototype, "valueSetList", {
        get: /**
         * @return {?}
         */
        function () {
            return this.listService.valueSetList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PicklistPaneComponent.prototype, "isPaged", {
        get: /**
         * @return {?}
         */
        function () {
            return this.listService.optionsSource.isPaged;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PicklistPaneComponent.prototype, "optionsAvailableCount", {
        get: /**
         * @return {?}
         */
        function () {
            return this.PicklistValueOptionsTotal + this.valueSetOptionsTotal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PicklistPaneComponent.prototype, "PicklistValueOptionsTotal", {
        get: /**
         * @return {?}
         */
        function () {
            return this.valueList.isActive ? this.listService.totalValuesCount : 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PicklistPaneComponent.prototype, "valueSetOptionsTotal", {
        get: /**
         * @return {?}
         */
        function () {
            return this.valueSetList.isActive ? this.listService.totalValueSetsCount : 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PicklistPaneComponent.prototype, "optionsShowingCount", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var valueListShowing = this.valueList.isActive ? this.valueList.filteredOptions.length : 0;
            /** @type {?} */
            var valueSetListShowing = this.valueSetList.isActive ? this.valueSetList.filteredOptions.length : 0;
            return valueListShowing + valueSetListShowing;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PicklistPaneComponent.prototype, "showTooManyToSelectAllMsg", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var serverMatches = this.valueList.additionalRemoteOptions;
            return (this.selectAllWasLastClicked &&
                Number.isFinite(serverMatches) &&
                serverMatches + this.valueList.options.size > this.selectAllLimit);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @template T
     * @param {?} list
     * @return {?}
     */
    PicklistPaneComponent.prototype.shouldShowList = /**
     * @template T
     * @param {?} list
     * @return {?}
     */
    function (list) {
        return list.isActive && (list.filteredOptions.length > 0 || list.additionalRemoteOptions > 0);
    };
    /**
     * @template T
     * @param {?} list
     * @return {?}
     */
    PicklistPaneComponent.prototype.listIsFilteredToEmpty = /**
     * @template T
     * @param {?} list
     * @return {?}
     */
    function (list) {
        return list.options.size > 0 && list.filteredOptions.length === 0 && list.isActive;
    };
    /**
     * @return {?}
     */
    PicklistPaneComponent.prototype.isAnySelected = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var topLevelListHasSelection = this.valueList.selectedOptions.size > 0 || this.valueSetList.selectedOptions.size > 0;
        /** @type {?} */
        var subListHasSelection = this.valueSetList.filteredOptions.some((/**
         * @param {?} o
         * @return {?}
         */
        function (o) { return o.subValuesSelectList.selectedOptions.size > 0; }));
        return topLevelListHasSelection || subListHasSelection;
    };
    /**
     * @return {?}
     */
    PicklistPaneComponent.prototype.focusSearch = /**
     * @return {?}
     */
    function () {
        if (this.searchInputEl) {
            this.searchInputEl.nativeElement.focus();
        }
    };
    /**
     * @return {?}
     */
    PicklistPaneComponent.prototype.scrollToTop = /**
     * @return {?}
     */
    function () {
        if (this.listContainerEl) {
            this.listContainerEl.nativeElement.scrollTop = 0;
        }
    };
    /**
     * @return {?}
     */
    PicklistPaneComponent.prototype.onSearchKeyup = /**
     * @return {?}
     */
    function () {
        this.selectNone();
        this.searchTermStream.next(this.searchTerm);
    };
    /**
     * @template T
     * @param {?} event
     * @param {?} index
     * @param {?} list
     * @param {?} item
     * @return {?}
     */
    PicklistPaneComponent.prototype.onItemClicked = /**
     * @template T
     * @param {?} event
     * @param {?} index
     * @param {?} list
     * @param {?} item
     * @return {?}
     */
    function (event, index, list, item) {
        this.selectAllWasLastClicked = false;
        event.stopPropagation();
        this.actionService.onItemClicked(event, index, list, item);
    };
    /**
     * @return {?}
     */
    PicklistPaneComponent.prototype.preventIEHighlightBug = /**
     * @return {?}
     */
    function () {
        // for IE: https://stackoverflow.com/questions/1527751/disable-text-selection-while-pressing-shift
        ((/** @type {?} */ (document))).onselectstart = (/**
         * @return {?}
         */
        function () {
            return false;
        });
        setTimeout((/**
         * @return {?}
         */
        function () {
            ((/** @type {?} */ (document))).onselectstart = (/**
             * @return {?}
             */
            function () { return null; });
        }), 0);
    };
    /**
     * @param {?} event
     * @param {?} valueset
     * @return {?}
     */
    PicklistPaneComponent.prototype.onValuesetCaretClicked = /**
     * @param {?} event
     * @param {?} valueset
     * @return {?}
     */
    function (event, valueset) {
        this.selectAllWasLastClicked = false;
        event.stopPropagation();
        this.actionService.onValuesetCaretClicked(event, valueset);
    };
    /**
     * @param {?} type
     * @return {?}
     */
    PicklistPaneComponent.prototype.triggerLoadMore = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        this.selectAllWasLastClicked = false;
        this.filterService.loadMore(type);
    };
    /**
     * @template T
     * @param {?} event
     * @param {?} list
     * @param {?} item
     * @return {?}
     */
    PicklistPaneComponent.prototype.onItemDoubleClicked = /**
     * @template T
     * @param {?} event
     * @param {?} list
     * @param {?} item
     * @return {?}
     */
    function (event, list, item) {
        this.selectAllWasLastClicked = false;
        event.stopPropagation();
        this.actionService.onItemDoubleClicked(event, list, item);
        this.moveSelectedItems.emit(this);
    };
    /**
     * @return {?}
     */
    PicklistPaneComponent.prototype.selectAll = /**
     * @return {?}
     */
    function () {
        this.selectAllWasLastClicked = true;
        /** @type {?} */
        var shouldLoadMoreBeforeSelectAll = this.valueList.additionalRemoteOptions && this.valueList.options.size < this.selectAllLimit;
        if (this.pagingValueList() && shouldLoadMoreBeforeSelectAll) {
            /** @type {?} */
            var totalMatches = this.valueList.additionalRemoteOptions + this.valueList.options.size;
            /** @type {?} */
            var numberToLoad = totalMatches > this.selectAllLimit ? this.selectAllLimit : totalMatches;
            this.loadAndSelectAll(numberToLoad);
        }
        else {
            this.actionService.selectAll();
        }
    };
    /**
     * @return {?}
     */
    PicklistPaneComponent.prototype.selectNone = /**
     * @return {?}
     */
    function () {
        this.selectAllWasLastClicked = false;
        this.actionService.selectNone();
    };
    /**
     * @private
     * @param {?} numberToLoad
     * @return {?}
     */
    PicklistPaneComponent.prototype.loadAndSelectAll = /**
     * @private
     * @param {?} numberToLoad
     * @return {?}
     */
    function (numberToLoad) {
        var _this = this;
        this.filterService.loadForSelectAll(numberToLoad).subscribe((/**
         * @return {?}
         */
        function () {
            _this.actionService.selectAllInList(_this.valueList);
        }));
    };
    /**
     * @private
     * @return {?}
     */
    PicklistPaneComponent.prototype.pagingValueList = /**
     * @private
     * @return {?}
     */
    function () {
        return this.isPaged && this.shouldShowList(this.valueList) && !this.shouldShowList(this.valueSetList);
    };
    /**
     * @private
     * @return {?}
     */
    PicklistPaneComponent.prototype.wireUpSearch = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.searchTermStream.pipe(debounceTime(300), distinctUntilChanged()).subscribe((/**
         * @param {?} t
         * @return {?}
         */
        function (t) {
            _this.filterService.runFilter(t);
            _this.selectNone();
        }));
    };
    PicklistPaneComponent.decorators = [
        { type: Component, args: [{
                    selector: 'hc-picklist-pane',
                    template: "<div class=\"hc-picklist-pane\">\n    <div class=\"picklist-controls\">\n        <hc-form-field>\n            <input hcInput #searchInput (keyup)=\"onSearchKeyup()\" [(ngModel)]=\"searchTerm\" type=\"text\" placeholder=\"Search\" >\n            <hc-icon hcSuffix fontSet=\"fa\" fontIcon=\"fa-search\"></hc-icon>\n        </hc-form-field>\n        <div class=\"second-row-controls\">\n            <div class=\"hc-type-em\">\n                Showing {{optionsShowingCount.toLocaleString()}} of {{optionsAvailableCount.toLocaleString()}}\n            </div>\n            <div>\n                <button type=\"button\" class=\"btn-text-link\" (click)=\"selectAll()\" [disabled]=\"valueList.filteredOptions.length === 0 && valueSetList.filteredOptions.length === 0\">\n                    Select All\n                </button>\n                <button type=\"button\" class=\"btn-text-link\" (click)=\"selectNone()\" [disabled]=\"!isAnySelected()\">\n                    Select None\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"list-container\" #listContainer>\n        <!-- Valuesets -->\n        <div *ngIf=\"valueSetList.isActive && (valueSetList.loadingOptions | async)\" class=\"loading-list\"><hc-progress-dots></hc-progress-dots></div>\n        <table *ngIf=\"shouldShowList(valueSetList) && !(valueSetList.loadingOptions | async)\" class=\"hc-table hc-table-small valueset-table\">\n            <tbody>\n                <!-- Header, shown when both values and valuesets are sitting in list at same time -->\n                <tr *ngIf=\"shouldShowList(valueSetList) && shouldShowList(valueList)\"><th colspan=\"2\">Value Sets</th></tr>\n\n                <!-- Value set List Items -->\n                <tr *ngFor=\"let item of valueSetList.filteredOptions; let idx=index;\"\n                    (mousedown)=\"preventIEHighlightBug()\"\n                    (click)=\"onItemClicked($event, idx, valueSetList, item);\"\n                    (dblclick)=\"onItemDoubleClicked($event, valueSetList, item);\"\n                    [ngClass]=\"{'hc-row-selected selected': item.selected}\"\n                    class=\"valueset-option value-option-row\"><td>\n                        <div>\n                            <span class=\"valueset-value-toggle\" (click)=\"onValuesetCaretClicked($event, item)\">\n                                <hc-icon hcIconSm class=\"values-caret\" fontSet=\"fa\" [ngClass]=\"{'values-caret-showing-values': item.showValues}\" fontIcon=\"fa-caret-right\"></hc-icon>\n                                <hc-icon hcIconSm class=\"vs-folder\" fontSet=\"fa\" [fontIcon]=\"item.showValues ? 'fa-folder-open-o' : 'fa-folder-o'\"></hc-icon>\n                            </span>\n                            <!-- TODO: more deets for the valueset -->\n                            <span class=\"vs-title\">{{item.option.title || \"Untitled\"}} ({{item.option.subValueCount}})</span>\n                        </div>\n                        <div>\n                            <!-- Value set Values List (closed by default) -->\n                            <table *ngIf=\"item.showValues\" class=\"valueset-sublist-table hc-table\"><tbody>\n                                <tr *ngIf=\"item.loadingValues\" class=\"loading-subvals\"><hc-progress-dots></hc-progress-dots></tr>\n                                <tr *ngFor=\"let subItem of item.subValuesSelectList.filteredOptions; let idx=index;\"\n                                    (mousedown)=\"preventIEHighlightBug()\"\n                                    (click)=\"onItemClicked($event, idx, item.subValuesSelectList, subItem);\"\n                                    (dblclick)=\"onItemDoubleClicked($event, item.subValuesSelectList, subItem);\"\n                                    class=\"value-option-row hc-tr\"\n                                    [ngClass]=\"{'hc-row-selected': subItem.selected}\"><td>\n                                        <span *ngIf=\"codeIsSignificant\" class=\"valueset-code\">{{subItem.option.code}}</span>\n                                        <span>{{subItem.option.title || \"Untitled\"}}</span>\n                                    </td>\n                                </tr>\n                            </tbody></table>\n                        </div>\n                </td></tr>\n\n                <!-- Load More link for value sets, available when paging -->\n                <tr *ngIf=\"isPaged && optionsShowingCount < optionsAvailableCount\" class=\"text-center value-option-row load-more-row\">\n                    <a class=\"load-more-link text-link\" (click)=\"triggerLoadMore('valuesets')\" *ngIf=\"!(valueSetList.appendingOptions | async)\">Load More</a>\n                    <hc-progress-dots *ngIf=\"valueSetList.appendingOptions | async\"></hc-progress-dots>\n                </tr>\n            </tbody>\n        </table>\n\n        <!-- Values -->\n        <div *ngIf=\"valueList.isActive && (valueList.loadingOptions | async)\" class=\"loading-list\"><hc-progress-dots></hc-progress-dots></div>\n        <table *ngIf=\"shouldShowList(valueList) && !(valueList.loadingOptions | async)\" class=\"hc-table hc-table-small\" [ngClass]=\"{'no-code-column': !codeIsSignificant}\">\n            <tbody>\n                <!-- Header, shown when both values and valuesets are sitting in list at same time -->\n                <tr *ngIf=\"shouldShowList(valueSetList) && shouldShowList(valueList)\"><th colspan=\"2\">Individual Values</th></tr>\n\n                <!-- Show when user clicked \"select all\", and there are more options on server, but too many to load in at once -->\n                <tr *ngIf=\"showTooManyToSelectAllMsg\" class=\"value-option-row select-all-matches-row\">\n                    <td colspan=\"2\">\n                        <span class=\"hc-type-bold\">{{valueList.selectedOptions.size}} Selected.</span>\n                        <span>Too many results to select all.</span>\n                    </td>\n                </tr>\n\n                <!-- Value List Items -->\n                <tr *ngFor=\"let item of valueList.filteredOptions; let idx=index;\"\n                    (mousedown)=\"preventIEHighlightBug()\"\n                    (click)=\"onItemClicked($event, idx, valueList, item);\"\n                    (dblclick)=\"onItemDoubleClicked($event, valueList, item);\"\n                    class=\"value-option-row\"\n                    [ngClass]=\"{'hc-row-selected': item.selected}\">\n                        <td *ngIf=\"codeIsSignificant\" class=\"col-code\">{{item.option.code}}</td>\n                        <td class=\"col-title\">{{item.option.title || \"Untitled\"}}</td>\n                </tr>\n\n                <!-- Load More link for values, available when paging -->\n                <tr *ngIf=\"isPaged && optionsShowingCount < optionsAvailableCount\" class=\"text-center value-option-row load-more-row\">\n                    <a class=\"load-more-link text-link\" (click)=\"triggerLoadMore('values')\" *ngIf=\"!(valueList.appendingOptions | async)\">Load More</a>\n                    <hc-progress-dots *ngIf=\"valueList.appendingOptions | async\"></hc-progress-dots>\n                </tr>\n            </tbody>\n        </table>\n\n        <!-- Empty table -->\n        <div class=\"empty-table-msg hc-type-em\" *ngIf=\"!shouldShowList(valueSetList) && !shouldShowList(valueList) && !(valueList.loadingOptions | async) && !(valueSetList.loadingOptions | async)\">\n                <span *ngIf=\"listIsFilteredToEmpty(valueList) || listIsFilteredToEmpty(valueSetList); else emptyMessage\">Nothing matches your search.</span>\n                <span><ng-template #emptyMessage>{{emptyMsg}}</ng-template></span>\n        </div>\n    </div>\n</div>\n",
                    providers: [
                        PicklistService,
                        PicklistStateService,
                        PicklistValuesetMovingService,
                        PicklistActionService,
                        PicklistFilterService,
                        PicklistFilterRemoteService,
                        PicklistFilterLocalService,
                        WorkTrackerService
                    ],
                    encapsulation: ViewEncapsulation.None,
                    styles: [".hc-picklist-pane{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column;height:100%}.hc-picklist-pane .hc-form-field-wrapper{border:none;padding-bottom:0}.hc-picklist-pane .picklist-controls{display:-webkit-box;display:flex;-webkit-box-flex:0;flex:0 0 auto;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column;font-size:12px}.hc-picklist-pane .second-row-controls{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;margin:15px 0 2px}.hc-picklist-pane .picklist-controls button{font-family:'Open Sans',sans-serif;margin-left:10px}.hc-picklist-pane .picklist-controls .btn-text-link{background:0 0;border:none;color:#00aeff;cursor:pointer;font-size:12px;padding:0;text-align:left}.hc-picklist-pane .picklist-controls .btn-text-link:active{box-shadow:none;color:#008bcc;outline:0;text-decoration:underline}.hc-picklist-pane .picklist-controls .btn-text-link:hover{color:#009de6;text-decoration:underline}.hc-picklist-pane .picklist-controls .btn-text-link[disabled]{color:#c0c5cc;cursor:default;opacity:1;text-decoration:none}.hc-picklist-pane .loading-list{border:1px solid #d7dde4;height:100%}.hc-picklist-pane .list-container{background-color:#fff;border:1px solid #d7dde4;-webkit-box-flex:1;flex:1 1 300px;overflow-y:scroll;position:relative}.hc-picklist-pane .hc-table th{background-color:#e0e6ec;border-bottom:1px solid #d0dae3;border-top:1px solid #d0dae3;font-size:12px;font-style:italic;font-weight:400}.hc-picklist-pane .hc-table tbody{border:0}.hc-picklist-pane .hc-table .select-all-matches-row{background-color:#f9efce;border-color:#fff;color:#846b11;text-align:center}.hc-picklist-pane .hc-table .load-more-row{display:block;font-size:12px;font-weight:700;height:36px;padding:11px;text-align:center}.hc-picklist-pane .hc-table .load-more-link{cursor:pointer}.hc-picklist-pane .hc-table .col-code{width:20%;word-break:normal}.hc-picklist-pane .hc-table .valueset-table{display:block;width:100%}.hc-picklist-pane .hc-table .value-option-row{cursor:default;font-weight:400;line-height:1.1;user-select:none;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.hc-picklist-pane .hc-table .valueset-value-toggle{color:#00aeff;cursor:pointer;-webkit-transform:color .2s;transform:color .2s}.hc-picklist-pane .hc-table .valueset-value-toggle:hover{color:#006899}.hc-picklist-pane .hc-table .values-caret:before{display:inline-block;font-size:13px;position:relative;top:-1px;-webkit-transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s}.hc-picklist-pane .hc-table .values-caret-showing-values:before{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.hc-picklist-pane .hc-table .selected .values-caret{color:#fff}.hc-picklist-pane .hc-table .vs-folder{left:-3px;position:relative}.hc-picklist-pane .hc-table .selected .vs-folder{color:#fff}.hc-picklist-pane .hc-table .loading-subvals{height:40px}.hc-picklist-pane .hc-table .valueset-sublist-table{border:1px solid #d7dfe7;border-collapse:separate;border-radius:3px;font-size:13px;margin:10px 0 20px;overflow:hidden}.hc-picklist-pane .hc-table .valueset-code{margin-right:5px}.hc-picklist-pane .empty-table-msg{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;height:100%;-webkit-box-pack:center;justify-content:center;position:absolute;width:100%}"]
                }] }
    ];
    /** @nocollapse */
    PicklistPaneComponent.ctorParameters = function () { return [
        { type: PicklistService },
        { type: PicklistActionService },
        { type: PicklistFilterService }
    ]; };
    PicklistPaneComponent.propDecorators = {
        emptyMsg: [{ type: Input }],
        moveSelectedItems: [{ type: Output }],
        listContainerEl: [{ type: ViewChild, args: ['listContainer', { static: false },] }],
        searchInputEl: [{ type: ViewChild, args: ['search', { static: false },] }]
    };
    return PicklistPaneComponent;
}());
export { PicklistPaneComponent };
if (false) {
    /** @type {?} */
    PicklistPaneComponent.prototype.emptyMsg;
    /** @type {?} */
    PicklistPaneComponent.prototype.moveSelectedItems;
    /** @type {?} */
    PicklistPaneComponent.prototype.listContainerEl;
    /** @type {?} */
    PicklistPaneComponent.prototype.searchInputEl;
    /** @type {?} */
    PicklistPaneComponent.prototype.companion;
    /** @type {?} */
    PicklistPaneComponent.prototype.shouldExcludeCompanion;
    /** @type {?} */
    PicklistPaneComponent.prototype.codeIsSignificant;
    /** @type {?} */
    PicklistPaneComponent.prototype.searchTerm;
    /** @type {?} */
    PicklistPaneComponent.prototype.searchTermStream;
    /** @type {?} */
    PicklistPaneComponent.prototype.selectAllWasLastClicked;
    /** @type {?} */
    PicklistPaneComponent.prototype.selectAllLimit;
    /** @type {?} */
    PicklistPaneComponent.prototype.listService;
    /** @type {?} */
    PicklistPaneComponent.prototype.actionService;
    /** @type {?} */
    PicklistPaneComponent.prototype.filterService;
}
//# sourceMappingURL=data:application/json;base64,