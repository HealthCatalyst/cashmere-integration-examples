/**
 * @fileoverview added by tsickle
 * Generated from: lib/datepicker/datepicker.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OverlayModule } from '@angular/cdk/overlay';
import { A11yModule } from '@angular/cdk/a11y';
import { PortalModule } from '@angular/cdk/portal';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CalendarComponent, CalendarHeaderComponent } from './calendar/calendar.component';
import { CalendarBodyComponent } from './calendar-body/calendar-body.component';
import { DatepickerComponent, HC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER } from './datepicker.component';
import { DatepickerContentComponent } from './datepicker-content/datepicker-content.component';
import { DatepickerToggleComponent, DatepickerToggleIconDirective } from './datepicker-toggle/datepicker-toggle.component';
import { MonthViewComponent } from './month-view/month-view.component';
import { YearViewComponent } from './year-view/year-view.component';
import { MultiYearViewComponent } from './multi-year-view/multi-year-view.component';
import { HcDatepickerIntl } from './datepicker-intl';
import { DatepickerInputDirective } from './datepicker-input/datepicker-input.directive';
import { ButtonModule } from '../button/button.module';
import { IconModule } from '../icon/icon.module';
import { InputModule } from '../input/input.module';
import { SelectModule } from '../select/select.module';
import { FormFieldModule } from '../form-field/hc-form-field.module';
var DatepickerModule = /** @class */ (function () {
    function DatepickerModule() {
    }
    DatepickerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        ButtonModule,
                        IconModule,
                        InputModule,
                        FormFieldModule,
                        SelectModule,
                        OverlayModule,
                        A11yModule,
                        PortalModule
                    ],
                    exports: [
                        CalendarComponent,
                        CalendarBodyComponent,
                        DatepickerComponent,
                        DatepickerContentComponent,
                        DatepickerInputDirective,
                        DatepickerToggleComponent,
                        DatepickerToggleIconDirective,
                        MonthViewComponent,
                        YearViewComponent,
                        MultiYearViewComponent,
                        CalendarHeaderComponent
                    ],
                    declarations: [
                        CalendarComponent,
                        CalendarBodyComponent,
                        DatepickerComponent,
                        DatepickerContentComponent,
                        DatepickerInputDirective,
                        DatepickerToggleComponent,
                        DatepickerToggleIconDirective,
                        MonthViewComponent,
                        YearViewComponent,
                        MultiYearViewComponent,
                        CalendarHeaderComponent
                    ],
                    providers: [HcDatepickerIntl, HC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],
                    entryComponents: [DatepickerContentComponent, CalendarHeaderComponent]
                },] }
    ];
    return DatepickerModule;
}());
export { DatepickerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGVhbHRoY2F0YWx5c3QvY2FzaG1lcmUvIiwic291cmNlcyI6WyJsaWIvZGF0ZXBpY2tlci9kYXRlcGlja2VyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDN0MsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBQyxXQUFXLEVBQUUsbUJBQW1CLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUN6RixPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUM5RSxPQUFPLEVBQUMsbUJBQW1CLEVBQUUsOENBQThDLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUMzRyxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxtREFBbUQsQ0FBQztBQUM3RixPQUFPLEVBQUMseUJBQXlCLEVBQUUsNkJBQTZCLEVBQUMsTUFBTSxpREFBaUQsQ0FBQztBQUN6SCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUNuRixPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSwrQ0FBK0MsQ0FBQztBQUN2RixPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDckQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUNsRCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDckQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FO0lBQUE7SUEyQytCLENBQUM7O2dCQTNDL0IsUUFBUSxTQUFDO29CQUNOLE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQixZQUFZO3dCQUNaLFVBQVU7d0JBQ1YsV0FBVzt3QkFDWCxlQUFlO3dCQUNmLFlBQVk7d0JBQ1osYUFBYTt3QkFDYixVQUFVO3dCQUNWLFlBQVk7cUJBQ2Y7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLGlCQUFpQjt3QkFDakIscUJBQXFCO3dCQUNyQixtQkFBbUI7d0JBQ25CLDBCQUEwQjt3QkFDMUIsd0JBQXdCO3dCQUN4Qix5QkFBeUI7d0JBQ3pCLDZCQUE2Qjt3QkFDN0Isa0JBQWtCO3dCQUNsQixpQkFBaUI7d0JBQ2pCLHNCQUFzQjt3QkFDdEIsdUJBQXVCO3FCQUMxQjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1YsaUJBQWlCO3dCQUNqQixxQkFBcUI7d0JBQ3JCLG1CQUFtQjt3QkFDbkIsMEJBQTBCO3dCQUMxQix3QkFBd0I7d0JBQ3hCLHlCQUF5Qjt3QkFDekIsNkJBQTZCO3dCQUM3QixrQkFBa0I7d0JBQ2xCLGlCQUFpQjt3QkFDakIsc0JBQXNCO3dCQUN0Qix1QkFBdUI7cUJBQzFCO29CQUNELFNBQVMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLDhDQUE4QyxDQUFDO29CQUM3RSxlQUFlLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSx1QkFBdUIsQ0FBQztpQkFDekU7O0lBQzhCLHVCQUFDO0NBQUEsQUEzQ2hDLElBMkNnQztTQUFuQixnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtPdmVybGF5TW9kdWxlfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQge0ExMXlNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcbmltcG9ydCB7UG9ydGFsTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7Rm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7Q2FsZW5kYXJDb21wb25lbnQsIENhbGVuZGFySGVhZGVyQ29tcG9uZW50fSBmcm9tICcuL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudCc7XG5pbXBvcnQge0NhbGVuZGFyQm9keUNvbXBvbmVudH0gZnJvbSAnLi9jYWxlbmRhci1ib2R5L2NhbGVuZGFyLWJvZHkuY29tcG9uZW50JztcbmltcG9ydCB7RGF0ZXBpY2tlckNvbXBvbmVudCwgSENfREFURVBJQ0tFUl9TQ1JPTExfU1RSQVRFR1lfRkFDVE9SWV9QUk9WSURFUn0gZnJvbSAnLi9kYXRlcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQge0RhdGVwaWNrZXJDb250ZW50Q29tcG9uZW50fSBmcm9tICcuL2RhdGVwaWNrZXItY29udGVudC9kYXRlcGlja2VyLWNvbnRlbnQuY29tcG9uZW50JztcbmltcG9ydCB7RGF0ZXBpY2tlclRvZ2dsZUNvbXBvbmVudCwgRGF0ZXBpY2tlclRvZ2dsZUljb25EaXJlY3RpdmV9IGZyb20gJy4vZGF0ZXBpY2tlci10b2dnbGUvZGF0ZXBpY2tlci10b2dnbGUuY29tcG9uZW50JztcbmltcG9ydCB7TW9udGhWaWV3Q29tcG9uZW50fSBmcm9tICcuL21vbnRoLXZpZXcvbW9udGgtdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHtZZWFyVmlld0NvbXBvbmVudH0gZnJvbSAnLi95ZWFyLXZpZXcveWVhci12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQge011bHRpWWVhclZpZXdDb21wb25lbnR9IGZyb20gJy4vbXVsdGkteWVhci12aWV3L211bHRpLXllYXItdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHtIY0RhdGVwaWNrZXJJbnRsfSBmcm9tICcuL2RhdGVwaWNrZXItaW50bCc7XG5pbXBvcnQge0RhdGVwaWNrZXJJbnB1dERpcmVjdGl2ZX0gZnJvbSAnLi9kYXRlcGlja2VyLWlucHV0L2RhdGVwaWNrZXItaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7QnV0dG9uTW9kdWxlfSBmcm9tICcuLi9idXR0b24vYnV0dG9uLm1vZHVsZSc7XG5pbXBvcnQge0ljb25Nb2R1bGV9IGZyb20gJy4uL2ljb24vaWNvbi5tb2R1bGUnO1xuaW1wb3J0IHtJbnB1dE1vZHVsZX0gZnJvbSAnLi4vaW5wdXQvaW5wdXQubW9kdWxlJztcbmltcG9ydCB7U2VsZWN0TW9kdWxlfSBmcm9tICcuLi9zZWxlY3Qvc2VsZWN0Lm1vZHVsZSc7XG5pbXBvcnQge0Zvcm1GaWVsZE1vZHVsZX0gZnJvbSAnLi4vZm9ybS1maWVsZC9oYy1mb3JtLWZpZWxkLm1vZHVsZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgICBCdXR0b25Nb2R1bGUsXG4gICAgICAgIEljb25Nb2R1bGUsXG4gICAgICAgIElucHV0TW9kdWxlLFxuICAgICAgICBGb3JtRmllbGRNb2R1bGUsXG4gICAgICAgIFNlbGVjdE1vZHVsZSxcbiAgICAgICAgT3ZlcmxheU1vZHVsZSxcbiAgICAgICAgQTExeU1vZHVsZSxcbiAgICAgICAgUG9ydGFsTW9kdWxlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIENhbGVuZGFyQ29tcG9uZW50LFxuICAgICAgICBDYWxlbmRhckJvZHlDb21wb25lbnQsXG4gICAgICAgIERhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgICAgIERhdGVwaWNrZXJDb250ZW50Q29tcG9uZW50LFxuICAgICAgICBEYXRlcGlja2VySW5wdXREaXJlY3RpdmUsXG4gICAgICAgIERhdGVwaWNrZXJUb2dnbGVDb21wb25lbnQsXG4gICAgICAgIERhdGVwaWNrZXJUb2dnbGVJY29uRGlyZWN0aXZlLFxuICAgICAgICBNb250aFZpZXdDb21wb25lbnQsXG4gICAgICAgIFllYXJWaWV3Q29tcG9uZW50LFxuICAgICAgICBNdWx0aVllYXJWaWV3Q29tcG9uZW50LFxuICAgICAgICBDYWxlbmRhckhlYWRlckNvbXBvbmVudFxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIENhbGVuZGFyQ29tcG9uZW50LFxuICAgICAgICBDYWxlbmRhckJvZHlDb21wb25lbnQsXG4gICAgICAgIERhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgICAgIERhdGVwaWNrZXJDb250ZW50Q29tcG9uZW50LFxuICAgICAgICBEYXRlcGlja2VySW5wdXREaXJlY3RpdmUsXG4gICAgICAgIERhdGVwaWNrZXJUb2dnbGVDb21wb25lbnQsXG4gICAgICAgIERhdGVwaWNrZXJUb2dnbGVJY29uRGlyZWN0aXZlLFxuICAgICAgICBNb250aFZpZXdDb21wb25lbnQsXG4gICAgICAgIFllYXJWaWV3Q29tcG9uZW50LFxuICAgICAgICBNdWx0aVllYXJWaWV3Q29tcG9uZW50LFxuICAgICAgICBDYWxlbmRhckhlYWRlckNvbXBvbmVudFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbSGNEYXRlcGlja2VySW50bCwgSENfREFURVBJQ0tFUl9TQ1JPTExfU1RSQVRFR1lfRkFDVE9SWV9QUk9WSURFUl0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbRGF0ZXBpY2tlckNvbnRlbnRDb21wb25lbnQsIENhbGVuZGFySGVhZGVyQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBEYXRlcGlja2VyTW9kdWxlIHt9XG4iXX0=