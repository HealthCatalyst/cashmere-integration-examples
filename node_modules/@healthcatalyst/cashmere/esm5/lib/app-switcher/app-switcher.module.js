/**
 * @fileoverview added by tsickle
 * Generated from: lib/app-switcher/app-switcher.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { AppSwitcherComponent } from './app-switcher.component';
import { PopModule } from '../pop/popover.module';
import { ProgressIndicatorsModule } from '../progress-indicators/progress-indicators.module';
import { AppSwitcherService } from './app-switcher.service';
import { WorkTrackerService } from '../shared/work-tracker.service';
import { PipesModule } from '../pipes/pipes.module';
import { APP_SWITCHER_CONFIG, APP_SWITCHER_SERVICE } from './app-switcher-interfaces';
import { AppSwitcherLinksComponent } from './app-switcher-application-link/app-switcher-links.component';
import { IconModule } from '../icon/icon.module';
var AppSwitcherModule = /** @class */ (function () {
    function AppSwitcherModule() {
    }
    /**
     * @param {?} config
     * @return {?}
     */
    AppSwitcherModule.forRoot = /**
     * @param {?} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: AppSwitcherModule,
            providers: [
                {
                    provide: APP_SWITCHER_CONFIG,
                    useValue: config
                }
            ]
        };
    };
    AppSwitcherModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, PopModule, HttpClientModule, PipesModule, IconModule, ProgressIndicatorsModule],
                    declarations: [AppSwitcherComponent, AppSwitcherLinksComponent],
                    exports: [AppSwitcherComponent, AppSwitcherLinksComponent],
                    entryComponents: [AppSwitcherComponent],
                    providers: [
                        {
                            provide: APP_SWITCHER_SERVICE,
                            useClass: AppSwitcherService
                        },
                        WorkTrackerService
                    ]
                },] }
    ];
    return AppSwitcherModule;
}());
export { AppSwitcherModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXN3aXRjaGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BoZWFsdGhjYXRhbHlzdC9jYXNobWVyZS8iLCJzb3VyY2VzIjpbImxpYi9hcHAtc3dpdGNoZXIvYXBwLXN3aXRjaGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV0RCxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUM5RCxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDaEQsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sbURBQW1ELENBQUM7QUFDM0YsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ2xELE9BQU8sRUFBcUIsbUJBQW1CLEVBQUUsb0JBQW9CLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RyxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSw4REFBOEQsQ0FBQztBQUN2RyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFFL0M7SUFBQTtJQXlCQSxDQUFDOzs7OztJQVhVLHlCQUFPOzs7O0lBQWQsVUFBZSxNQUEwQjtRQUNyQyxPQUFPO1lBQ0gsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixTQUFTLEVBQUU7Z0JBQ1A7b0JBQ0ksT0FBTyxFQUFFLG1CQUFtQjtvQkFDNUIsUUFBUSxFQUFFLE1BQU07aUJBQ25CO2FBQ0o7U0FDSixDQUFDO0lBQ04sQ0FBQzs7Z0JBeEJKLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsd0JBQXdCLENBQUM7b0JBQ3ZHLFlBQVksRUFBRSxDQUFDLG9CQUFvQixFQUFFLHlCQUF5QixDQUFDO29CQUMvRCxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSx5QkFBeUIsQ0FBQztvQkFDMUQsZUFBZSxFQUFFLENBQUMsb0JBQW9CLENBQUM7b0JBQ3ZDLFNBQVMsRUFBRTt3QkFDUDs0QkFDSSxPQUFPLEVBQUUsb0JBQW9COzRCQUM3QixRQUFRLEVBQUUsa0JBQWtCO3lCQUMvQjt3QkFDRCxrQkFBa0I7cUJBQ3JCO2lCQUNKOztJQWFELHdCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FaWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtIdHRwQ2xpZW50TW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cbmltcG9ydCB7QXBwU3dpdGNoZXJDb21wb25lbnR9IGZyb20gJy4vYXBwLXN3aXRjaGVyLmNvbXBvbmVudCc7XG5pbXBvcnQge1BvcE1vZHVsZX0gZnJvbSAnLi4vcG9wL3BvcG92ZXIubW9kdWxlJztcbmltcG9ydCB7UHJvZ3Jlc3NJbmRpY2F0b3JzTW9kdWxlfSBmcm9tICcuLi9wcm9ncmVzcy1pbmRpY2F0b3JzL3Byb2dyZXNzLWluZGljYXRvcnMubW9kdWxlJztcbmltcG9ydCB7QXBwU3dpdGNoZXJTZXJ2aWNlfSBmcm9tICcuL2FwcC1zd2l0Y2hlci5zZXJ2aWNlJztcbmltcG9ydCB7V29ya1RyYWNrZXJTZXJ2aWNlfSBmcm9tICcuLi9zaGFyZWQvd29yay10cmFja2VyLnNlcnZpY2UnO1xuaW1wb3J0IHtQaXBlc01vZHVsZX0gZnJvbSAnLi4vcGlwZXMvcGlwZXMubW9kdWxlJztcbmltcG9ydCB7SUFwcFN3aXRjaGVyQ29uZmlnLCBBUFBfU1dJVENIRVJfQ09ORklHLCBBUFBfU1dJVENIRVJfU0VSVklDRX0gZnJvbSAnLi9hcHAtc3dpdGNoZXItaW50ZXJmYWNlcyc7XG5pbXBvcnQge0FwcFN3aXRjaGVyTGlua3NDb21wb25lbnR9IGZyb20gJy4vYXBwLXN3aXRjaGVyLWFwcGxpY2F0aW9uLWxpbmsvYXBwLXN3aXRjaGVyLWxpbmtzLmNvbXBvbmVudCc7XG5pbXBvcnQge0ljb25Nb2R1bGV9IGZyb20gJy4uL2ljb24vaWNvbi5tb2R1bGUnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFBvcE1vZHVsZSwgSHR0cENsaWVudE1vZHVsZSwgUGlwZXNNb2R1bGUsIEljb25Nb2R1bGUsIFByb2dyZXNzSW5kaWNhdG9yc01vZHVsZV0sXG4gICAgZGVjbGFyYXRpb25zOiBbQXBwU3dpdGNoZXJDb21wb25lbnQsIEFwcFN3aXRjaGVyTGlua3NDb21wb25lbnRdLFxuICAgIGV4cG9ydHM6IFtBcHBTd2l0Y2hlckNvbXBvbmVudCwgQXBwU3dpdGNoZXJMaW5rc0NvbXBvbmVudF0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbQXBwU3dpdGNoZXJDb21wb25lbnRdLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBBUFBfU1dJVENIRVJfU0VSVklDRSxcbiAgICAgICAgICAgIHVzZUNsYXNzOiBBcHBTd2l0Y2hlclNlcnZpY2VcbiAgICAgICAgfSxcbiAgICAgICAgV29ya1RyYWNrZXJTZXJ2aWNlXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBBcHBTd2l0Y2hlck1vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3QoY29uZmlnOiBJQXBwU3dpdGNoZXJDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBBcHBTd2l0Y2hlck1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZTogQVBQX1NXSVRDSEVSX0NPTkZJRyxcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9XG59XG4iXX0=