/**
 * @fileoverview added by tsickle
 * Generated from: lib/pop/popover.errors.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { VALID_HORIZ_ALIGN, VALID_VERT_ALIGN, VALID_SCROLL, VALID_TRIGGER } from './types';
/**
 * @return {?}
 */
export function getInvalidPopoverError() {
    return Error('HcPopoverAnchorDirective must be provided an HcPopover component instance.');
}
/**
 * @return {?}
 */
export function getUnanchoredPopoverError() {
    return Error('HcPopover is not anchored to any HcPopoverAnchorDirective.');
}
/**
 * @param {?} alignment
 * @return {?}
 */
export function getInvalidHorizontalAlignError(alignment) {
    return Error(generateGenericError('horizontalAlign/xAlign', alignment, VALID_HORIZ_ALIGN));
}
/**
 * @param {?} alignment
 * @return {?}
 */
export function getInvalidVerticalAlignError(alignment) {
    return Error(generateGenericError('verticalAlign/yAlign', alignment, VALID_VERT_ALIGN));
}
/**
 * @param {?} trigger
 * @return {?}
 */
export function getInvalidTriggerError(trigger) {
    return Error(generateGenericError('trigger', trigger, VALID_TRIGGER));
}
/**
 * @param {?} strategy
 * @return {?}
 */
export function getInvalidScrollStrategyError(strategy) {
    return Error(generateGenericError('scrollStrategy', strategy, VALID_SCROLL));
}
/**
 * @param {?} apiName
 * @param {?} invalid
 * @param {?} valid
 * @return {?}
 */
function generateGenericError(apiName, invalid, valid) {
    return "Invalid " + apiName + ": '" + invalid + "'. Valid options are " + (valid.map((/**
     * @param {?} v
     * @return {?}
     */
    function (v) { return "'" + v + "'"; })).join(', ') + ".");
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5lcnJvcnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGVhbHRoY2F0YWx5c3QvY2FzaG1lcmUvIiwic291cmNlcyI6WyJsaWIvcG9wL3BvcG92ZXIuZXJyb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUMsTUFBTSxTQUFTLENBQUM7Ozs7QUFFekYsTUFBTSxVQUFVLHNCQUFzQjtJQUNsQyxPQUFPLEtBQUssQ0FBQyw0RUFBNEUsQ0FBQyxDQUFDO0FBQy9GLENBQUM7Ozs7QUFFRCxNQUFNLFVBQVUseUJBQXlCO0lBQ3JDLE9BQU8sS0FBSyxDQUFDLDREQUE0RCxDQUFDLENBQUM7QUFDL0UsQ0FBQzs7Ozs7QUFFRCxNQUFNLFVBQVUsOEJBQThCLENBQUMsU0FBUztJQUNwRCxPQUFPLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyx3QkFBd0IsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO0FBQy9GLENBQUM7Ozs7O0FBRUQsTUFBTSxVQUFVLDRCQUE0QixDQUFDLFNBQVM7SUFDbEQsT0FBTyxLQUFLLENBQUMsb0JBQW9CLENBQUMsc0JBQXNCLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixDQUFDLENBQUMsQ0FBQztBQUM1RixDQUFDOzs7OztBQUVELE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxPQUFPO0lBQzFDLE9BQU8sS0FBSyxDQUFDLG9CQUFvQixDQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztBQUMxRSxDQUFDOzs7OztBQUVELE1BQU0sVUFBVSw2QkFBNkIsQ0FBQyxRQUFRO0lBQ2xELE9BQU8sS0FBSyxDQUFDLG9CQUFvQixDQUFDLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2pGLENBQUM7Ozs7Ozs7QUFFRCxTQUFTLG9CQUFvQixDQUFDLE9BQWUsRUFBRSxPQUFZLEVBQUUsS0FBZTtJQUN4RSxPQUFPLGFBQVcsT0FBTyxXQUFNLE9BQU8sMEJBQXVCLElBQU0sS0FBSyxDQUFDLEdBQUc7Ozs7SUFBQyxVQUFBLENBQUMsSUFBSSxPQUFBLE1BQUksQ0FBQyxNQUFHLEVBQVIsQ0FBUSxFQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFHLENBQUEsQ0FBQztBQUM5RyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtWQUxJRF9IT1JJWl9BTElHTiwgVkFMSURfVkVSVF9BTElHTiwgVkFMSURfU0NST0xMLCBWQUxJRF9UUklHR0VSfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEludmFsaWRQb3BvdmVyRXJyb3IoKTogRXJyb3Ige1xuICAgIHJldHVybiBFcnJvcignSGNQb3BvdmVyQW5jaG9yRGlyZWN0aXZlIG11c3QgYmUgcHJvdmlkZWQgYW4gSGNQb3BvdmVyIGNvbXBvbmVudCBpbnN0YW5jZS4nKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFVuYW5jaG9yZWRQb3BvdmVyRXJyb3IoKTogRXJyb3Ige1xuICAgIHJldHVybiBFcnJvcignSGNQb3BvdmVyIGlzIG5vdCBhbmNob3JlZCB0byBhbnkgSGNQb3BvdmVyQW5jaG9yRGlyZWN0aXZlLicpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW52YWxpZEhvcml6b250YWxBbGlnbkVycm9yKGFsaWdubWVudCk6IEVycm9yIHtcbiAgICByZXR1cm4gRXJyb3IoZ2VuZXJhdGVHZW5lcmljRXJyb3IoJ2hvcml6b250YWxBbGlnbi94QWxpZ24nLCBhbGlnbm1lbnQsIFZBTElEX0hPUklaX0FMSUdOKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnZhbGlkVmVydGljYWxBbGlnbkVycm9yKGFsaWdubWVudCk6IEVycm9yIHtcbiAgICByZXR1cm4gRXJyb3IoZ2VuZXJhdGVHZW5lcmljRXJyb3IoJ3ZlcnRpY2FsQWxpZ24veUFsaWduJywgYWxpZ25tZW50LCBWQUxJRF9WRVJUX0FMSUdOKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnZhbGlkVHJpZ2dlckVycm9yKHRyaWdnZXIpOiBFcnJvciB7XG4gICAgcmV0dXJuIEVycm9yKGdlbmVyYXRlR2VuZXJpY0Vycm9yKCd0cmlnZ2VyJywgdHJpZ2dlciwgVkFMSURfVFJJR0dFUikpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW52YWxpZFNjcm9sbFN0cmF0ZWd5RXJyb3Ioc3RyYXRlZ3kpOiBFcnJvciB7XG4gICAgcmV0dXJuIEVycm9yKGdlbmVyYXRlR2VuZXJpY0Vycm9yKCdzY3JvbGxTdHJhdGVneScsIHN0cmF0ZWd5LCBWQUxJRF9TQ1JPTEwpKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVHZW5lcmljRXJyb3IoYXBpTmFtZTogc3RyaW5nLCBpbnZhbGlkOiBhbnksIHZhbGlkOiBzdHJpbmdbXSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBJbnZhbGlkICR7YXBpTmFtZX06ICcke2ludmFsaWR9Jy4gVmFsaWQgb3B0aW9ucyBhcmUgYCArIGAke3ZhbGlkLm1hcCh2ID0+IGAnJHt2fSdgKS5qb2luKCcsICcpfS5gO1xufVxuIl19