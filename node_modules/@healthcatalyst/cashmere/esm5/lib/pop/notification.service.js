/**
 * @fileoverview added by tsickle
 * Generated from: lib/pop/notification.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
/** @enum {number} */
var NotificationAction = {
    /** Popover should open. */
    OPEN: 0,
    /** Popover should close. */
    CLOSE: 1,
    /** Popover should toggle open or closed. */
    TOGGLE: 2,
    /** Popover has new target positions. */
    REPOSITION: 3,
    /** Popover needs new configuration. */
    UPDATE_CONFIG: 4,
    /** Popover should realign itself to the anchor.  */
    REALIGN: 5,
};
export { NotificationAction };
NotificationAction[NotificationAction.OPEN] = 'OPEN';
NotificationAction[NotificationAction.CLOSE] = 'CLOSE';
NotificationAction[NotificationAction.TOGGLE] = 'TOGGLE';
NotificationAction[NotificationAction.REPOSITION] = 'REPOSITION';
NotificationAction[NotificationAction.UPDATE_CONFIG] = 'UPDATE_CONFIG';
NotificationAction[NotificationAction.REALIGN] = 'REALIGN';
/**
 * Event object for dispatching to anchoring service.
 */
var /**
 * Event object for dispatching to anchoring service.
 */
PopoverNotification = /** @class */ (function () {
    function PopoverNotification(action, value) {
        this.action = action;
        this.value = value;
    }
    return PopoverNotification;
}());
/**
 * Event object for dispatching to anchoring service.
 */
export { PopoverNotification };
if (false) {
    /**
     * Action to perform.
     * @type {?}
     */
    PopoverNotification.prototype.action;
    /**
     * Optional payload.
     * @type {?}
     */
    PopoverNotification.prototype.value;
}
var PopoverNotificationService = /** @class */ (function () {
    function PopoverNotificationService() {
        this.store = new Subject();
    }
    /** Dispatch a notification to all subscribers. */
    /**
     * Dispatch a notification to all subscribers.
     * @param {?} notification
     * @return {?}
     */
    PopoverNotificationService.prototype.dispatch = /**
     * Dispatch a notification to all subscribers.
     * @param {?} notification
     * @return {?}
     */
    function (notification) {
        this.store.next(notification);
    };
    /** Stream of notification events. */
    /**
     * Stream of notification events.
     * @return {?}
     */
    PopoverNotificationService.prototype.events = /**
     * Stream of notification events.
     * @return {?}
     */
    function () {
        return this.store.asObservable();
    };
    /** Complete event stream. */
    /**
     * Complete event stream.
     * @return {?}
     */
    PopoverNotificationService.prototype.dispose = /**
     * Complete event stream.
     * @return {?}
     */
    function () {
        this.store.complete();
    };
    PopoverNotificationService.decorators = [
        { type: Injectable }
    ];
    return PopoverNotificationService;
}());
export { PopoverNotificationService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PopoverNotificationService.prototype.store;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGVhbHRoY2F0YWx5c3QvY2FzaG1lcmUvIiwic291cmNlcyI6WyJsaWIvcG9wL25vdGlmaWNhdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQWEsT0FBTyxFQUFDLE1BQU0sTUFBTSxDQUFDOztBQUd6QyxJQUFZLGtCQUFrQjtJQUMxQiwyQkFBMkI7SUFDM0IsSUFBSSxHQUFBO0lBQ0osNEJBQTRCO0lBQzVCLEtBQUssR0FBQTtJQUNMLDRDQUE0QztJQUM1QyxNQUFNLEdBQUE7SUFDTix3Q0FBd0M7SUFDeEMsVUFBVSxHQUFBO0lBQ1YsdUNBQXVDO0lBQ3ZDLGFBQWEsR0FBQTtJQUNiLG9EQUFvRDtJQUNwRCxPQUFPLEdBQUE7RUFDVjs7Ozs7Ozs7Ozs7QUFHRDs7OztJQUNJLDZCQUVXLE1BQTBCLEVBRTFCLEtBQVc7UUFGWCxXQUFNLEdBQU4sTUFBTSxDQUFvQjtRQUUxQixVQUFLLEdBQUwsS0FBSyxDQUFNO0lBQ25CLENBQUM7SUFDUiwwQkFBQztBQUFELENBQUMsQUFQRCxJQU9DOzs7Ozs7Ozs7O0lBSk8scUNBQWlDOzs7OztJQUVqQyxvQ0FBa0I7O0FBSTFCO0lBQUE7UUFFWSxVQUFLLEdBQUcsSUFBSSxPQUFPLEVBQXVCLENBQUM7SUFnQnZELENBQUM7SUFkRyxrREFBa0Q7Ozs7OztJQUNsRCw2Q0FBUTs7Ozs7SUFBUixVQUFTLFlBQWlDO1FBQ3RDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxxQ0FBcUM7Ozs7O0lBQ3JDLDJDQUFNOzs7O0lBQU47UUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELDZCQUE2Qjs7Ozs7SUFDN0IsNENBQU87Ozs7SUFBUDtRQUNJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7Z0JBakJKLFVBQVU7O0lBa0JYLGlDQUFDO0NBQUEsQUFsQkQsSUFrQkM7U0FqQlksMEJBQTBCOzs7Ozs7SUFDbkMsMkNBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7T2JzZXJ2YWJsZSwgU3ViamVjdH0gZnJvbSAncnhqcyc7XG5cbi8qKiBFbnVtZXJhdGVkIGFjdGlvbnMgZm9yIGEgcG9wb3ZlciB0byBwZXJmb3JtLiAqL1xuZXhwb3J0IGVudW0gTm90aWZpY2F0aW9uQWN0aW9uIHtcbiAgICAvKiogUG9wb3ZlciBzaG91bGQgb3Blbi4gKi9cbiAgICBPUEVOLFxuICAgIC8qKiBQb3BvdmVyIHNob3VsZCBjbG9zZS4gKi9cbiAgICBDTE9TRSxcbiAgICAvKiogUG9wb3ZlciBzaG91bGQgdG9nZ2xlIG9wZW4gb3IgY2xvc2VkLiAqL1xuICAgIFRPR0dMRSxcbiAgICAvKiogUG9wb3ZlciBoYXMgbmV3IHRhcmdldCBwb3NpdGlvbnMuICovXG4gICAgUkVQT1NJVElPTixcbiAgICAvKiogUG9wb3ZlciBuZWVkcyBuZXcgY29uZmlndXJhdGlvbi4gKi9cbiAgICBVUERBVEVfQ09ORklHLFxuICAgIC8qKiBQb3BvdmVyIHNob3VsZCByZWFsaWduIGl0c2VsZiB0byB0aGUgYW5jaG9yLiAgKi9cbiAgICBSRUFMSUdOXG59XG5cbi8qKiBFdmVudCBvYmplY3QgZm9yIGRpc3BhdGNoaW5nIHRvIGFuY2hvcmluZyBzZXJ2aWNlLiAqL1xuZXhwb3J0IGNsYXNzIFBvcG92ZXJOb3RpZmljYXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICAvKiogQWN0aW9uIHRvIHBlcmZvcm0uICovXG4gICAgICAgIHB1YmxpYyBhY3Rpb246IE5vdGlmaWNhdGlvbkFjdGlvbixcbiAgICAgICAgLyoqIE9wdGlvbmFsIHBheWxvYWQuICovXG4gICAgICAgIHB1YmxpYyB2YWx1ZT86IGFueVxuICAgICkge31cbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJOb3RpZmljYXRpb25TZXJ2aWNlIHtcbiAgICBwcml2YXRlIHN0b3JlID0gbmV3IFN1YmplY3Q8UG9wb3Zlck5vdGlmaWNhdGlvbj4oKTtcblxuICAgIC8qKiBEaXNwYXRjaCBhIG5vdGlmaWNhdGlvbiB0byBhbGwgc3Vic2NyaWJlcnMuICovXG4gICAgZGlzcGF0Y2gobm90aWZpY2F0aW9uOiBQb3BvdmVyTm90aWZpY2F0aW9uKSB7XG4gICAgICAgIHRoaXMuc3RvcmUubmV4dChub3RpZmljYXRpb24pO1xuICAgIH1cblxuICAgIC8qKiBTdHJlYW0gb2Ygbm90aWZpY2F0aW9uIGV2ZW50cy4gKi9cbiAgICBldmVudHMoKTogT2JzZXJ2YWJsZTxQb3BvdmVyTm90aWZpY2F0aW9uPiB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0b3JlLmFzT2JzZXJ2YWJsZSgpO1xuICAgIH1cblxuICAgIC8qKiBDb21wbGV0ZSBldmVudCBzdHJlYW0uICovXG4gICAgZGlzcG9zZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdG9yZS5jb21wbGV0ZSgpO1xuICAgIH1cbn1cbiJdfQ==