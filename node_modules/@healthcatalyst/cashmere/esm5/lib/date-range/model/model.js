/**
 * @fileoverview added by tsickle
 * Generated from: lib/date-range/model/model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function PresetItem() { }
if (false) {
    /**
     * Friendly description
     * @type {?}
     */
    PresetItem.prototype.presetLabel;
    /**
     * Date range
     * @type {?}
     */
    PresetItem.prototype.range;
}
/**
 * @record
 */
export function DateRange() { }
if (false) {
    /**
     * Beginning Date
     * @type {?|undefined}
     */
    DateRange.prototype.fromDate;
    /**
     * Ending Date
     * @type {?|undefined}
     */
    DateRange.prototype.toDate;
}
/**
 * @record
 */
export function DateRangeOptions() { }
if (false) {
    /**
     * set of predefined dates user can select
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.presets;
    /**
     * Display format of date. See https://angular.io/api/common/DatePipe#pre-defined-format-options
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.format;
    /**
     * Whether the date range pickers include the calendar, time selector, or both. Defaults to `date`.
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.mode;
    /**
     * If the time picker should use the 12 or 24 hour clock. Defaults to 12
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.hourCycle;
    /**
     * Exclude weekends in date picker selection
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.excludeWeekends;
    /**
     * Locale settings of dates
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.locale;
    /**
     * Beginning date maximum allowed value
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.fromMinMax;
    /**
     * Ending date maximum allowed value
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.toMinMax;
    /**
     * Text label of apply button. Default 'Apply'
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.applyLabel;
    /**
     * Text label of cancel button Default 'Cancel'
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.cancelLabel;
    /**
     * Text label above start date. Default 'Start date'
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.startDatePrefix;
    /**
     * Text label above end date. Default 'End date'
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.endDatePrefix;
    /**
     * Text label of invalid date. Default 'Please enter valid date'
     * @type {?|undefined}
     */
    DateRangeOptions.prototype.invalidDateLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGVhbHRoY2F0YWx5c3QvY2FzaG1lcmUvIiwic291cmNlcyI6WyJsaWIvZGF0ZS1yYW5nZS9tb2RlbC9tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBLGdDQUtDOzs7Ozs7SUFIRyxpQ0FBb0I7Ozs7O0lBRXBCLDJCQUFpQjs7Ozs7QUFJckIsK0JBS0M7Ozs7OztJQUhHLDZCQUFnQjs7Ozs7SUFFaEIsMkJBQWM7Ozs7O0FBSWxCLHNDQTJCQzs7Ozs7O0lBekJHLG1DQUE0Qjs7Ozs7SUFFNUIsa0NBQWdCOzs7OztJQUVoQixnQ0FBcUM7Ozs7O0lBRXJDLHFDQUFtQjs7Ozs7SUFFbkIsMkNBQTBCOzs7OztJQUUxQixrQ0FBZ0I7Ozs7O0lBRWhCLHNDQUF1Qjs7Ozs7SUFFdkIsb0NBQXFCOzs7OztJQUVyQixzQ0FBb0I7Ozs7O0lBRXBCLHVDQUFxQjs7Ozs7SUFFckIsMkNBQXlCOzs7OztJQUV6Qix5Q0FBdUI7Ozs7O0lBRXZCLDRDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbIi8vICoqIFByZXNldCBkYXRlIHJhbmdlIHRvIGJlIGJvdW5kIGFzIGEgc2VsZWN0YWJsZSBvcHRpb24gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUHJlc2V0SXRlbSB7XG4gICAgLyoqIEZyaWVuZGx5IGRlc2NyaXB0aW9uICovXG4gICAgcHJlc2V0TGFiZWw6IHN0cmluZztcbiAgICAvKiogRGF0ZSByYW5nZSAqL1xuICAgIHJhbmdlOiBEYXRlUmFuZ2U7XG59XG5cbi8vICoqIFJhbmdlIG9mIGRhdGVzIHdpdGggYmVnaW5uaW5nIGFuZCBlbmQgKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGF0ZVJhbmdlIHtcbiAgICAvKiogQmVnaW5uaW5nIERhdGUgKi9cbiAgICBmcm9tRGF0ZT86IERhdGU7XG4gICAgLyoqIEVuZGluZyBEYXRlICovXG4gICAgdG9EYXRlPzogRGF0ZTtcbn1cblxuLy8gKiogQmVoYXZpb3JhbCBPcHRpb25zIG9mIHRoZSBkYXRlIHJhbmdlIGNvbXBvbmVudCAqL1xuZXhwb3J0IGludGVyZmFjZSBEYXRlUmFuZ2VPcHRpb25zIHtcbiAgICAvKiogc2V0IG9mIHByZWRlZmluZWQgZGF0ZXMgdXNlciBjYW4gc2VsZWN0ICovXG4gICAgcHJlc2V0cz86IEFycmF5PFByZXNldEl0ZW0+O1xuICAgIC8qKiBEaXNwbGF5IGZvcm1hdCBvZiBkYXRlLiBTZWUgaHR0cHM6Ly9hbmd1bGFyLmlvL2FwaS9jb21tb24vRGF0ZVBpcGUjcHJlLWRlZmluZWQtZm9ybWF0LW9wdGlvbnMgKi9cbiAgICBmb3JtYXQ/OiBzdHJpbmc7XG4gICAgLyoqIFdoZXRoZXIgdGhlIGRhdGUgcmFuZ2UgcGlja2VycyBpbmNsdWRlIHRoZSBjYWxlbmRhciwgdGltZSBzZWxlY3Rvciwgb3IgYm90aC4gRGVmYXVsdHMgdG8gYGRhdGVgLiAqL1xuICAgIG1vZGU/OiAnZGF0ZScgfCAndGltZScgfCAnZGF0ZS10aW1lJztcbiAgICAvKiogSWYgdGhlIHRpbWUgcGlja2VyIHNob3VsZCB1c2UgdGhlIDEyIG9yIDI0IGhvdXIgY2xvY2suIERlZmF1bHRzIHRvIDEyICovXG4gICAgaG91ckN5Y2xlPzogbnVtYmVyO1xuICAgIC8qKiBFeGNsdWRlIHdlZWtlbmRzIGluIGRhdGUgcGlja2VyIHNlbGVjdGlvbiAqL1xuICAgIGV4Y2x1ZGVXZWVrZW5kcz86IGJvb2xlYW47XG4gICAgLyoqIExvY2FsZSBzZXR0aW5ncyBvZiBkYXRlcyAqL1xuICAgIGxvY2FsZT86IHN0cmluZztcbiAgICAvKiogQmVnaW5uaW5nIGRhdGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlICovXG4gICAgZnJvbU1pbk1heD86IERhdGVSYW5nZTtcbiAgICAvKiogRW5kaW5nIGRhdGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlICovXG4gICAgdG9NaW5NYXg/OiBEYXRlUmFuZ2U7XG4gICAgLyoqIFRleHQgbGFiZWwgb2YgYXBwbHkgYnV0dG9uLiBEZWZhdWx0ICdBcHBseScgKi9cbiAgICBhcHBseUxhYmVsPzogc3RyaW5nO1xuICAgIC8qKiBUZXh0IGxhYmVsIG9mIGNhbmNlbCBidXR0b24gRGVmYXVsdCAnQ2FuY2VsJyAqL1xuICAgIGNhbmNlbExhYmVsPzogc3RyaW5nO1xuICAgIC8qKiBUZXh0IGxhYmVsIGFib3ZlIHN0YXJ0IGRhdGUuIERlZmF1bHQgJ1N0YXJ0IGRhdGUnICovXG4gICAgc3RhcnREYXRlUHJlZml4Pzogc3RyaW5nO1xuICAgIC8qKiBUZXh0IGxhYmVsIGFib3ZlIGVuZCBkYXRlLiBEZWZhdWx0ICdFbmQgZGF0ZScgKi9cbiAgICBlbmREYXRlUHJlZml4Pzogc3RyaW5nO1xuICAgIC8qKiBUZXh0IGxhYmVsIG9mIGludmFsaWQgZGF0ZS4gRGVmYXVsdCAnUGxlYXNlIGVudGVyIHZhbGlkIGRhdGUnICovXG4gICAgaW52YWxpZERhdGVMYWJlbD86IHN0cmluZztcbn1cbiJdfQ==