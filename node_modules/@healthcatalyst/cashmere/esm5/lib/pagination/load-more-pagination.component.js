/**
 * @fileoverview added by tsickle
 * Generated from: lib/pagination/load-more-pagination.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { validateStyleInput } from '../button/button.component';
import { BasePaginationComponent } from './base-pagination';
/**
 * A simple "load more" pagination button.
 * \@inheritdoc
 *
 */
var LoadMorePaginationComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LoadMorePaginationComponent, _super);
    function LoadMorePaginationComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Text to show on the button. *Defaults to 'Load more'.*
         */
        _this.buttonText = 'Load more';
        _this._style = 'secondary';
        return _this;
    }
    Object.defineProperty(LoadMorePaginationComponent.prototype, "buttonStyle", {
        /** Sets style of button. Choose from: `'primary' | 'primary-alt' | 'destructive' | 'neutral' | 'secondary' | 'link' | 'link-inline'`.
         * *Defaults to `'secondary'`.*
         */
        get: /**
         * Sets style of button. Choose from: `'primary' | 'primary-alt' | 'destructive' | 'neutral' | 'secondary' | 'link' | 'link-inline'`.
         * *Defaults to `'secondary'`.*
         * @return {?}
         */
        function () {
            return this._style;
        },
        set: /**
         * @param {?} btnStyle
         * @return {?}
         */
        function (btnStyle) {
            validateStyleInput(btnStyle);
            this._style = btnStyle;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    LoadMorePaginationComponent.prototype._loadNextPage = /**
     * @return {?}
     */
    function () {
        if (this._isLastPage) {
            return;
        }
        this.pageNumber = this.pageNumber + 1;
    };
    LoadMorePaginationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'hc-load-more-pagination',
                    template: "<button hc-button class=\"hc-page-load-more-button\" [buttonStyle]=\"buttonStyle\" (click)=\"_loadNextPage()\" [disabled]=\"_isLastPage\">\n    {{buttonText}}\n</button>",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".hc-page-load-more-button{display:block;margin:20px auto;min-width:30%}"]
                }] }
    ];
    LoadMorePaginationComponent.propDecorators = {
        buttonText: [{ type: Input }],
        buttonStyle: [{ type: Input }]
    };
    return LoadMorePaginationComponent;
}(BasePaginationComponent));
export { LoadMorePaginationComponent };
if (false) {
    /**
     * Text to show on the button. *Defaults to 'Load more'.*
     * @type {?}
     */
    LoadMorePaginationComponent.prototype.buttonText;
    /**
     * @type {?}
     * @private
     */
    LoadMorePaginationComponent.prototype._style;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZC1tb3JlLXBhZ2luYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGhlYWx0aGNhdGFseXN0L2Nhc2htZXJlLyIsInNvdXJjZXMiOlsibGliL3BhZ2luYXRpb24vbG9hZC1tb3JlLXBhZ2luYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFVLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFFLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQzlELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7QUFLMUQ7SUFNaUQsdURBQXVCO0lBTnhFO1FBQUEscUVBaUNDOzs7O1FBdEJHLGdCQUFVLEdBQUcsV0FBVyxDQUFDO1FBY2pCLFlBQU0sR0FBVyxXQUFXLENBQUM7O0lBUXpDLENBQUM7SUFqQkcsc0JBQ0ksb0RBQVc7UUFKZjs7V0FFRzs7Ozs7O1FBQ0g7WUFFSSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDdkIsQ0FBQzs7Ozs7UUFFRCxVQUFnQixRQUFnQjtZQUM1QixrQkFBa0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTs7OztJQVFELG1EQUFhOzs7SUFBYjtRQUNJLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNsQixPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7O2dCQWhDSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHlCQUF5QjtvQkFDbkMscUxBQW9EO29CQUVwRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3hDOzs7NkJBS0ksS0FBSzs4QkFNTCxLQUFLOztJQWlCVixrQ0FBQztDQUFBLEFBakNELENBTWlELHVCQUF1QixHQTJCdkU7U0EzQlksMkJBQTJCOzs7Ozs7SUFJcEMsaURBQ3lCOzs7OztJQWN6Qiw2Q0FBcUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb259IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt2YWxpZGF0ZVN0eWxlSW5wdXR9IGZyb20gJy4uL2J1dHRvbi9idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7QmFzZVBhZ2luYXRpb25Db21wb25lbnR9IGZyb20gJy4vYmFzZS1wYWdpbmF0aW9uJztcblxuLyoqIEEgc2ltcGxlIFwibG9hZCBtb3JlXCIgcGFnaW5hdGlvbiBidXR0b24uXG4gKiBAaW5oZXJpdGRvY1xuICogKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaGMtbG9hZC1tb3JlLXBhZ2luYXRpb24nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sb2FkLW1vcmUtcGFnaW5hdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbG9hZC1tb3JlLXBhZ2luYXRpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIExvYWRNb3JlUGFnaW5hdGlvbkNvbXBvbmVudCBleHRlbmRzIEJhc2VQYWdpbmF0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICAvKipcbiAgICAgKiBUZXh0IHRvIHNob3cgb24gdGhlIGJ1dHRvbi4gKkRlZmF1bHRzIHRvICdMb2FkIG1vcmUnLipcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGJ1dHRvblRleHQgPSAnTG9hZCBtb3JlJztcblxuICAgIC8qKiBTZXRzIHN0eWxlIG9mIGJ1dHRvbi4gQ2hvb3NlIGZyb206IGAncHJpbWFyeScgfCAncHJpbWFyeS1hbHQnIHwgJ2Rlc3RydWN0aXZlJyB8ICduZXV0cmFsJyB8ICdzZWNvbmRhcnknIHwgJ2xpbmsnIHwgJ2xpbmstaW5saW5lJ2AuXG4gICAgICogKkRlZmF1bHRzIHRvIGAnc2Vjb25kYXJ5J2AuKlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgZ2V0IGJ1dHRvblN0eWxlKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdHlsZTtcbiAgICB9XG5cbiAgICBzZXQgYnV0dG9uU3R5bGUoYnRuU3R5bGU6IHN0cmluZykge1xuICAgICAgICB2YWxpZGF0ZVN0eWxlSW5wdXQoYnRuU3R5bGUpO1xuICAgICAgICB0aGlzLl9zdHlsZSA9IGJ0blN0eWxlO1xuICAgIH1cbiAgICBwcml2YXRlIF9zdHlsZTogc3RyaW5nID0gJ3NlY29uZGFyeSc7XG5cbiAgICBfbG9hZE5leHRQYWdlKCkge1xuICAgICAgICBpZiAodGhpcy5faXNMYXN0UGFnZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFnZU51bWJlciA9IHRoaXMucGFnZU51bWJlciArIDE7XG4gICAgfVxufVxuIl19