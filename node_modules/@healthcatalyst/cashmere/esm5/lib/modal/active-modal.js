/**
 * @fileoverview added by tsickle
 * Generated from: lib/modal/active-modal.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @template T, U
 */
var /**
 * @template T, U
 */
ActiveModal = /** @class */ (function () {
    function ActiveModal() {
    }
    /** Closes the modal with an optional result.
     * Use this close method when opening a modal using a component. When doing so,
     * ActiveModal must be injected in order to get access to the close method.
     * To dismiss a modal that was created from a TemplateRef, use the dismiss method
     * on HcModal */
    /**
     * Closes the modal with an optional result.
     * Use this close method when opening a modal using a component. When doing so,
     * ActiveModal must be injected in order to get access to the close method.
     * To dismiss a modal that was created from a TemplateRef, use the dismiss method
     * on HcModal
     * @param {?=} result
     * @return {?}
     */
    ActiveModal.prototype.close = /**
     * Closes the modal with an optional result.
     * Use this close method when opening a modal using a component. When doing so,
     * ActiveModal must be injected in order to get access to the close method.
     * To dismiss a modal that was created from a TemplateRef, use the dismiss method
     * on HcModal
     * @param {?=} result
     * @return {?}
     */
    function (result) { };
    /** Dismisses the modal with no result.
     * Use this dismiss method when opening a modal using a component. When doing so,
     * ActiveModal must be injected in order to get access to the dismiss method.
     * To dismiss a modal that was created from a TemplateRef, use the dismiss method
     * on HcModal */
    /**
     * Dismisses the modal with no result.
     * Use this dismiss method when opening a modal using a component. When doing so,
     * ActiveModal must be injected in order to get access to the dismiss method.
     * To dismiss a modal that was created from a TemplateRef, use the dismiss method
     * on HcModal
     * @return {?}
     */
    ActiveModal.prototype.dismiss = /**
     * Dismisses the modal with no result.
     * Use this dismiss method when opening a modal using a component. When doing so,
     * ActiveModal must be injected in order to get access to the dismiss method.
     * To dismiss a modal that was created from a TemplateRef, use the dismiss method
     * on HcModal
     * @return {?}
     */
    function () { };
    return ActiveModal;
}());
/**
 * @template T, U
 */
export { ActiveModal };
if (false) {
    /**
     * Data that was passed in through ModalOptions
     * @type {?}
     */
    ActiveModal.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlLW1vZGFsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGhlYWx0aGNhdGFseXN0L2Nhc2htZXJlLyIsInNvdXJjZXMiOlsibGliL21vZGFsL2FjdGl2ZS1tb2RhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0lBQUE7SUFlQSxDQUFDO0lBWkc7Ozs7b0JBSWdCOzs7Ozs7Ozs7O0lBQ1QsMkJBQUs7Ozs7Ozs7OztJQUFaLFVBQWEsTUFBVSxJQUFTLENBQUM7SUFDakM7Ozs7b0JBSWdCOzs7Ozs7Ozs7SUFDVCw2QkFBTzs7Ozs7Ozs7SUFBZCxjQUF3QixDQUFDO0lBQzdCLGtCQUFDO0FBQUQsQ0FBQyxBQWZELElBZUM7Ozs7Ozs7Ozs7SUFiRywyQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQWN0aXZlTW9kYWw8VCA9IGFueSwgVSA9IGFueT4ge1xuICAgIC8qKiBEYXRhIHRoYXQgd2FzIHBhc3NlZCBpbiB0aHJvdWdoIE1vZGFsT3B0aW9ucyAqL1xuICAgIHB1YmxpYyBkYXRhPzogVDtcbiAgICAvKiogQ2xvc2VzIHRoZSBtb2RhbCB3aXRoIGFuIG9wdGlvbmFsIHJlc3VsdC5cbiAgICAgKiBVc2UgdGhpcyBjbG9zZSBtZXRob2Qgd2hlbiBvcGVuaW5nIGEgbW9kYWwgdXNpbmcgYSBjb21wb25lbnQuIFdoZW4gZG9pbmcgc28sXG4gICAgICogQWN0aXZlTW9kYWwgbXVzdCBiZSBpbmplY3RlZCBpbiBvcmRlciB0byBnZXQgYWNjZXNzIHRvIHRoZSBjbG9zZSBtZXRob2QuXG4gICAgICogVG8gZGlzbWlzcyBhIG1vZGFsIHRoYXQgd2FzIGNyZWF0ZWQgZnJvbSBhIFRlbXBsYXRlUmVmLCB1c2UgdGhlIGRpc21pc3MgbWV0aG9kXG4gICAgICogb24gSGNNb2RhbCAqL1xuICAgIHB1YmxpYyBjbG9zZShyZXN1bHQ/OiBVKTogdm9pZCB7fVxuICAgIC8qKiBEaXNtaXNzZXMgdGhlIG1vZGFsIHdpdGggbm8gcmVzdWx0LlxuICAgICAqIFVzZSB0aGlzIGRpc21pc3MgbWV0aG9kIHdoZW4gb3BlbmluZyBhIG1vZGFsIHVzaW5nIGEgY29tcG9uZW50LiBXaGVuIGRvaW5nIHNvLFxuICAgICAqIEFjdGl2ZU1vZGFsIG11c3QgYmUgaW5qZWN0ZWQgaW4gb3JkZXIgdG8gZ2V0IGFjY2VzcyB0byB0aGUgZGlzbWlzcyBtZXRob2QuXG4gICAgICogVG8gZGlzbWlzcyBhIG1vZGFsIHRoYXQgd2FzIGNyZWF0ZWQgZnJvbSBhIFRlbXBsYXRlUmVmLCB1c2UgdGhlIGRpc21pc3MgbWV0aG9kXG4gICAgICogb24gSGNNb2RhbCAqL1xuICAgIHB1YmxpYyBkaXNtaXNzKCk6IHZvaWQge31cbn1cbiJdfQ==