{"version":3,"file":"healthcatalyst-cashmere.js","sources":["ng://@healthcatalyst/cashmere/lib/util.ts","ng://@healthcatalyst/cashmere/lib/accordion/accordion.component.ts","ng://@healthcatalyst/cashmere/lib/accordion/accordion-toolbar.component.ts","ng://@healthcatalyst/cashmere/lib/accordion/accordion.module.ts","ng://@healthcatalyst/cashmere/lib/app-switcher/app-switcher-interfaces.ts","ng://@healthcatalyst/cashmere/lib/shared/work-tracker.service.ts","ng://@healthcatalyst/cashmere/lib/app-switcher/app-switcher.component.ts","ng://@healthcatalyst/cashmere/lib/app-switcher/app-switcher-application-link/app-switcher-links.component.ts","ng://@healthcatalyst/cashmere/lib/pop/popover.animations.ts","ng://@healthcatalyst/cashmere/lib/pop/notification.service.ts","ng://@healthcatalyst/cashmere/lib/pop/types.ts","ng://@healthcatalyst/cashmere/lib/pop/popover.errors.ts","ng://@healthcatalyst/cashmere/lib/pop/directives/menu-item.directive.ts","ng://@healthcatalyst/cashmere/lib/pop/popover.component.ts","ng://@healthcatalyst/cashmere/lib/pop/popover-anchoring.service.ts","ng://@healthcatalyst/cashmere/lib/pop/popover-accessibility.service.ts","ng://@healthcatalyst/cashmere/lib/pop/directives/popover-anchor.directive.ts","ng://@healthcatalyst/cashmere/lib/pop/directives/menu.directive.ts","ng://@healthcatalyst/cashmere/lib/pop/directives/menu-icon.directive.ts","ng://@healthcatalyst/cashmere/lib/pop/directives/menu-text.directive.ts","ng://@healthcatalyst/cashmere/lib/pop/directives/menu-sub-text.directive.ts","ng://@healthcatalyst/cashmere/lib/pop/directives/divider.directive.ts","ng://@healthcatalyst/cashmere/lib/pop/popover.module.ts","ng://@healthcatalyst/cashmere/lib/progress-indicators/progress-spinner.component.ts","ng://@healthcatalyst/cashmere/lib/progress-indicators/progress-dots.component.ts","ng://@healthcatalyst/cashmere/lib/progress-indicators/progress-indicators.module.ts","ng://@healthcatalyst/cashmere/lib/app-switcher/app-switcher.service.ts","ng://@healthcatalyst/cashmere/lib/pipes/ellipsis/ellipsis.pipe.ts","ng://@healthcatalyst/cashmere/lib/pipes/ellipsis/ellipsis-pipe.module.ts","ng://@healthcatalyst/cashmere/lib/pipes/null-or-empty-string/null-or-empty-string.pipe.ts","ng://@healthcatalyst/cashmere/lib/pipes/null-or-empty-string/null-or-empty-string-pipe.module.ts","ng://@healthcatalyst/cashmere/lib/pipes/file-size/file-size.pipe.ts","ng://@healthcatalyst/cashmere/lib/pipes/file-size/file-size-pipe.module.ts","ng://@healthcatalyst/cashmere/lib/pipes/number-abbreviator/number-abbreviator.pipe.ts","ng://@healthcatalyst/cashmere/lib/pipes/number-abbreviator/number-abbreviator-pipe.module.ts","ng://@healthcatalyst/cashmere/lib/pipes/pipes.module.ts","ng://@healthcatalyst/cashmere/lib/icon/icon.component.ts","ng://@healthcatalyst/cashmere/lib/icon/hc-icon-sm.directive.ts","ng://@healthcatalyst/cashmere/lib/icon/hc-icon-md.directive.ts","ng://@healthcatalyst/cashmere/lib/icon/hc-icon-lg.directive.ts","ng://@healthcatalyst/cashmere/lib/icon/icon.module.ts","ng://@healthcatalyst/cashmere/lib/app-switcher/app-switcher.module.ts","ng://@healthcatalyst/cashmere/lib/banner/hc-banner.component.ts","ng://@healthcatalyst/cashmere/lib/banner/hc-banner-stamp.directive.ts","ng://@healthcatalyst/cashmere/lib/banner/hc-banner.module.ts","ng://@healthcatalyst/cashmere/lib/breadcrumbs/breadcrumbs.component.ts","ng://@healthcatalyst/cashmere/lib/breadcrumbs/breadcrumbs.module.ts","ng://@healthcatalyst/cashmere/lib/button/button.component.ts","ng://@healthcatalyst/cashmere/lib/button/anchor.component.ts","ng://@healthcatalyst/cashmere/lib/button/split-button/split-button.component.ts","ng://@healthcatalyst/cashmere/lib/button/button.module.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-form-control.component.ts","ng://@healthcatalyst/cashmere/lib/checkbox/checkbox.component.ts","ng://@healthcatalyst/cashmere/lib/checkbox/checkbox-required.directive.ts","ng://@healthcatalyst/cashmere/lib/checkbox/checkbox.module.ts","ng://@healthcatalyst/cashmere/lib/chip/chip.component.ts","ng://@healthcatalyst/cashmere/lib/chip/chip-row/chip-row.component.ts","ng://@healthcatalyst/cashmere/lib/chip/chip.module.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datepicker-intl.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datetime/datepicker-errors.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datetime/date-formats.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datetime/date-adapter.ts","ng://@healthcatalyst/cashmere/lib/datepicker/calendar-body/calendar-body.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/multi-year-view/multi-year-view.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/month-view/month-view.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/year-view/year-view.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/calendar/calendar.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datepicker-animations.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datepicker-content/datepicker-content.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/utils/boolean-property.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datepicker.component.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-error.component.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-prefix.directive.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-suffix.directive.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-label.component.ts","ng://@healthcatalyst/cashmere/lib/input/input.directive.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-form-field.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datepicker-input/datepicker-input.directive.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datepicker-toggle/datepicker-toggle.component.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datetime/native-date-adapter.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datetime/native-date-formats.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datetime/datetime.module.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-label-ext.component.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-form.directive.ts","ng://@healthcatalyst/cashmere/lib/form-field/hc-form-field.module.ts","ng://@healthcatalyst/cashmere/lib/input/input.module.ts","ng://@healthcatalyst/cashmere/lib/select/hc-option.directive.ts","ng://@healthcatalyst/cashmere/lib/select/select.component.ts","ng://@healthcatalyst/cashmere/lib/select/select.module.ts","ng://@healthcatalyst/cashmere/lib/datepicker/datepicker.module.ts","ng://@healthcatalyst/cashmere/lib/date-range/services/config-store.service.ts","ng://@healthcatalyst/cashmere/lib/date-range/calendar-wrapper/calendar-wrapper.component.ts","ng://@healthcatalyst/cashmere/lib/date-range/picker-overlay/picker-overlay.component.ts","ng://@healthcatalyst/cashmere/lib/date-range/services/calendar-overlay.service.ts","ng://@healthcatalyst/cashmere/lib/date-range/date-range/date-range.directive.ts","ng://@healthcatalyst/cashmere/lib/radio-button/radio.ts","ng://@healthcatalyst/cashmere/lib/radio-button/radio-button.module.ts","ng://@healthcatalyst/cashmere/lib/date-range/date-range.module.ts","ng://@healthcatalyst/cashmere/lib/drawer/drawer.component.ts","ng://@healthcatalyst/cashmere/lib/drawer/drawer-container.component.ts","ng://@healthcatalyst/cashmere/lib/drawer/menu-drawer/drawer-header.directive.ts","ng://@healthcatalyst/cashmere/lib/drawer/menu-drawer/menu-drawer.component.ts","ng://@healthcatalyst/cashmere/lib/drawer/menu-drawer/drawer-item.component.ts","ng://@healthcatalyst/cashmere/lib/drawer/drawer.module.ts","ng://@healthcatalyst/cashmere/lib/list/list.component.ts","ng://@healthcatalyst/cashmere/lib/list/list-item/list-item.component.ts","ng://@healthcatalyst/cashmere/lib/list/list-item/directives/list-avatar.directive.ts","ng://@healthcatalyst/cashmere/lib/list/list-item/directives/list-icon.directive.ts","ng://@healthcatalyst/cashmere/lib/list/list-item/directives/list-line.directive.ts","ng://@healthcatalyst/cashmere/lib/list/list.module.ts","ng://@healthcatalyst/cashmere/lib/modal/active-modal.ts","ng://@healthcatalyst/cashmere/lib/modal/modal.component.ts","ng://@healthcatalyst/cashmere/lib/modal/modal-footer.component.ts","ng://@healthcatalyst/cashmere/lib/modal/modal-window.component.ts","ng://@healthcatalyst/cashmere/lib/modal/modal-overlay.component.ts","ng://@healthcatalyst/cashmere/lib/modal/modal.ts","ng://@healthcatalyst/cashmere/lib/modal/modal.service.ts","ng://@healthcatalyst/cashmere/lib/modal/modal-header.component.ts","ng://@healthcatalyst/cashmere/lib/modal/modal-body.component.ts","ng://@healthcatalyst/cashmere/lib/modal/modal.module.ts","ng://@healthcatalyst/cashmere/lib/navbar/navbar-link/navbar-link.component.ts","ng://@healthcatalyst/cashmere/lib/navbar/navbar-mobile-menu/navbar-mobile-menu.component.ts","ng://@healthcatalyst/cashmere/lib/navbar/navbar.component.ts","ng://@healthcatalyst/cashmere/lib/navbar/navbar.module.ts","ng://@healthcatalyst/cashmere/lib/shared/initializable.ts","ng://@healthcatalyst/cashmere/lib/pagination/base-pagination.ts","ng://@healthcatalyst/cashmere/lib/pagination/pagination.component.ts","ng://@healthcatalyst/cashmere/lib/pagination/load-more-pagination.component.ts","ng://@healthcatalyst/cashmere/lib/pagination/page-event.ts","ng://@healthcatalyst/cashmere/lib/pagination/pagination.module.ts","ng://@healthcatalyst/cashmere/lib/picklist/picklist.model.ts","ng://@healthcatalyst/cashmere/lib/picklist/picklist.component.ts","ng://@healthcatalyst/cashmere/lib/picklist/pane/picklist-pane.model.ts","ng://@healthcatalyst/cashmere/lib/picklist/services/picklist-filter-local.service.ts","ng://@healthcatalyst/cashmere/lib/picklist/services/picklist-state.service.ts","ng://@healthcatalyst/cashmere/lib/picklist/services/picklist-filter-remote.service.ts","ng://@healthcatalyst/cashmere/lib/picklist/services/picklist-filter.service.ts","ng://@healthcatalyst/cashmere/lib/picklist/services/picklist-valueset-moving.service.ts","ng://@healthcatalyst/cashmere/lib/picklist/services/picklist.service.ts","ng://@healthcatalyst/cashmere/lib/picklist/services/picklist-action.service.ts","ng://@healthcatalyst/cashmere/lib/picklist/pane/picklist-pane.component.ts","ng://@healthcatalyst/cashmere/lib/picklist/picklist.module.ts","ng://@healthcatalyst/cashmere/lib/scroll-nav/nav/scroll-nav-link.directive.ts","ng://@healthcatalyst/cashmere/lib/scroll-nav/nav/scroll-nav.component.ts","ng://@healthcatalyst/cashmere/lib/scroll-nav/content/scroll-nav-target.directive.ts","ng://@healthcatalyst/cashmere/lib/scroll-nav/content/scroll-nav-content.component.ts","ng://@healthcatalyst/cashmere/lib/scroll-nav/scroll-nav.module.ts","ng://@healthcatalyst/cashmere/lib/sort/sort-errors.ts","ng://@healthcatalyst/cashmere/lib/sort/sort.ts","ng://@healthcatalyst/cashmere/lib/sort/sort-animations.ts","ng://@healthcatalyst/cashmere/lib/sort/sort-header-intl.ts","ng://@healthcatalyst/cashmere/lib/sort/sort-header.ts","ng://@healthcatalyst/cashmere/lib/sort/sort-module.ts","ng://@healthcatalyst/cashmere/lib/stepper/stepper.component.ts","ng://@healthcatalyst/cashmere/lib/stepper/stepper.module.ts","ng://@healthcatalyst/cashmere/lib/subnav/subnav.component.ts","ng://@healthcatalyst/cashmere/lib/subnav/subnav-right.directive.ts","ng://@healthcatalyst/cashmere/lib/subnav/subnav.module.ts","ng://@healthcatalyst/cashmere/lib/table/table.component.ts","ng://@healthcatalyst/cashmere/lib/table/cell.ts","ng://@healthcatalyst/cashmere/lib/table/row.ts","ng://@healthcatalyst/cashmere/lib/table/bind-observable/bind-observable-options.ts","ng://@healthcatalyst/cashmere/lib/table/bind-observable/bind-observable.ts","ng://@healthcatalyst/cashmere/lib/table/cell-resizer.component.ts","ng://@healthcatalyst/cashmere/lib/table/table.module.ts","ng://@healthcatalyst/cashmere/lib/table/table-data-source.ts","ng://@healthcatalyst/cashmere/lib/tabs/tab/tab-title.component.ts","ng://@healthcatalyst/cashmere/lib/tabs/tab/tab.component.ts","ng://@healthcatalyst/cashmere/lib/tabs/tab-set/tab-set.component.ts","ng://@healthcatalyst/cashmere/lib/tabs/tabs.module.ts","ng://@healthcatalyst/cashmere/lib/tile/tile.component.ts","ng://@healthcatalyst/cashmere/lib/tile/tile.module.ts","ng://@healthcatalyst/cashmere/lib/toaster/hc-toast.component.ts","ng://@healthcatalyst/cashmere/lib/toaster/hc-toast-ref.ts","ng://@healthcatalyst/cashmere/lib/toaster/hc-toaster.service.ts","ng://@healthcatalyst/cashmere/lib/toaster/hc-toaster.module.ts","ng://@healthcatalyst/cashmere/lib/typeform-survey/typeform-survey.component.ts","ng://@healthcatalyst/cashmere/lib/typeform-survey/typeform-survey.module.ts"],"sourcesContent":["import {Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nexport function parseBooleanAttribute(value: boolean | string): boolean {\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    if (value.toLowerCase() === 'false') {\n        return false;\n    }\n    if (value.toLowerCase() === 'true' || value === '') {\n        return true;\n    }\n    throw Error(String(value) + ' is not a boolean value');\n}\n\n/* Open Source `take-until-destroy` operator from: https://github.com/NetanelBasal/ngx-take-until-destroy */\n\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\nexport const untilDestroyed = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(source: Observable<T>) => {\n    const originalDestroy = componentInstance[destroyMethodName];\n    if (isFunction(originalDestroy) === false) {\n        throw new Error(`${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`);\n    }\n    if (!componentInstance['__takeUntilDestroy']) {\n        componentInstance['__takeUntilDestroy'] = new Subject();\n\n        componentInstance[destroyMethodName] = function() {\n            isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\n            componentInstance['__takeUntilDestroy'].next(true);\n            componentInstance['__takeUntilDestroy'].complete();\n        };\n    }\n    return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\n};\n","import {AfterContentInit, Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation} from '@angular/core';\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {parseBooleanAttribute} from '../util';\n\nconst supportedAligns = ['left', 'right'];\n\nexport function validateAlignInput(inputStr: string) {\n    if (supportedAligns.indexOf(inputStr) < 0) {\n        throw Error('Unsupported accordion alignment value: ' + inputStr);\n    }\n}\n\n/** Parent component that can have a `<hc-accordion-toolbar>` and content that is collapsable */\n@Component({\n    selector: 'hc-accordion',\n    templateUrl: './accordion.component.html',\n    styleUrls: ['./accordion.component.scss'],\n    exportAs: 'hcAccordion',\n    animations: [\n        trigger('openState', [\n            state(\n                'open, open-instant',\n                style({\n                    height: '*'\n                })\n            ),\n            state(\n                'void',\n                style({\n                    height: '0px',\n                    visibility: 'hidden'\n                })\n            ),\n            transition('void => open-instant', animate('0ms')),\n            transition('void <=> open', animate('400ms ease'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AccordionComponent implements AfterContentInit {\n    private _animationDisabled = false;\n    private _currentlyAnimating = false;\n    private _hideToolbar = false;\n    private _toolbarTrigger = true;\n    private _triggerAlign = 'left';\n    private __isOpen = false;\n\n    /** Side the accordion trigger is attached to: `left` or `right` */\n    @Input()\n    get triggerAlign(): string {\n        return this._triggerAlign;\n    }\n\n    set triggerAlign(alignType: string) {\n        validateAlignInput(alignType);\n        this._triggerAlign = alignType;\n    }\n\n    /** Whether the entire width of the accordion bar is clickable, or only the down arrow button; default = true */\n    @Input()\n    get toolbarTrigger(): boolean {\n        return this._toolbarTrigger;\n    }\n\n    set toolbarTrigger(doTrigger) {\n        this._toolbarTrigger = parseBooleanAttribute(doTrigger);\n    }\n\n    /** Hide toolbar. */\n    @Input()\n    get hideToolbar(): boolean {\n        return this._hideToolbar;\n    }\n\n    set hideToolbar(hide) {\n        this._hideToolbar = parseBooleanAttribute(hide);\n    }\n\n    /** Whether the accordion is opened. */\n    @Input()\n    get open(): boolean {\n        return this.__isOpen;\n    }\n\n    set open(opened) {\n        this.toggle(parseBooleanAttribute(opened));\n    }\n\n    /** Allows for two-way binding of the `open` property */\n    @Output() openChange = new EventEmitter<boolean>();\n\n    /** Event emitted when accordion is opened. */\n    @Output()\n    opened = new EventEmitter();\n\n    /** Event emitted when accordion has started to open. */\n    @Output()\n    openStart = new EventEmitter();\n\n    /** Event emitted when accordion is closed. */\n    @Output()\n    closed = new EventEmitter();\n\n    /** Event emitted when accordion has started to close. */\n    @Output()\n    closeStart = new EventEmitter();\n\n    @HostBinding('class.hc-accordion')\n    _hostClass = true;\n\n    get _alignment(): string {\n        return this.triggerAlign === 'right' ? 'hc-align-right' : '';\n    }\n\n    get _pointer(): string {\n        return this.toolbarTrigger === true ? 'hc-toolbar-pointer' : '';\n    }\n\n    get _openState(): 'void' | 'open-instant' | 'open' {\n        if (this.__isOpen) {\n            return this._animationDisabled ? 'open-instant' : 'open';\n        }\n        return 'void';\n    }\n\n    _animationStart(event: AnimationEvent): void {\n        this._currentlyAnimating = true;\n\n        const {fromState, toState} = event;\n        if (fromState === 'void' && toState === 'open') {\n            this.openStart.emit();\n        } else if (fromState === 'open' && toState === 'void') {\n            this.closeStart.emit();\n        }\n    }\n\n    _animationEnd(event: AnimationEvent): void {\n        this._currentlyAnimating = false;\n\n        const {fromState, toState} = event;\n        if (fromState === 'void' && toState === 'open') {\n            this.opened.emit();\n        } else if (fromState === 'open' && toState === 'void') {\n            this.closed.emit();\n        }\n    }\n\n    @HostBinding('class.hc-accordion-opened')\n    get _isOpened(): boolean {\n        return this.__isOpen && !this._currentlyAnimating;\n    }\n\n    @HostBinding('class.hc-accordion-opening')\n    get _isOpening(): boolean {\n        return this.__isOpen && this._currentlyAnimating;\n    }\n\n    @HostBinding('class.hc-accordion-closed')\n    get _isClosed(): boolean {\n        return !this.__isOpen && !this._currentlyAnimating;\n    }\n\n    @HostBinding('class.hc-accordion-closing')\n    get _isClosing(): boolean {\n        return !this.__isOpen && this._currentlyAnimating;\n    }\n\n    ngAfterContentInit(): void {\n        this._animationDisabled = false;\n    }\n\n    _triggerClick(event: Event, toolbarClick: boolean): void {\n        if ((toolbarClick && this.toolbarTrigger) || !toolbarClick) {\n            event.stopPropagation();\n            this.toggle();\n        }\n    }\n\n    /** Opens accordion. */\n    toggleOpen(): void {\n        return this.toggle(true);\n    }\n\n    /** Closes accordion. */\n    toggleClose(): void {\n        return this.toggle(false);\n    }\n\n    /** Toggle this accordion. */\n    toggle(isOpen: boolean = !this.open): void {\n        if (!this._currentlyAnimating) {\n            this.__isOpen = isOpen;\n            this.openChange.emit(isOpen);\n        }\n    }\n}\n","import {ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n/** Container for content that is to be shown in-line with the accordion trigger  */\n@Component({\n    selector: 'hc-accordion-toolbar',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccordionToolbarComponent {\n    @HostBinding('class.hc-accordion-toolbar')\n    _hostClass = true;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AccordionComponent} from './accordion.component';\nimport {AccordionToolbarComponent} from './accordion-toolbar.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [AccordionComponent, AccordionToolbarComponent],\n    exports: [AccordionComponent, AccordionToolbarComponent]\n})\nexport class AccordionModule {}\n","import {Observable, of} from 'rxjs';\nimport {InjectionToken} from '@angular/core';\n\nexport interface IDiscoveryApplication {\n    ServiceName: string;\n    FriendlyName: string;\n    Description: string;\n    BuildNumber: string | null;\n    Version: number;\n    DiscoveryServiceId: number | null;\n    ServiceUrl: string;\n    Heartbeat?: Date;\n    IsHidden?: boolean;\n    DiscoveryType: string;\n    Icon: string;\n}\n\nexport interface IDiscoveryRequest {\n    value: IDiscoveryApplication[];\n}\n\nexport interface IAppSwitcherService {\n    allApplicationsUri: string;\n\n    getApplications(): Observable<IDiscoveryRequest>;\n}\n\nexport const APP_SWITCHER_SERVICE = new InjectionToken<IAppSwitcherService>('IAppSwitcherService');\n\nexport interface IAppSwitcherConfig {\n    discoveryServiceUri: string;\n}\n\nexport const APP_SWITCHER_CONFIG = new InjectionToken<IAppSwitcherConfig>('IAppSwitcherConfig');\n\nexport class MockAppSwitcherService implements IAppSwitcherService {\n    allApplicationsUri: string;\n\n    getApplications(): Observable<IDiscoveryRequest> {\n        return of({\n            value: [\n                {\n                    ServiceName: 'MyApp',\n                    FriendlyName: 'My App',\n                    Description: 'The currently showing app',\n                    BuildNumber: '123',\n                    Version: 1,\n                    DiscoveryServiceId: 1,\n                    ServiceUrl: 'http://myapp.com',\n                    DiscoveryType: 'Application',\n                    Icon: ''\n                },\n                {\n                    ServiceName: 'AnotherApp',\n                    FriendlyName: 'Another App',\n                    Description: 'App we could switch to',\n                    BuildNumber: '123',\n                    Version: 1,\n                    DiscoveryServiceId: 2,\n                    ServiceUrl: 'http://anotherapp.com',\n                    DiscoveryType: 'Application',\n                    Icon: ''\n                }\n            ]\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, ReplaySubject, Subscription} from 'rxjs';\n\n@Injectable()\nexport class WorkTrackerService {\n    public start(task: () => Promise<any>): Observable<boolean> {\n        let working = new ReplaySubject<boolean>();\n        working.next(true);\n        task()\n            .then(() => {\n                working.next(false);\n            })\n            .catch(() => {\n                working.next(false);\n            });\n\n        return working.asObservable();\n    }\n\n    public startObservable(task: () => Subscription): Observable<boolean> {\n        let working = new ReplaySubject<boolean>();\n        let taskSubscription = task();\n        working.next(true);\n\n        taskSubscription.add(() => {\n            working.next(false);\n            taskSubscription.unsubscribe();\n        });\n\n        return working.asObservable();\n    }\n}\n","import {takeUntil} from 'rxjs/operators';\nimport {Component, Inject, OnDestroy, OnInit, Input, ViewEncapsulation} from '@angular/core';\nimport {Subject, Subscription, Observable} from 'rxjs';\n\nimport {IAppSwitcherService, IDiscoveryApplication, APP_SWITCHER_SERVICE} from './app-switcher-interfaces';\nimport {WorkTrackerService} from '../shared/work-tracker.service';\n\n@Component({\n    selector: 'hc-app-switcher',\n    templateUrl: './app-switcher.component.html',\n    styleUrls: ['./app-switcher.component.scss'],\n    // tslint:disable-next-line: no-host-metadata-property\n    host: {class: 'hc-app-switcher-container'},\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppSwitcherComponent implements OnInit, OnDestroy {\n    public applications: IDiscoveryApplication[];\n    public subscription: Subscription;\n    public brandBg = 'brand';\n    public loading: Observable<boolean>;\n    public loadFailed = false;\n    private _iconHeight: number = 60;\n    private _serviceName: string = '';\n    private _version: string = '';\n\n    private ngUnsubscribe: any = new Subject();\n\n    /** Sets the height of the app thumbnail icons, width is auto (defaults to 100px) */\n    @Input()\n    get iconHeight(): number {\n        return this._iconHeight;\n    }\n\n    set iconHeight(heightVal: number) {\n        this._iconHeight = heightVal;\n    }\n\n    @Input()\n    get serviceName(): string {\n        return this._serviceName;\n    }\n\n    set serviceName(serviceNameVal: string) {\n        this._serviceName = serviceNameVal;\n    }\n    @Input()\n    get serviceVersion(): string | number {\n        return this._version;\n    }\n\n    set serviceVersion(serviceVersionVal: string | number) {\n        this._version = `${serviceVersionVal}`;\n    }\n    constructor(@Inject(APP_SWITCHER_SERVICE) public appSwitcherService: IAppSwitcherService, private workTracker: WorkTrackerService) {}\n\n    ngOnInit() {\n        this.loadApplications();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n\n    public loadApplications() {\n        try {\n            this.loadApplicationFromDiscoveryService();\n        } catch (error) {\n            this.handleError(error);\n        }\n    }\n\n    private loadApplicationFromDiscoveryService() {\n        this.loading = this.workTracker.startObservable(() =>\n            this.appSwitcherService\n                .getApplications()\n                .pipe(takeUntil(this.ngUnsubscribe))\n                .subscribe(\n                    (response: any) => {\n                        this.applications = response.value;\n                    },\n                    (error: any) => {\n                        this.handleError(error);\n                    }\n                )\n        );\n    }\n\n    private handleError(error: any) {\n        console.error('Failed to load applications from the app switcher service.', error);\n        this.loadFailed = true;\n    }\n\n    linkIfNotMe(app): string {\n        return this.appIsMe(app) ? null : app.ServiceUrl;\n    }\n\n    appIsMe(app: IDiscoveryApplication) {\n        return app.ServiceName === this.serviceName && `${app.Version}` === this.serviceVersion;\n    }\n}\n","import {Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {IAppSwitcherService, APP_SWITCHER_SERVICE} from '../app-switcher-interfaces';\n\n@Component({\n    selector: 'hc-app-switcher-links',\n    templateUrl: './app-switcher-links.component.html',\n    styleUrls: ['./app-switcher-links.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppSwitcherLinksComponent {\n    constructor(@Inject(APP_SWITCHER_SERVICE) public _appSwitcherService: IAppSwitcherService) {}\n}\n","import {trigger, state, style, animate, transition, AnimationTriggerMetadata} from '@angular/animations';\n\nexport const transformPopover: AnimationTriggerMetadata = trigger('transformPopover', [\n    transition(':enter', [style({opacity: 0}), animate('{{openTransition}}', style({opacity: 1}))]),\n    transition(':leave', [animate('{{closeTransition}}', style({opacity: 0}))])\n]);\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** Enumerated actions for a popover to perform. */\nexport enum NotificationAction {\n    /** Popover should open. */\n    OPEN,\n    /** Popover should close. */\n    CLOSE,\n    /** Popover should toggle open or closed. */\n    TOGGLE,\n    /** Popover has new target positions. */\n    REPOSITION,\n    /** Popover needs new configuration. */\n    UPDATE_CONFIG,\n    /** Popover should realign itself to the anchor.  */\n    REALIGN\n}\n\n/** Event object for dispatching to anchoring service. */\nexport class PopoverNotification {\n    constructor(\n        /** Action to perform. */\n        public action: NotificationAction,\n        /** Optional payload. */\n        public value?: any\n    ) {}\n}\n\n@Injectable()\nexport class PopoverNotificationService {\n    private store = new Subject<PopoverNotification>();\n\n    /** Dispatch a notification to all subscribers. */\n    dispatch(notification: PopoverNotification) {\n        this.store.next(notification);\n    }\n\n    /** Stream of notification events. */\n    events(): Observable<PopoverNotification> {\n        return this.store.asObservable();\n    }\n\n    /** Complete event stream. */\n    dispose(): void {\n        this.store.complete();\n    }\n}\n","export type HcPopoverScrollStrategy = 'noop' | 'block' | 'reposition' | 'close';\nexport const VALID_SCROLL: HcPopoverScrollStrategy[] = ['noop', 'block', 'reposition', 'close'];\n\nexport type HcPopoverTrigger = 'click' | 'mousedown' | 'rightclick' | 'hover' | 'none';\nexport const VALID_TRIGGER: HcPopoverTrigger[] = ['click', 'mousedown', 'rightclick', 'hover', 'none'];\n\nexport type HcPopoverHorizontalAlign = 'before' | 'start' | 'center' | 'end' | 'after' | 'mouse';\nexport const VALID_HORIZ_ALIGN: HcPopoverHorizontalAlign[] = ['before', 'start', 'center', 'end', 'after', 'mouse'];\n\nexport type HcPopoverVerticalAlign = 'above' | 'start' | 'center' | 'end' | 'below' | 'mouse';\nexport const VALID_VERT_ALIGN: HcPopoverVerticalAlign[] = ['above', 'start', 'center', 'end', 'below', 'mouse'];\n\nexport interface HcPopoverOpenOptions {\n    /**\n     * Whether the popover should return focus to the previously focused element after\n     * closing. Defaults to true.\n     */\n    restoreFocus?: boolean;\n\n    /** Whether the first focusable element should be focused on open. Defaults to true. */\n    autoFocus?: boolean;\n}\n","import {VALID_HORIZ_ALIGN, VALID_VERT_ALIGN, VALID_SCROLL, VALID_TRIGGER} from './types';\n\nexport function getInvalidPopoverError(): Error {\n    return Error('HcPopoverAnchorDirective must be provided an HcPopover component instance.');\n}\n\nexport function getUnanchoredPopoverError(): Error {\n    return Error('HcPopover is not anchored to any HcPopoverAnchorDirective.');\n}\n\nexport function getInvalidHorizontalAlignError(alignment): Error {\n    return Error(generateGenericError('horizontalAlign/xAlign', alignment, VALID_HORIZ_ALIGN));\n}\n\nexport function getInvalidVerticalAlignError(alignment): Error {\n    return Error(generateGenericError('verticalAlign/yAlign', alignment, VALID_VERT_ALIGN));\n}\n\nexport function getInvalidTriggerError(trigger): Error {\n    return Error(generateGenericError('trigger', trigger, VALID_TRIGGER));\n}\n\nexport function getInvalidScrollStrategyError(strategy): Error {\n    return Error(generateGenericError('scrollStrategy', strategy, VALID_SCROLL));\n}\n\nfunction generateGenericError(apiName: string, invalid: any, valid: string[]): string {\n    return `Invalid ${apiName}: '${invalid}'. Valid options are ` + `${valid.map(v => `'${v}'`).join(', ')}.`;\n}\n","import {Directive, HostBinding, ElementRef, HostListener} from '@angular/core';\n\n/** Use `hcMenuItem` for a selectable item in an hcMenu. */\n@Directive({\n    selector: '[hcMenuItem], [hcButtonItem]'\n})\nexport class MenuItemDirective {\n    @HostBinding('class.hc-menu-item')\n    _hostClass = true;\n\n    // Menu Item uses focus for hover highlighting to sync with keyboard navigation of the menu\n    @HostListener('mouseenter')\n    focus(): void {\n        this.ref.nativeElement.focus();\n    }\n\n    @HostListener('touchend')\n    @HostListener('touchcancel')\n    @HostListener('mouseleave')\n    blur(): void {\n        this.ref.nativeElement.blur();\n    }\n\n    constructor(public ref: ElementRef) {}\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    ViewChild,\n    ViewEncapsulation,\n    TemplateRef,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ContentChildren,\n    QueryList\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {DOCUMENT} from '@angular/common';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {transformPopover} from './popover.animations';\nimport {NotificationAction, PopoverNotification, PopoverNotificationService} from './notification.service';\nimport {\n    getUnanchoredPopoverError,\n    getInvalidHorizontalAlignError,\n    getInvalidVerticalAlignError,\n    getInvalidScrollStrategyError\n} from './popover.errors';\nimport {\n    HcPopoverScrollStrategy,\n    HcPopoverHorizontalAlign,\n    HcPopoverVerticalAlign,\n    VALID_SCROLL,\n    VALID_HORIZ_ALIGN,\n    VALID_VERT_ALIGN,\n    HcPopoverOpenOptions\n} from './types';\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {MenuItemDirective} from './directives/menu-item.directive';\nimport {Subject} from 'rxjs';\n\n// See http://cubic-bezier.com/#.25,.8,.25,1 for reference.\nconst DEFAULT_TRANSITION = '100ms linear';\nconst EMPTY_TRANSITION = '0ms linear';\n\n@Component({\n    selector: 'hc-pop',\n    encapsulation: ViewEncapsulation.None,\n    animations: [transformPopover],\n    styleUrls: ['./popover.component.scss'],\n    templateUrl: './popover.component.html'\n})\nexport class HcPopComponent implements OnInit, OnDestroy {\n    /** Whether or not to disable default popover container styles. *Defaults to `false`.* */\n    @Input() disableStyle = false;\n\n    /** Whether or not to show a connection arrow when possible. *Defaults to `true`.* */\n    @Input() showArrow = true;\n\n    /** Alignment of the popover on the horizontal axis. Can be `before`, `start`, `center`, `end`, `after`, or `mouse`.\n     * *Defaults to `center`.* */\n    @Input()\n    get horizontalAlign() {\n        return this._horizontalAlign;\n    }\n    set horizontalAlign(val: HcPopoverHorizontalAlign) {\n        this._validateHorizontalAlign(val);\n        if (this._horizontalAlign !== val) {\n            this._horizontalAlign = val;\n            this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n        }\n    }\n    private _horizontalAlign: HcPopoverHorizontalAlign = 'center';\n\n    /** Alignment of the popover on the x axis. Alias for `horizontalAlign`. *Defaults to `\"center\"`.* */\n    @Input()\n    get xAlign() {\n        return this.horizontalAlign;\n    }\n    set xAlign(val: HcPopoverHorizontalAlign) {\n        this.horizontalAlign = val;\n    }\n\n    /** Alignment of the popover on the vertical axis. Can be `above`, `start`, `center`, `end`, `below`, or `mouse`.\n     * *Defaults to `\"below\"`.* */\n    @Input()\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n    set verticalAlign(val: HcPopoverVerticalAlign) {\n        this._validateVerticalAlign(val);\n        if (this._verticalAlign !== val) {\n            this._verticalAlign = val;\n            this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n        }\n    }\n    private _verticalAlign: HcPopoverVerticalAlign = 'below';\n\n    /** Alignment of the popover on the y axis. Alias for `verticalAlign`. *Defaults to `\"below\"`.* */\n    @Input()\n    get yAlign() {\n        return this.verticalAlign;\n    }\n    set yAlign(val: HcPopoverVerticalAlign) {\n        this.verticalAlign = val;\n    }\n\n    /** Whether the popover always opens with the specified alignment. *Defaults to `false`.* */\n    @Input()\n    get forceAlignment() {\n        return this._forceAlignment;\n    }\n    set forceAlignment(val: boolean) {\n        const coercedVal = coerceBooleanProperty(val);\n        if (this._forceAlignment !== coercedVal) {\n            this._forceAlignment = coercedVal;\n            this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n        }\n    }\n    private _forceAlignment = false;\n\n    /**\n     * Whether the popover's alignment is locked after opening. This prevents the popover\n     * from changing its alignement when scrolling or changing the size of the viewport.\n     * *Defaults to `false`.*\n     */\n    @Input()\n    get lockAlignment() {\n        return this._lockAlignment;\n    }\n    set lockAlignment(val: boolean) {\n        const coercedVal = coerceBooleanProperty(val);\n        if (this._lockAlignment !== coercedVal) {\n            this._lockAlignment = coerceBooleanProperty(val);\n            this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n        }\n    }\n    private _lockAlignment = false;\n\n    /** Whether the first focusable element should be focused on open. *Defaults to `false`.* */\n    @Input()\n    get autoFocus() {\n        return this._autoFocus && this._autoFocusOverride;\n    }\n    set autoFocus(val: boolean) {\n        this._autoFocus = coerceBooleanProperty(val);\n    }\n    private _autoFocus = false;\n    _autoFocusOverride = false;\n\n    /** Whether the popover should return focus to the previously focused element after closing. *Defaults to `true`.* */\n    @Input()\n    get restoreFocus() {\n        return this._restoreFocus && this._restoreFocusOverride;\n    }\n    set restoreFocus(val: boolean) {\n        this._restoreFocus = coerceBooleanProperty(val);\n    }\n    private _restoreFocus = true;\n    _restoreFocusOverride = true;\n\n    /** How the popover should handle scrolling. *Defaults to `\"reposition\"`.* */\n    @Input()\n    get scrollStrategy() {\n        return this._scrollStrategy;\n    }\n    set scrollStrategy(val: HcPopoverScrollStrategy) {\n        this._validateScrollStrategy(val);\n        if (this._scrollStrategy !== val) {\n            this._scrollStrategy = val;\n            this._dispatchConfigNotification(new PopoverNotification(NotificationAction.UPDATE_CONFIG));\n        }\n    }\n    private _scrollStrategy: HcPopoverScrollStrategy = 'reposition';\n\n    /** Whether the popover should have a backdrop (includes closing on click). *Defaults to `true`.* */\n    @Input()\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(val: boolean) {\n        this._hasBackdrop = coerceBooleanProperty(val);\n        this._dispatchConfigNotification(new PopoverNotification(NotificationAction.UPDATE_CONFIG));\n    }\n    private _hasBackdrop = true;\n\n    /** Whether the popover should close when the user clicks the backdrop or presses ESC. *Defaults to `true`.* */\n    @Input()\n    get interactiveClose() {\n        return this._interactiveClose;\n    }\n    set interactiveClose(val: boolean) {\n        this._interactiveClose = coerceBooleanProperty(val);\n        this._dispatchConfigNotification(new PopoverNotification(NotificationAction.UPDATE_CONFIG));\n    }\n    private _interactiveClose = true;\n\n    /** Custom transition to use while opening. *Defaults to `'200ms cubic-bezier(0.25, 0.8, 0.25, 1)'`.* */\n    @Input()\n    get openTransition() {\n        return this._openTransition;\n    }\n    set openTransition(val: string) {\n        if (val) {\n            this._openTransition = val;\n        }\n    }\n    private _openTransition = DEFAULT_TRANSITION;\n\n    /** Custom transition to use while closing. *Defaults to `'200ms cubic-bezier(0.25, 0.8, 0.25, 1)'`.* */\n    @Input()\n    get closeTransition() {\n        return this._closeTransition;\n    }\n    set closeTransition(val: string) {\n        if (val) {\n            this._closeTransition = val;\n        }\n    }\n    private _closeTransition = DEFAULT_TRANSITION;\n\n    /** A link to an associated parent menu that will be closed when this menu closes. */\n    @Input()\n    get parent(): HcPopComponent {\n        return this._parentMenu;\n    }\n    set parent(val: HcPopComponent) {\n        if (this._parentMenu) {\n            this._parentClose.unsubscribe();\n        }\n        this._parentMenu = val;\n        this._parentClose = this._parentMenu.closed.subscribe(value => {\n            if (this.isOpen()) {\n                this.close();\n            }\n        });\n    }\n    private _parentMenu: HcPopComponent;\n\n    /** Should the popover animate? *Defaults to `true`.* */\n    @Input() shouldAnimate = true;\n\n    /** Optional backdrop class. *Defaults to `''`.* */\n    @Input() backdropClass = '';\n\n    /** Set to true if clicking anywhere inside the popover should close it. *Defaults to `false`.* */\n    @Input() autoCloseOnContentClick = false;\n\n    /** Emits when the popover is opened. If `context` was set on the anchor, it will be emitted with this event. */\n    @Output() opened = new EventEmitter<any>();\n\n    /** Emits when the popover is closed. */\n    @Output() closed = new EventEmitter<any>();\n\n    /** Emits when the popover has finished opening. */\n    @Output() afterOpen = new EventEmitter<void>();\n\n    /** Emits when the popover has finished closing. */\n    @Output() afterClose = new EventEmitter<void>();\n\n    /** Emits when the backdrop is clicked. */\n    @Output() backdropClicked = new EventEmitter<void>();\n\n    /** Emits when a keydown event is targeted to this popover's overlay. */\n    @Output() overlayKeydown = new EventEmitter<KeyboardEvent>();\n\n    /** Reference to template so it can be placed within a portal. */\n    @ViewChild(TemplateRef, {static: false}) _templateRef: TemplateRef<any>;\n\n    /** Stores the click coordinates for mouse-based positioning */\n    _offsetPos: number[] = [0, 0];\n\n    /** Stores a reference to the associated overlay */\n    _componentOverlay: OverlayRef;\n\n    /** Classes to be added to the popover for setting the correct transform origin. */\n    _classList: any = {};\n    _yAlignClass = '';\n    _xAlignClass = '';\n\n    /** Whether the popover is presently open. */\n    _open = false;\n\n    /** Instance of notification service. Will be undefined until attached to an anchor. */\n    _notifications: PopoverNotificationService;\n\n    /** Reference to the element to build a focus trap around. */\n    @ViewChild('focusTrapElement', {static: false})\n    private _focusTrapElement: ElementRef;\n\n    /** Reference to the element that was focused before opening. */\n    private _previouslyFocusedElement: HTMLElement | null;\n\n    /** Reference to a focus trap around the popover. */\n    private _focusTrap: FocusTrap | undefined;\n\n    /** If this menu has children, keep track of whether any of them are open */\n    public _subMenuOpen: boolean = false;\n\n    /** Reference to subscription of parent popover close events */\n    private _parentClose: any = new Subject();\n\n    /** Block this popover from closing its parent on close */\n    _parentCloseBlock: boolean = false;\n\n    /** Reference to hcMenuItems (if the popover contains them) */\n    @ContentChildren(MenuItemDirective, {descendants: true}) _menuItems: QueryList<MenuItemDirective>;\n\n    constructor(\n        public _elementRef: ElementRef,\n        private _focusTrapFactory: FocusTrapFactory,\n        @Optional() @Inject(DOCUMENT) private _document: any\n    ) {}\n\n    ngOnInit() {\n        this._setAlignmentClasses();\n    }\n\n    ngOnDestroy() {\n        if (this._notifications) {\n            this._notifications.dispose();\n        }\n        if (this._parentMenu) {\n            this._parentClose.unsubscribe();\n        }\n    }\n\n    _popContainerClicked(): void {\n        if (this.autoCloseOnContentClick) {\n            this.close();\n        }\n    }\n\n    /** Open this popover. */\n    open(options: HcPopoverOpenOptions = {}): void {\n        const notification = new PopoverNotification(NotificationAction.OPEN, options);\n        this._dispatchActionNotification(notification);\n    }\n\n    /** Close this popover and its parent (if linked). */\n    close(value?: any): void {\n        const notification = new PopoverNotification(NotificationAction.CLOSE, value);\n        this._dispatchActionNotification(notification);\n        if (this.parent && !this._parentCloseBlock) {\n            this.parent.close();\n        }\n    }\n\n    /** Toggle this popover open or closed. */\n    toggle(): void {\n        if (this.parent) {\n            this.parent._subMenuOpen = !this.isOpen();\n        }\n        const notification = new PopoverNotification(NotificationAction.TOGGLE);\n        this._dispatchActionNotification(notification);\n    }\n\n    /** Realign the popover to the anchor. */\n    realign(): void {\n        const notification = new PopoverNotification(NotificationAction.REALIGN);\n        this._dispatchActionNotification(notification);\n    }\n\n    /** Gets whether the popover is presently open. */\n    isOpen(): boolean {\n        return this._open;\n    }\n\n    /** Gets an animation config with customized (or default) transition values. */\n    _getAnimation(): {value: any; params: any} {\n        return {\n            value: 'visible',\n            params: {\n                openTransition: this.shouldAnimate ? this.openTransition : EMPTY_TRANSITION,\n                closeTransition: this.shouldAnimate ? this.closeTransition : EMPTY_TRANSITION\n            }\n        };\n    }\n\n    /** Callback for when the popover is finished animating in or out. */\n    _onAnimationDone(event: AnimationEvent) {\n        if (event.toState === 'visible') {\n            this._trapFocus();\n            this.afterOpen.emit();\n        } else if (event.toState === 'void') {\n            this._restoreFocusAndDestroyTrap();\n            this.afterClose.emit();\n        }\n    }\n\n    /** Apply alignment classes based on alignment inputs. */\n    _setAlignmentClasses(horizAlign = this.horizontalAlign, vertAlign = this.verticalAlign) {\n        this._setAlignmentClassesForAnimation(horizAlign, vertAlign);\n        this._setAlignmentClassesForArrow();\n    }\n\n    _setAlignmentClassesForAnimation(horizAlign = this.horizontalAlign, vertAlign = this.verticalAlign) {\n        this._classList['hc-pop-before'] = horizAlign === 'before' || horizAlign === 'end';\n        this._classList['hc-pop-after'] = horizAlign === 'after' || horizAlign === 'start';\n\n        this._classList['hc-pop-above'] = vertAlign === 'above' || vertAlign === 'end';\n        this._classList['hc-pop-below'] = vertAlign === 'below' || vertAlign === 'start';\n\n        this._classList['hc-pop-center'] = horizAlign === 'center' || vertAlign === 'center';\n    }\n\n    _setAlignmentClassesForArrow(xAlign = this.horizontalAlign, yAlign = this.verticalAlign) {\n        this._classList['hc-pop-show-arrow'] =\n            (this.showArrow &&\n                (xAlign === 'start' || xAlign === 'center' || xAlign === 'end') &&\n                (yAlign === 'above' || yAlign === 'below')) ||\n            ((yAlign === 'start' || yAlign === 'center' || yAlign === 'end') && (xAlign === 'before' || xAlign === 'after'));\n\n        this._yAlignClass = this._classList['hc-pop-show-arrow'] ? `hc-pop-arrow-y-${yAlign}` : '';\n        this._xAlignClass = this._classList['hc-pop-show-arrow'] ? `hc-pop-arrow-x-${xAlign}` : '';\n    }\n\n    /** Set the focus of an hcMenu based on a keyboard arrow press */\n    _keyFocus(downPress: boolean) {\n        let itemArray = this._menuItems.toArray();\n        if (!downPress) {\n            itemArray.reverse();\n        }\n        let selected = false;\n\n        // Determine if any item in the menu is currently focused, and select the next (or previous)\n        for (let i = 0; i < itemArray.length; i++) {\n            if (selected && !itemArray[i].ref.nativeElement.classList.contains('hc-divider') && !itemArray[i].ref.nativeElement.disabled) {\n                itemArray[i].focus();\n                return;\n            }\n            if (itemArray[i].ref.nativeElement === document.activeElement) {\n                selected = true;\n            }\n        }\n\n        // If no item is focused, selected the first (or last) item that isn't a divider or disabled\n        for (let i = 0; i < itemArray.length; i++) {\n            if (!itemArray[i].ref.nativeElement.classList.contains('hc-divider') && !itemArray[i].ref.nativeElement.disabled) {\n                itemArray[i].focus();\n                return;\n            }\n        }\n    }\n\n    /** Restore focus to the element focused before the popover opened. Also destroy trap. */\n    _restoreFocusAndDestroyTrap(): void {\n        const toFocus = this._previouslyFocusedElement;\n\n        // Must check active element is focusable for IE sake\n        if (toFocus && 'focus' in toFocus && this.restoreFocus && this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n        }\n\n        this._previouslyFocusedElement = null;\n\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n            this._focusTrap = undefined;\n        }\n    }\n\n    /** Save a reference to the element focused before the popover was opened. */\n    _savePreviouslyFocusedElement(): void {\n        if (this._document) {\n            this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n        }\n    }\n\n    /** Move the focus inside the focus trap and remember where to return later. */\n    private _trapFocus(): void {\n        // There won't be a focus trap element if the close animation starts before open finishes\n        if (!this._focusTrapElement) {\n            return;\n        }\n\n        if (!this._focusTrap && this._focusTrapElement) {\n            this._focusTrap = this._focusTrapFactory.create(this._focusTrapElement.nativeElement);\n        }\n\n        if (this.autoFocus && this._focusTrap) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n    }\n\n    /** Dispatch a notification to the notification service, if possible. */\n    private _dispatchConfigNotification(notification: PopoverNotification) {\n        if (this._notifications) {\n            this._notifications.dispatch(notification);\n        }\n    }\n\n    /** Dispatch a notification to the notification service and throw if unable to. */\n    private _dispatchActionNotification(notification: PopoverNotification) {\n        if (!this._notifications) {\n            throw getUnanchoredPopoverError();\n        }\n\n        this._notifications.dispatch(notification);\n    }\n\n    /** Throws an error if the alignment is not a valid horizontalAlign. */\n    private _validateHorizontalAlign(pos: HcPopoverHorizontalAlign): void {\n        if (VALID_HORIZ_ALIGN.indexOf(pos) === -1) {\n            throw getInvalidHorizontalAlignError(pos);\n        }\n    }\n\n    /** Throws an error if the alignment is not a valid verticalAlign. */\n    private _validateVerticalAlign(pos: HcPopoverVerticalAlign): void {\n        if (VALID_VERT_ALIGN.indexOf(pos) === -1) {\n            throw getInvalidVerticalAlignError(pos);\n        }\n    }\n\n    /** Throws an error if the scroll strategy is not a valid strategy. */\n    private _validateScrollStrategy(strategy: HcPopoverScrollStrategy): void {\n        if (VALID_SCROLL.indexOf(strategy) === -1) {\n            throw getInvalidScrollStrategyError(strategy);\n        }\n    }\n}\n","import {ElementRef, Injectable, NgZone, OnDestroy, Optional, ViewContainerRef} from '@angular/core';\nimport {\n    ConnectionPositionPair,\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    ScrollStrategy,\n    VerticalConnectionPos\n} from '@angular/cdk/overlay';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {Subscription, Subject} from 'rxjs';\nimport {takeUntil, take, filter, tap} from 'rxjs/operators';\n\nimport {HcPopComponent} from './popover.component';\nimport {HcPopoverHorizontalAlign, HcPopoverVerticalAlign, HcPopoverScrollStrategy, HcPopoverOpenOptions} from './types';\n\nimport {PopoverNotificationService, NotificationAction} from './notification.service';\nimport {HcPopoverAnchorDirective} from './directives/popover-anchor.directive';\n\n/**\n * Configuration provided by the popover for the anchoring service\n * to build the correct overlay config.\n */\ninterface PopoverConfig {\n    horizontalAlign: HcPopoverHorizontalAlign;\n    verticalAlign: HcPopoverVerticalAlign;\n    hasBackdrop: boolean;\n    backdropClass: string;\n    scrollStrategy: HcPopoverScrollStrategy;\n    forceAlignment: boolean;\n    lockAlignment: boolean;\n}\n\n@Injectable()\nexport class HcPopoverAnchoringService implements OnDestroy {\n    /** Emits when the popover is opened. */\n    popoverOpened = new Subject<void>();\n\n    /** Emits when the popover is closed. */\n    popoverClosed = new Subject<void>();\n\n    /** Reference to the overlay containing the popover component. */\n    _overlayRef: OverlayRef | null;\n\n    /** Reference to the target popover. */\n    private _popover: HcPopComponent;\n\n    /** Stores the context assigned to the popover */\n    _context: any;\n\n    /** Reference to the view container for the popover template. */\n    private _viewContainerRef: ViewContainerRef;\n\n    /** Reference to the anchor */\n    private _anchor: HcPopoverAnchorDirective;\n\n    /** Reference to a template portal where the overlay will be attached. */\n    private _portal: TemplatePortal<any>;\n\n    /** Communications channel with the popover. */\n    private _notifications: PopoverNotificationService;\n\n    /** Single subscription to notifications service events. */\n    private _notificationsSubscription: Subscription;\n\n    /** Single subscription to position changes. */\n    private _positionChangeSubscription: Subscription;\n\n    /** Whether the popover is presently open. */\n    private _popoverOpen = false;\n\n    /** Emits when the service is destroyed. */\n    private _onDestroy = new Subject<void>();\n\n    constructor(private _overlay: Overlay, private _ngZone: NgZone, @Optional() private _dir: Directionality) {}\n\n    ngOnDestroy() {\n        // Destroy popover before terminating subscriptions so that any resulting\n        // detachments update 'closed state'\n        this._destroyPopover();\n\n        // Terminate subscriptions\n        if (this._notificationsSubscription) {\n            this._notificationsSubscription.unsubscribe();\n        }\n        if (this._positionChangeSubscription) {\n            this._positionChangeSubscription.unsubscribe();\n        }\n        this._onDestroy.next();\n        this._onDestroy.complete();\n\n        this.popoverOpened.complete();\n        this.popoverClosed.complete();\n    }\n\n    /** Anchor a popover instance to a view and connection element. */\n    anchor(popover: HcPopComponent, viewContainerRef: ViewContainerRef, anchor: HcPopoverAnchorDirective): void {\n        // Destroy any previous popovers\n        this._destroyPopover();\n\n        // Assign local refs\n        this._popover = popover;\n        this._viewContainerRef = viewContainerRef;\n        this._anchor = anchor;\n\n        // Provide notification service as a communication channel between popover and anchor.\n        // Then subscribe to notifications to take appropriate actions.\n        this._popover._notifications = this._notifications = this._anchor._notifications = new PopoverNotificationService();\n        this._subscribeToNotifications();\n    }\n\n    /** Gets whether the popover is presently open. */\n    isPopoverOpen(): boolean {\n        return this._popoverOpen;\n    }\n\n    /** Toggles the popover between the open and closed states. */\n    togglePopover(): void {\n        return this._popoverOpen ? this.closePopover() : this.openPopover();\n    }\n\n    /** Opens the popover. */\n    openPopover(options: HcPopoverOpenOptions = {}): void {\n        if (!this._popoverOpen) {\n            this._applyOpenOptions(options);\n            this._popover._componentOverlay = this._createOverlay();\n            this._subscribeToBackdrop();\n            this._subscribeToEscape();\n            this._subscribeToDetachments();\n            this._saveOpenedState();\n            this._popover._savePreviouslyFocusedElement();\n        }\n    }\n\n    /** Closes the popover. */\n    closePopover(value?: any, neighborSubMenusAreOpen: boolean = false): void {\n        if (this._popover._componentOverlay) {\n            this._saveClosedState(value, neighborSubMenusAreOpen);\n            this._popover._componentOverlay.detach();\n            this._popover._restoreFocusAndDestroyTrap();\n        }\n    }\n\n    /** Realign the popover to the anchor. */\n    realignPopoverToAnchor(): void {\n        if (this._popover._componentOverlay) {\n            const config = this._popover._componentOverlay.getConfig();\n            const strategy = config.positionStrategy as FlexibleConnectedPositionStrategy;\n            strategy.reapplyLastPosition();\n        }\n    }\n\n    /** Get a reference to the anchor element. */\n    getAnchorElement(): ElementRef {\n        return this._anchor._elementRef;\n    }\n\n    /** Apply behavior properties on the popover based on the open options. */\n    private _applyOpenOptions(options: HcPopoverOpenOptions): void {\n        // Only override restoreFocus as `false` if the option is explicitly `false`\n        const restoreFocus = options.restoreFocus !== false;\n        this._popover._restoreFocusOverride = restoreFocus;\n\n        // Only override autoFocus as `false` if the option is explicitly `false`\n        const autoFocus = options.autoFocus !== false;\n        this._popover._autoFocusOverride = autoFocus;\n    }\n\n    /** Create an overlay to be attached to the portal. */\n    private _createOverlay(): OverlayRef {\n        // Create overlay if it doesn't yet exist\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this._popover._templateRef, this._viewContainerRef);\n\n            const popoverConfig = {\n                horizontalAlign: this._popover.horizontalAlign,\n                verticalAlign: this._popover.verticalAlign,\n                hasBackdrop: this._popover.hasBackdrop,\n                backdropClass: this._popover.backdropClass,\n                scrollStrategy: this._popover.scrollStrategy,\n                forceAlignment: this._popover.forceAlignment,\n                lockAlignment: this._popover.lockAlignment\n            };\n\n            const overlayConfig = this._getOverlayConfig(popoverConfig, this._anchor);\n\n            this._subscribeToPositionChanges(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\n\n            this._overlayRef = this._overlay.create(overlayConfig);\n        } else if (this._popover.horizontalAlign === 'mouse' || this._popover.verticalAlign === 'mouse') {\n            /* If aligning to mouse clicks - adjust the strategy based on the most current click */\n            this._overlayRef.updatePositionStrategy(\n                this._getPositionStrategy(\n                    this._popover.horizontalAlign,\n                    this._popover.verticalAlign,\n                    this._popover.forceAlignment,\n                    this._popover.lockAlignment,\n                    this._anchor._elementRef\n                )\n            );\n        }\n\n        // Actually open the popover\n        this._overlayRef.attach(this._portal);\n        return this._overlayRef;\n    }\n\n    /** Removes the popover from the DOM. Does NOT update open state. */\n    private _destroyPopover(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n\n    /**\n     * Destroys the popover immediately if it is closed, or waits until it\n     * has been closed to destroy it.\n     */\n    private _destroyPopoverOnceClosed(): void {\n        if (this.isPopoverOpen() && this._overlayRef) {\n            this._overlayRef\n                .detachments()\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(() => this._destroyPopover());\n        } else {\n            this._destroyPopover();\n        }\n    }\n\n    /**\n     * Call appropriate anchor method when an event is dispatched through\n     * the notification service.\n     */\n    private _subscribeToNotifications(): void {\n        if (this._notificationsSubscription) {\n            this._notificationsSubscription.unsubscribe();\n        }\n\n        this._notificationsSubscription = this._notifications.events().subscribe(event => {\n            switch (event.action) {\n                case NotificationAction.OPEN:\n                    this.openPopover(event.value);\n                    break;\n                case NotificationAction.CLOSE:\n                    this.closePopover(event.value);\n                    break;\n                case NotificationAction.TOGGLE:\n                    this.togglePopover();\n                    break;\n                case NotificationAction.REPOSITION:\n                // TODO: When the overlay's position can be dynamically changed, do not destroy\n                case NotificationAction.UPDATE_CONFIG:\n                    this._destroyPopoverOnceClosed();\n                    break;\n                case NotificationAction.REALIGN:\n                    this.realignPopoverToAnchor();\n                    break;\n            }\n        });\n    }\n\n    /** Close popover when backdrop is clicked. */\n    private _subscribeToBackdrop(): void {\n        if (!this._overlayRef) {\n            return;\n        }\n        this._overlayRef\n            .backdropClick()\n            .pipe(\n                tap(() => this._popover.backdropClicked.emit()),\n                filter(() => this._popover.interactiveClose),\n                takeUntil(this.popoverClosed),\n                takeUntil(this._onDestroy)\n            )\n            .subscribe(() => this.closePopover());\n    }\n\n    /** Close popover when escape keydown event occurs. */\n    private _subscribeToEscape(): void {\n        if (!this._overlayRef) {\n            return;\n        }\n        this._overlayRef\n            .keydownEvents()\n            .pipe(\n                tap(event => this._popover.overlayKeydown.emit(event)),\n                filter(event => event.keyCode === ESCAPE),\n                filter(() => this._popover.interactiveClose),\n                takeUntil(this.popoverClosed),\n                takeUntil(this._onDestroy)\n            )\n            .subscribe(() => this.closePopover());\n    }\n\n    /** Set state back to closed when detached. */\n    private _subscribeToDetachments(): void {\n        if (!this._overlayRef) {\n            return;\n        }\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => this._saveClosedState());\n    }\n\n    /** Save the opened state of the popover and emit. */\n    private _saveOpenedState(): void {\n        if (!this._popoverOpen) {\n            this._popover._open = this._popoverOpen = true;\n            if ( this._popover.parent ) {\n                this._popover.parent._subMenuOpen = true;\n            }\n\n            this.popoverOpened.next();\n            if (typeof this._context === 'undefined') {\n                this._popover.opened.emit();\n            } else {\n                this._popover.opened.emit(this._context);\n            }\n        }\n    }\n\n    /** Save the closed state of the popover and emit. */\n    private _saveClosedState(value?: any, neighborSubMenusAreOpen: boolean = false): void {\n        if (this._popoverOpen) {\n            this._popover._open = this._popoverOpen = false;\n            if ( this._popover.parent ) {\n                this._popover.parent._subMenuOpen = neighborSubMenusAreOpen;\n            }\n            this.popoverClosed.next(value);\n            this._popover.closed.emit(value);\n        }\n    }\n\n    /** Gets the text direction of the containing app. */\n    private _getDirection(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Create and return a config for creating the overlay. */\n    private _getOverlayConfig(config: PopoverConfig, anchor: HcPopoverAnchorDirective): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._getPositionStrategy(\n                config.horizontalAlign,\n                config.verticalAlign,\n                config.forceAlignment,\n                config.lockAlignment,\n                anchor._elementRef\n            ),\n            // make it hard for users to shoot themselves in the foot by disabling backdrop if hover is the trigger\n            hasBackdrop: anchor.trigger !== 'hover' ? config.hasBackdrop : false,\n\n            backdropClass: config.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._getScrollStrategyInstance(config.scrollStrategy),\n            direction: this._getDirection(),\n\n            // disable pointer events for hover popovers to avoid potential flickering issues\n            panelClass: anchor.trigger === 'hover' ? 'overlay-pointer-events' : ''\n        });\n    }\n\n    /**\n     * Listen to changes in the position of the overlay and set the correct alignment classes,\n     * ensuring that the animation origin is correct, even with a fallback position.\n     */\n    private _subscribeToPositionChanges(position: FlexibleConnectedPositionStrategy): void {\n        if (this._positionChangeSubscription) {\n            this._positionChangeSubscription.unsubscribe();\n        }\n\n        this._positionChangeSubscription = position.positionChanges.pipe(takeUntil(this._onDestroy)).subscribe(change => {\n            // Position changes may occur outside the Angular zone\n            this._ngZone.run(() => {\n                this._popover._setAlignmentClassesForAnimation(\n                    getHorizontalPopoverAlignment(change.connectionPair.overlayX),\n                    getVerticalPopoverAlignment(change.connectionPair.overlayY)\n                );\n                this._popover._setAlignmentClassesForArrow(\n                    getHPopAlignmentForArrow(change.connectionPair.overlayX, change.connectionPair.originX),\n                    getVPopAlignmentForArrow(change.connectionPair.overlayY, change.connectionPair.originY)\n                );\n            });\n        });\n    }\n\n    /** Map a scroll strategy string type to an instance of a scroll strategy. */\n    private _getScrollStrategyInstance(strategy: HcPopoverScrollStrategy): ScrollStrategy {\n        switch (strategy) {\n            case 'block':\n                return this._overlay.scrollStrategies.block();\n            case 'reposition':\n                return this._overlay.scrollStrategies.reposition();\n            case 'close':\n                return this._overlay.scrollStrategies.close();\n            case 'noop':\n            default:\n                return this._overlay.scrollStrategies.noop();\n        }\n    }\n\n    /** Create and return a position strategy based on config provided to the component instance. */\n    private _getPositionStrategy(\n        horizontalTarget: HcPopoverHorizontalAlign,\n        verticalTarget: HcPopoverVerticalAlign,\n        forceAlignment: boolean,\n        lockAlignment: boolean,\n        anchor: ElementRef\n    ): FlexibleConnectedPositionStrategy {\n        // Attach the overlay at the preferred position\n        const targetPosition = getPosition(horizontalTarget, verticalTarget, this._popover._offsetPos);\n        const positions = [targetPosition];\n\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(anchor)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0)\n            .withLockedPosition(lockAlignment);\n\n        // Unless the alignment is forced, add fallbacks based on the preferred positions\n        if (!forceAlignment) {\n            const fallbacks = this._getFallbacks(horizontalTarget, verticalTarget);\n            positions.push(...fallbacks);\n        }\n\n        return strategy.withPositions(positions);\n    }\n\n    /** Get fallback positions based around target alignments. */\n    private _getFallbacks(hTarget: HcPopoverHorizontalAlign, vTarget: HcPopoverVerticalAlign): ConnectionPositionPair[] {\n        // Determine if the target alignments overlap the anchor\n        const horizontalOverlapAllowed = hTarget !== 'before' && hTarget !== 'after';\n        const verticalOverlapAllowed = vTarget !== 'above' && vTarget !== 'below';\n\n        // If a target alignment doesn't cover the anchor, don't let any of the fallback alignments\n        // cover the anchor\n        const possibleHorizontalAlignments: HcPopoverHorizontalAlign[] = horizontalOverlapAllowed\n            ? ['before', 'start', 'center', 'end', 'after', 'mouse']\n            : ['before', 'after'];\n        const possibleVerticalAlignments: HcPopoverVerticalAlign[] = verticalOverlapAllowed\n            ? ['above', 'start', 'center', 'end', 'below', 'mouse']\n            : ['above', 'below'];\n\n        // Create fallbacks for each allowed prioritized fallback alignment combo\n        const fallbacks: ConnectionPositionPair[] = [];\n        prioritizeAroundTarget(hTarget, possibleHorizontalAlignments).forEach(h => {\n            prioritizeAroundTarget(vTarget, possibleVerticalAlignments).forEach(v => {\n                fallbacks.push(getPosition(h, v, this._popover._offsetPos));\n            });\n        });\n\n        // Remove the first item since it will be the target alignment and isn't considered a fallback\n        return fallbacks.slice(1, fallbacks.length);\n    }\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment for arrow positioning */\nfunction getHPopAlignmentForArrow(hOverlay: HorizontalConnectionPos, hOrigin: HorizontalConnectionPos): HcPopoverHorizontalAlign {\n    if (hOverlay === hOrigin) {\n        return hOverlay;\n    }\n\n    if (hOverlay === 'start') {\n        return 'after';\n    }\n\n    if (hOverlay === 'end') {\n        return 'before';\n    }\n\n    return 'center';\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment for arrow positioning. */\nfunction getVPopAlignmentForArrow(vOverlay: VerticalConnectionPos, vOrigin: VerticalConnectionPos): HcPopoverVerticalAlign {\n    if (vOverlay === vOrigin && (vOverlay === 'top' || vOverlay === 'bottom')) {\n        return vOverlay === 'top' ? 'start' : 'end';\n    }\n\n    if (vOverlay === 'top') {\n        return 'below';\n    }\n\n    if (vOverlay === 'bottom') {\n        return 'above';\n    }\n\n    return 'center';\n}\n\n/** Helper function to get a cdk position pair from HcPopover alignments. */\nfunction getPosition(h: HcPopoverHorizontalAlign, v: HcPopoverVerticalAlign, offset: number[]): ConnectionPositionPair {\n    const {originX, overlayX} = getHorizontalConnectionPosPair(h);\n    const {originY, overlayY} = getVerticalConnectionPosPair(v);\n    return new ConnectionPositionPair({originX, originY}, {overlayX, overlayY}, offset[0], offset[1]);\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getHorizontalPopoverAlignment(h: HorizontalConnectionPos): HcPopoverHorizontalAlign {\n    if (h === 'start') {\n        return 'after';\n    }\n\n    if (h === 'end') {\n        return 'before';\n    }\n\n    return 'center';\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getVerticalPopoverAlignment(v: VerticalConnectionPos): HcPopoverVerticalAlign {\n    if (v === 'top') {\n        return 'below';\n    }\n\n    if (v === 'bottom') {\n        return 'above';\n    }\n\n    return 'center';\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getHorizontalConnectionPosPair(\n    h: HcPopoverHorizontalAlign\n): {originX: HorizontalConnectionPos; overlayX: HorizontalConnectionPos} {\n    switch (h) {\n        case 'before':\n            return {originX: 'start', overlayX: 'end'};\n        case 'start':\n        case 'mouse':\n            return {originX: 'start', overlayX: 'start'};\n        case 'end':\n            return {originX: 'end', overlayX: 'end'};\n        case 'after':\n            return {originX: 'end', overlayX: 'start'};\n        default:\n            return {originX: 'center', overlayX: 'center'};\n    }\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getVerticalConnectionPosPair(v: HcPopoverVerticalAlign): {originY: VerticalConnectionPos; overlayY: VerticalConnectionPos} {\n    switch (v) {\n        case 'above':\n            return {originY: 'top', overlayY: 'bottom'};\n        case 'start':\n        case 'mouse':\n            return {originY: 'top', overlayY: 'top'};\n        case 'end':\n            return {originY: 'bottom', overlayY: 'bottom'};\n        case 'below':\n            return {originY: 'bottom', overlayY: 'top'};\n        default:\n            return {originY: 'center', overlayY: 'center'};\n    }\n}\n\n/**\n * Helper function that takes an ordered array options and returns a reorderded\n * array around the target item. e.g.:\n *\n * target: 3; options: [1, 2, 3, 4, 5, 6, 7];\n *\n * return: [3, 4, 2, 5, 1, 6, 7]\n */\nfunction prioritizeAroundTarget<T>(target: T, options: T[]): T[] {\n    const targetIndex = options.indexOf(target);\n\n    // Set the first item to be the target\n    const reordered = [target];\n\n    // Make left and right stacks where the highest priority item is last\n    const left = options.slice(0, targetIndex);\n    const right = options.slice(targetIndex + 1, options.length).reverse();\n\n    // Alternate between stacks until one is empty\n    while (left.length && right.length) {\n        const r = right.pop();\n        if (r) {\n            reordered.push(r);\n        }\n        const l = left.pop();\n        if (l) {\n            reordered.push(l);\n        }\n    }\n\n    // Flush out right side\n    while (right.length) {\n        const r2 = right.pop();\n        if (r2) {\n            reordered.push(r2);\n        }\n    }\n\n    // Flush out left side\n    while (left.length) {\n        const l2 = left.pop();\n        if (l2) {\n            reordered.push(l2);\n        }\n    }\n\n    return reordered;\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nexport enum KEY_CODE {\n    DOWN_ARROW = 40,\n    RIGHT_ARROW = 39,\n    UP_ARROW = 38,\n    LEFT_ARROW = 37,\n    TAB = 9\n}\n\nexport interface HcPopKeyboardNotifier {\n    isOpen: boolean;\n    nativeElement: HTMLElement;\n    hasSubmenu: () => boolean;\n    onKeyDown: (event: KeyboardEvent) => void;\n}\n\n@Injectable()\nexport class HcPopoverAccessibilityService implements OnDestroy {\n    private notifiers: HcPopKeyboardNotifier[] = [];\n\n    constructor() {\n        window.addEventListener('keydown', this.handleKeydown);\n    }\n\n    ngOnDestroy() {\n        window.removeEventListener('keydown', this.handleKeydown);\n    }\n\n    registerNotifier(notifier: HcPopKeyboardNotifier) {\n        this.notifiers.push(notifier);\n    }\n\n    private handleKeydown = (event: KeyboardEvent) => {\n        this.notifiers.filter(n => n.isOpen).forEach(n => n.onKeyDown(event));\n        if (event.keyCode === KEY_CODE.RIGHT_ARROW) {\n            this.notifiers.filter(n => document.activeElement === n.nativeElement && n.hasSubmenu()).forEach(n => n.onKeyDown(event));\n        }\n    };\n}\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    OnDestroy,\n    Output,\n    ViewContainerRef,\n    HostListener,\n    HostBinding,\n    AfterContentInit\n} from '@angular/core';\nimport {Subject, merge} from 'rxjs';\nimport {tap, takeUntil} from 'rxjs/operators';\n\nimport {HcPopComponent} from '../popover.component';\nimport {getInvalidPopoverError, getInvalidTriggerError} from '../popover.errors';\nimport {HcPopoverAnchoringService} from '../popover-anchoring.service';\nimport {HcPopoverOpenOptions, HcPopoverTrigger, VALID_TRIGGER} from '../types';\nimport {PopoverNotification, PopoverNotificationService, NotificationAction} from '../notification.service';\nimport {HcPopoverAccessibilityService, HcPopKeyboardNotifier, KEY_CODE} from '../popover-accessibility.service';\n\n@Directive({\n    selector: '[hcPop]',\n    exportAs: 'hcPopAnchor',\n    providers: [HcPopoverAnchoringService]\n})\nexport class HcPopoverAnchorDirective implements OnInit, AfterContentInit, OnDestroy {\n    /** Reference to the popover instance. */\n    @Input('hcPop')\n    get attachedPopover() {\n        return this._attachedPopover;\n    }\n    set attachedPopover(value: HcPopComponent) {\n        this._validateAttachedPopover(value);\n        this._attachedPopover = value;\n        // Anchor the popover to the element ref\n        this._anchoring.anchor(this.attachedPopover, this._viewContainerRef, this);\n    }\n    private _attachedPopover: HcPopComponent;\n\n    /** Trigger event to toggle the popover. *Defaults to `\"click\"`.*\n     * Accepts `click`, `mousedown`, `hover`, `rightclick`, or `none`.\n     * Note: if \"hover\" is selected, the backdrop for the popover will be disabled. */\n    @Input()\n    get trigger() {\n        return this._trigger;\n    }\n    set trigger(val: HcPopoverTrigger) {\n        this._validateTrigger(val);\n        if (this._trigger !== val) {\n            this._trigger = val;\n        }\n        this._dispatchConfigNotification(new PopoverNotification(NotificationAction.UPDATE_CONFIG));\n    }\n    private _trigger: HcPopoverTrigger = 'click';\n\n    /** Object or value that can be passed into the popover to customize its content */\n    @Input()\n    get context() {\n        return this._anchoring._context;\n    }\n    set context(val: any) {\n        this._anchoring._context = val;\n    }\n\n    @HostBinding('class.hc-menu-item-submenu')\n    _hasSubmenu = false;\n\n    /** Emits when the popover is opened. */\n    @Output() popoverOpened = new EventEmitter<void>();\n\n    /** Emits when the popover is closed. */\n    @Output() popoverClosed = new EventEmitter<any>();\n\n    /** Instance of notification service. Will be undefined until attached to a popover. */\n    _notifications: PopoverNotificationService;\n\n    /** Emits when the directive is destroyed. */\n    private _onDestroy = new Subject<void>();\n\n    constructor(\n        public _elementRef: ElementRef,\n        private _viewContainerRef: ViewContainerRef,\n        public _anchoring: HcPopoverAnchoringService,\n        private _accessibility: HcPopoverAccessibilityService\n    ) {}\n\n    ngOnInit() {\n        // Re-emit open and close events\n        const opened$ = this._anchoring.popoverOpened.pipe(tap(() => this.popoverOpened.emit()));\n        const closed$ = this._anchoring.popoverClosed.pipe(tap(value => this.popoverClosed.emit(value)));\n        merge(opened$, closed$)\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe();\n    }\n\n    ngAfterContentInit() {\n        this._setupKeyboardEvents();\n    }\n\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    @HostListener('click', ['$event'])\n    _showOrHideOnClick($event: MouseEvent): void {\n        if (this._hasSubmenu && event) {\n            // Prevent the popover component from auto closing on click if a submenu was selected\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        if (this.trigger !== 'click') {\n            return;\n        }\n        this._attachedPopover._offsetPos[0] = this._attachedPopover.horizontalAlign === 'mouse' ? $event.offsetX : 0;\n        this._attachedPopover._offsetPos[1] = this._attachedPopover.verticalAlign === 'mouse' ? $event.offsetY : 0;\n        this.togglePopover();\n    }\n\n    @HostListener('touchstart', ['$event'])\n    @HostListener('mousedown', ['$event'])\n    _showOrHideOnMouseOver($event: MouseEvent): void {\n        if (this.trigger !== 'mousedown') {\n            return;\n        }\n        this._attachedPopover._offsetPos[0] = this._attachedPopover.horizontalAlign === 'mouse' ? $event.offsetX : 0;\n        this._attachedPopover._offsetPos[1] = this._attachedPopover.verticalAlign === 'mouse' ? $event.offsetY : 0;\n        this.togglePopover();\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    _showOrHideRightClick($event: MouseEvent): boolean {\n        if (this.trigger !== 'rightclick') {\n            return true;\n        } else {\n            this._attachedPopover._offsetPos[0] = this._attachedPopover.horizontalAlign === 'mouse' ? $event.offsetX : 0;\n            this._attachedPopover._offsetPos[1] = this._attachedPopover.verticalAlign === 'mouse' ? $event.offsetY : 0;\n            this.togglePopover();\n            return false;\n        }\n    }\n\n    @HostListener('mouseenter', ['$event'])\n    _showOnHover($event: MouseEvent): void {\n        if (this.trigger !== 'hover') {\n            return;\n        }\n        this._attachedPopover._offsetPos[0] = this._attachedPopover.horizontalAlign === 'mouse' ? $event.offsetX : 0;\n        this._attachedPopover._offsetPos[1] = this._attachedPopover.verticalAlign === 'mouse' ? $event.offsetY : 0;\n        this.openPopover();\n    }\n\n    @HostListener('touchend', ['$event'])\n    @HostListener('touchcancel', ['$event'])\n    @HostListener('mouseleave', ['$event'])\n    _hideOnLeave($event: MouseEvent): void {\n        if (this.trigger !== 'hover') {\n            return;\n        }\n        this.closePopover();\n    }\n\n    /** Handle keyboard navigation of a hcMenu using the arrow or tab keys */\n    _keyEvent(event: KeyboardEvent): void {\n        if (this.attachedPopover.isOpen() && this.attachedPopover._menuItems.length > 0 && !this.attachedPopover._subMenuOpen) {\n            if (event.keyCode === KEY_CODE.UP_ARROW || (event.keyCode === KEY_CODE.TAB && event.shiftKey)) {\n                event.stopPropagation();\n                event.preventDefault();\n                this.attachedPopover._keyFocus(false);\n            } else if (event.keyCode === KEY_CODE.DOWN_ARROW || (event.keyCode === KEY_CODE.TAB && !event.shiftKey)) {\n                event.stopPropagation();\n                event.preventDefault();\n                this.attachedPopover._keyFocus(true);\n            } else if (this.attachedPopover.parent && this.attachedPopover.parent.isOpen() && event.keyCode === KEY_CODE.LEFT_ARROW) {\n                event.stopPropagation();\n                event.preventDefault();\n                this.closePopover();\n            }\n        }\n        if (this._hasSubmenu && this._elementRef.nativeElement === document.activeElement && event.keyCode === KEY_CODE.RIGHT_ARROW) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.openPopover();\n            this.attachedPopover._keyFocus(true);\n        }\n    }\n\n    /** Gets whether the popover is presently open. */\n    isPopoverOpen(): boolean {\n        return this._anchoring.isPopoverOpen();\n    }\n\n    /** Toggles the popover between the open and closed states. */\n    togglePopover(): void {\n        this._anchoring.togglePopover();\n    }\n\n    /** Opens the popover. */\n    openPopover(options: HcPopoverOpenOptions = {}): void {\n        this._anchoring.openPopover(options);\n    }\n\n    /** Closes the popover. */\n    closePopover(value?: any, neighborSubMenusAreOpen: boolean = false): void {\n        this._anchoring.closePopover(value, neighborSubMenusAreOpen);\n    }\n\n    /** Realign the popover to the anchor. */\n    realignPopover(): void {\n        this._anchoring.realignPopoverToAnchor();\n    }\n\n    /** Get a reference to the anchor element. */\n    getElement(): ElementRef {\n        return this._elementRef;\n    }\n\n    /** Throws an error if the popover instance is not provided. */\n    private _validateAttachedPopover(popover: HcPopComponent): void {\n        if (!popover || !(popover instanceof HcPopComponent)) {\n            throw getInvalidPopoverError();\n        }\n    }\n\n    /** Throws an error if the trigger is not a valid HcPopoverTrigger. */\n    private _validateTrigger(trig: HcPopoverTrigger): void {\n        if (VALID_TRIGGER.indexOf(trig) === -1) {\n            throw getInvalidTriggerError(trig);\n        }\n    }\n\n    /** Dispatch a notification to the notification service, if possible. */\n    private _dispatchConfigNotification(notification: PopoverNotification) {\n        if (this._notifications) {\n            this._notifications.dispatch(notification);\n        }\n    }\n\n    private _setupKeyboardEvents() {\n        const notifier: HcPopKeyboardNotifier = {\n            isOpen: false,\n            nativeElement: this._elementRef.nativeElement,\n            hasSubmenu: () => this._hasSubmenu,\n            onKeyDown: event => this._keyEvent(event)\n        };\n        this.popoverClosed.asObservable().subscribe(() => (notifier.isOpen = false));\n        this.popoverOpened.asObservable().subscribe(() => (notifier.isOpen = true));\n        this._accessibility.registerNotifier(notifier);\n    }\n}\n","import {Directive, HostBinding, ContentChildren, QueryList, AfterContentInit, OnDestroy} from '@angular/core';\nimport {HcPopoverAnchorDirective} from './popover-anchor.directive';\nimport {Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/** The `hcMenu` directive provides a standard way of displaying a series of selectable elements in a popover. */\n@Directive({\n    selector: '[hcMenu]'\n})\nexport class MenuDirective implements AfterContentInit, OnDestroy {\n    @HostBinding('class.hc-menu-panel')\n    _hostClass = true;\n\n    @ContentChildren(HcPopoverAnchorDirective)\n    _subMenus: QueryList<HcPopoverAnchorDirective>;\n\n    private unsubscribe$ = new Subject<void>();\n\n    ngAfterContentInit() {\n        this._subMenus.forEach((anchor: HcPopoverAnchorDirective) => {\n            anchor._hasSubmenu = true;\n            // Subscribe to submenu open events so we can close any other submenus currently open\n            anchor.popoverOpened.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n                this._subMenus.forEach((sub: HcPopoverAnchorDirective) => {\n                    if (sub !== anchor && sub.attachedPopover.isOpen()) {\n                        sub.attachedPopover._parentCloseBlock = true;\n                        sub.attachedPopover._restoreFocusOverride = false;\n                        sub.closePopover({}, true);\n                        sub.attachedPopover._restoreFocusOverride = true;\n                        let closeSub: Subscription = sub.attachedPopover.afterClose.subscribe(() => {\n                            sub.attachedPopover._parentCloseBlock = false;\n                            closeSub.unsubscribe();\n                        });\n                    }\n                });\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Use `hcMenuIcon` to prefix an icon to the beginning of a button inside of a menu. */\n@Directive({\n    selector: '[hcMenuIcon]'\n})\nexport class MenuIconDirective {\n    @HostBinding('class.hc-menu-icon')\n    _hostClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Use `hcMenuText` for main button text inside of a menu. */\n@Directive({\n    selector: '[hcMenuText]'\n})\nexport class MenuTextDirective {\n    @HostBinding('class.hc-menu-text')\n    _hostClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Use `hcMenuSubText` for right-aligned subtext of a button inside of a menu. Often used for keyboard shortcuts. */\n@Directive({\n    selector: '[hcMenuSubText]'\n})\nexport class MenuSubTextDirective {\n    @HostBinding('class.hc-menu-sub-text')\n    _hostClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Use `hcDivider` for a horizontal divider in a menu. */\n@Directive({\n    selector: '[hcDivider]'\n})\nexport class DividerDirective {\n    @HostBinding('class.hc-divider')\n    _hostClass = true;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\n\nimport {HcPopComponent} from './popover.component';\nimport {HcPopoverAnchorDirective} from './directives/popover-anchor.directive';\n\nimport {MenuItemDirective} from './directives/menu-item.directive';\nimport {MenuDirective} from './directives/menu.directive';\nimport {MenuIconDirective} from './directives/menu-icon.directive';\nimport {MenuTextDirective} from './directives/menu-text.directive';\nimport {MenuSubTextDirective} from './directives/menu-sub-text.directive';\nimport {DividerDirective} from './directives/divider.directive';\nimport {HcPopoverAccessibilityService} from './popover-accessibility.service';\n\n@NgModule({\n    imports: [CommonModule, OverlayModule, A11yModule, BidiModule],\n    declarations: [\n        HcPopComponent,\n        HcPopoverAnchorDirective,\n        MenuDirective,\n        MenuItemDirective,\n        MenuIconDirective,\n        MenuTextDirective,\n        MenuSubTextDirective,\n        DividerDirective\n    ],\n    exports: [\n        HcPopComponent,\n        HcPopoverAnchorDirective,\n        BidiModule,\n        MenuDirective,\n        MenuItemDirective,\n        MenuIconDirective,\n        MenuTextDirective,\n        MenuSubTextDirective,\n        DividerDirective\n    ],\n    providers: [HcPopoverAccessibilityService]\n})\nexport class PopModule {}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\nconst supportedColors = ['blue', 'green', 'purple', 'orange', 'red', 'gray', 'white'];\n\nexport function validateColorInput(inputStr: string) {\n    if (supportedColors.indexOf(inputStr) < 0) {\n        throw Error('Unsupported progress spinner color value: ' + inputStr);\n    }\n}\n\n@Component({\n    selector: 'hc-progress-spinner',\n    templateUrl: 'progress-spinner.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProgressSpinnerComponent {\n    private _color = 'blue';\n\n    /** Color of the spinner: `blue`, `green`, `purple`, `orange`, `red`, `gray`, `white` */\n    @Input()\n    get color(): string {\n        return this._color;\n    }\n\n    set color(colorVal: string) {\n        validateColorInput(colorVal);\n        this._color = colorVal;\n    }\n\n    /** If true, the spinner will center itself inside its container. */\n    @Input()\n    public isCentered = true;\n\n    /** If true, include background \"channel\" circle. */\n    @Input()\n    public hasChannel = true;\n\n    /** If true, switches to determinate mode. Must pass in progress (0-100%), instead of having the loader spin freely. */\n    @Input()\n    public isDeterminate = false;\n\n    /** (0-100%) Only used if \"isDeterminate\" is set to true. */\n    @Input()\n    public set progress(progress: number) {\n        this.setProgress(progress);\n    }\n    public get progress() {\n        return this._progress;\n    }\n\n    /** Set the diameter of the circle, in pixels. Minimum is 20, maximum is 250. */\n    @Input()\n    public set diameter(diameter: number) {\n        this._diameter = Math.min(Math.max(this._minDiameter, diameter), this._maxDiameter);\n    }\n    public get diameter(): number {\n        return this._diameter;\n    }\n\n    public _rightCircleTransform = '';\n    public _leftCircleTransform = '';\n    public _rightCircleTransition = '';\n    public _leftCircleTransition = '';\n    private _progress = 0;\n    private _diameter = 0;\n    private _minDiameter = 20;\n    private _maxDiameter = 250;\n\n    private setProgress(progress: number) {\n        progress = Math.min(100, progress);\n        progress = Math.max(0, progress);\n\n        this.setProgressTransition(progress);\n        this.setProgressTransform(progress);\n\n        this._progress = progress;\n    }\n\n    private setProgressTransition(progress: number) {\n        const sizeBasedTime = this.diameter > 150 ? 0.6 : 0.4;\n        const timing = Math.abs(progress - this._progress) > 40 ? sizeBasedTime : sizeBasedTime / 2;\n        const halfTime = timing / 2;\n        if ((progress <= 50 && this._progress <= 50) || (progress >= 51 && this._progress >= 51)) {\n            this._leftCircleTransition = `transform ${timing}s ease-in-out 0s`;\n            this._rightCircleTransition = `transform ${timing}s ease-in-out 0s`;\n        } else if (progress <= 50 && this._progress >= 51) {\n            this._leftCircleTransition = `transform ${halfTime}s ease-in 0s`;\n            this._rightCircleTransition = `transform ${halfTime}s ease-out ${halfTime - 0.001}s`;\n        } else if (progress >= 51 && this._progress <= 50) {\n            this._leftCircleTransition = `transform ${halfTime}s ease-out ${halfTime - 0.001}s`;\n            this._rightCircleTransition = `transform ${halfTime}s ease-in 0s`;\n        }\n    }\n\n    /**\n     * Using a somewhat complicated set of transforms to achive the animation.\n     * For 0% to 50% the right circle element rotates from -135deg to 45deg\n     * For 51% to 100% the left circle element rotates from 135deg to 315deg\n     */\n    private setProgressTransform(progress: number) {\n        if (progress <= 50) {\n            const rightDegrees = (progress / 50) * 180 - 135;\n            this._rightCircleTransform = `rotate(${rightDegrees}deg)`;\n            this._leftCircleTransform = `rotate(135deg)`;\n        } else if (progress >= 51) {\n            const leftDegrees = ((progress - 50) / 50) * 180 + 135;\n            this._leftCircleTransform = `rotate(${leftDegrees}deg)`;\n            this._rightCircleTransform = 'rotate(45deg)';\n        }\n    }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\nconst supportedColors = ['light', 'dark'];\n\nexport function validateColorInput(inputStr: string) {\n    if (supportedColors.indexOf(inputStr) < 0) {\n        throw Error('Unsupported progress dots color value: ' + inputStr);\n    }\n}\n\n@Component({\n    selector: 'hc-progress-dots',\n    templateUrl: 'progress-dots.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProgressDotsComponent {\n    private _color = 'dark';\n\n    /** Use `light` on darker backgrounds and `dark` for lighter backgrounds. */\n    @Input()\n    get color(): string {\n        return this._color;\n    }\n\n    set color(colorVal: string) {\n        validateColorInput(colorVal);\n        this._color = colorVal;\n    }\n\n    /** If true, the loader will center itself within its container. */\n    @Input()\n    public isCentered = true;\n    /** If true, you'll get a teeny tiny little loader. */\n    @Input()\n    public isMini = false;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProgressSpinnerComponent} from './progress-spinner.component';\nimport {ProgressDotsComponent} from './progress-dots.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ProgressSpinnerComponent, ProgressDotsComponent],\n    declarations: [ProgressSpinnerComponent, ProgressDotsComponent]\n})\nexport class ProgressIndicatorsModule {}\n","import {Observable} from 'rxjs';\n\nimport {HttpClient} from '@angular/common/http';\nimport {Inject, Injectable} from '@angular/core';\nimport {IAppSwitcherConfig, IAppSwitcherService, IDiscoveryRequest, APP_SWITCHER_CONFIG} from './app-switcher-interfaces';\n\n/**\n * An app switcher service designed to work with the Health Catalyst DOS platform's DiscoveryService\n */\n@Injectable()\nexport class AppSwitcherService implements IAppSwitcherService {\n    readonly allApplicationsUri: string;\n    private readonly discoveryServiceUri: string;\n\n    constructor(private http: HttpClient, @Inject(APP_SWITCHER_CONFIG) private config: IAppSwitcherConfig) {\n        if (!config || !config.discoveryServiceUri) {\n            throw new Error(\n                [\n                    'Failed to initialize AppSwitcherService: invalid APP_SWITCHER_CONFIG.',\n                    'You must provide a config object with a `discoveryServiceUri`.',\n                    `(value provided: ${config ? config.discoveryServiceUri : config})`\n                ].join(' ')\n            );\n        }\n\n        this.discoveryServiceUri = this.normalizeUri(this.config.discoveryServiceUri);\n        this.allApplicationsUri = `${this.discoveryServiceUri}/apps`;\n    }\n\n    getApplications(): Observable<IDiscoveryRequest> {\n        const url = `${this.discoveryServiceUri}/v1/Services?$filter=DiscoveryType eq 'Application' and IsHidden eq false&$top=12`;\n        return this.http.get<IDiscoveryRequest>(url, {withCredentials: true});\n    }\n\n    private normalizeUri(uri: string): string {\n        return uri.replace(/\\/(v\\d+\\/?)?$/, '');\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\nexport type EllipsisMode = 'characters' | 'words';\n\n@Pipe({\n    name: 'ellipsis',\n    pure: true\n})\nexport class EllipsisPipe implements PipeTransform {\n    static readonly ELLIPSIS = 'â¦';\n\n    transform(value: string, length: number, mode: EllipsisMode = 'characters'): string {\n        if (typeof value !== 'string' || typeof length !== 'number' || length < 0 || isNaN(length) || Math.floor(length) !== length) {\n            return value;\n        }\n\n        const truncated = mode === 'words' ? this.firstNWords(value, length) : this.firstNCharacters(value, length);\n\n        if (truncated === value) {\n            return value;\n        }\n\n        return truncated + EllipsisPipe.ELLIPSIS;\n    }\n\n    private firstNWords(value: string, n: number): string {\n        const words = value.split(/\\s+/g);\n        if (words.length <= n) {\n            return value;\n        }\n\n        const pattern = new RegExp('^' + words.slice(0, n).join('\\\\s+'));\n        return pattern.exec(value)![0];\n    }\n\n    private firstNCharacters(value: string, n: number): string {\n        return value.length > n ? value.substring(0, n) : value;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {EllipsisPipe} from './ellipsis.pipe';\n\n@NgModule({\n    declarations: [EllipsisPipe],\n    exports: [EllipsisPipe]\n})\nexport class EllipsisPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    'name': 'ifNullOrEmpty'\n})\nexport class NullOrEmptyStringPipe implements PipeTransform {\n\n    public transform(value: any, altText: string): string | any {\n        if (typeof(value) === 'string') {\n            value = value.trim();\n            return value ? value : altText;\n        }\n\n        if (value === undefined || value === null) {\n            return altText;\n        }\n\n        // if given value is not null or undefined, and is not a string, return as is\n        return value;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NullOrEmptyStringPipe} from './null-or-empty-string.pipe';\n\n@NgModule({\n    declarations: [NullOrEmptyStringPipe],\n    exports: [NullOrEmptyStringPipe]\n})\nexport class NullOrEmptyStringPipeModule {}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n// Convert bytes into largest possible unit.\n// Credit to https://gist.github.com/JonCatmull/ecdf9441aaa37336d9ae2c7f9cb7289a\n@Pipe({name: 'fileSize', pure: true})\nexport class FileSizePipe implements PipeTransform {\n    private units: string[] = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n\n    public transform(bytes: number, precision: number = 2): string {\n        const originalInput = bytes;\n        if (typeof bytes === 'string') {\n            bytes = +bytes;\n        }\n        if (typeof bytes !== 'number' || isNaN(bytes) || !isFinite(bytes) || bytes < 0 || Math.floor(bytes) !== bytes) {\n            return `${originalInput}`;\n        }\n\n        if (\n            typeof precision !== 'number' ||\n            isNaN(precision) ||\n            !isFinite(precision) ||\n            precision < 0 ||\n            Math.floor(precision) !== precision\n        ) {\n            precision = 2;\n        }\n        if (precision > 100) {\n            precision = 100;\n        }\n\n        let unit: number = 0;\n\n        while (bytes >= 1024) {\n            bytes /= 1024;\n            unit++;\n\n            if (unit === 5) {\n                // PB, largest size for pipe\n                break;\n            }\n        }\n\n        let rounded = bytes.toFixed(precision);\n\n        // if the value after truncating is a whole number, don't display a decimal\n        if (Math.floor(+rounded) === +rounded) {\n            rounded = (+rounded).toString();\n        }\n\n        return rounded + ' ' + this.units[unit];\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport { FileSizePipe } from './file-size.pipe';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [FileSizePipe],\n    exports: [FileSizePipe]\n})\nexport class FileSizePipeModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n/** Creates an abbreviated number for display. 1,234,234 => 1.23M */\n@Pipe({ name: \"abbreviateNumber\" })\nexport class NumberAbbreviatorPipe implements PipeTransform {\n    public static powers = [\n        { key: \"Q\", value: Math.pow(10, 15) },\n        { key: \"T\", value: Math.pow(10, 12) },\n        { key: \"B\", value: Math.pow(10, 9) },\n        { key: \"M\", value: Math.pow(10, 6) },\n        { key: \"K\", value: 1000 }\n    ];\n\n    /**\n     * @param value the value to be abbreviated\n     * @param decimalPoints how many decimal points to round to\n     * @param threshold represents the number at which we should start abbreviating;\n     * if the threshold is 1 million, we'll leave number less than 1 million as is (aside from adding commas or decimal points)\n     */\n    public transform(value: number, decimalPoints: number = 2, threshold: number = 1000000): string {\n        if (value === null) { return value; }\n\n        // use defaults if given funky parameters\n        if (decimalPoints < 0 || !Number.isInteger(decimalPoints)) { decimalPoints = 2; }\n        if (threshold < 1000 || !Number.isInteger(threshold)) { threshold = 1000; }\n\n        const abs = Math.abs(value);\n        let key = \"\";\n        let roundedStringVal = \"\";\n        const isNegative = value < 0;\n\n        if (abs >= threshold) {\n            // Abbreviate, adding unit if greater than specified limit\n            for (const power of NumberAbbreviatorPipe.powers) {\n                let reduced = abs / power.value;\n                reduced = this.roundValue(reduced, decimalPoints);\n\n                if (reduced >= 1) {\n                    roundedStringVal = reduced.toString();\n                    key = power.key;\n                    break;\n                }\n            }\n        } else {\n            // Just round decimals and add commas if less than specified limit\n            roundedStringVal = this.roundValue(abs, decimalPoints).toLocaleString();\n        }\n\n        return (isNegative ? \"-\" : \"\") + roundedStringVal + key;\n    }\n\n    private roundValue(value: number, decimalPoints: number = 2): number {\n        const rounder = Math.pow(10, decimalPoints);\n        return Math.round(value * rounder) / rounder;\n    }\n}","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NumberAbbreviatorPipe} from './number-abbreviator.pipe';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [NumberAbbreviatorPipe],\n    exports: [NumberAbbreviatorPipe]\n})\nexport class NumberAbbreviatorPipeModule {}\n","import {NgModule} from '@angular/core';\nimport {EllipsisPipeModule} from './ellipsis/ellipsis-pipe.module';\nimport {NullOrEmptyStringPipeModule} from './null-or-empty-string/null-or-empty-string-pipe.module';\nimport {FileSizePipeModule} from './file-size/file-size-pipe.module';\nimport {NumberAbbreviatorPipeModule} from './number-abbreviator/number-abbreviator-pipe.module';\n\n@NgModule({\n    imports: [\n        EllipsisPipeModule,\n        NullOrEmptyStringPipeModule,\n        FileSizePipeModule,\n        NumberAbbreviatorPipeModule\n    ],\n    exports: [\n        EllipsisPipeModule,\n        NullOrEmptyStringPipeModule,\n        FileSizePipeModule,\n        NumberAbbreviatorPipeModule\n    ]\n})\nexport class PipesModule {}\n","import {Attribute, Component, ElementRef, HostBinding, Input, OnChanges, SimpleChanges, ViewEncapsulation} from '@angular/core';\n\n/** Object used to pass values that will be used in an IconComponent */\nexport interface HcIcon {\n    /** Font set icon is a part of */\n    fontSet: string;\n    /** Name of icon within a font set */\n    fontIcon: string;\n    /** Optional height in pixels of the icon; defaults to 37 */\n    fontSize?: number;\n}\n\n/** Makes using a font icon easier. */\n@Component({\n    selector: 'hc-icon',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class IconComponent implements OnChanges {\n    private _fontIcon: string = '';\n    private _fontSet: string = '';\n\n    private _previousFontIcon: string = '';\n    private _previousFontSet: string = '';\n\n    @HostBinding('class.hc-icon')\n    _hostClass = true;\n\n    /** Name of icon within a font set. */\n    @Input()\n    get fontIcon(): string {\n        return this._fontIcon;\n    }\n\n    set fontIcon(icon: string) {\n        this._fontIcon = this._cleanupFontValue(icon);\n    }\n\n    /** Font set icon is a part of. */\n    @Input()\n    get fontSet(): string {\n        return this._fontSet;\n    }\n\n    set fontSet(fontSet: string) {\n        this._fontSet = this._cleanupFontValue(fontSet);\n    }\n\n    constructor(private elementRef: ElementRef, @Attribute('aria-hidden') ariaHidden: string) {\n        // icon should be hidden for accessibility\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this._updateFontIcon();\n    }\n\n    private _updateFontIcon(): void {\n        const element = this.elementRef.nativeElement;\n        if (this._previousFontIcon !== this._fontIcon) {\n            if (this._previousFontIcon) {\n                element.classList.remove(this._previousFontIcon);\n            }\n            if (this._fontIcon) {\n                element.classList.add(this._fontIcon);\n                this._previousFontIcon = this._fontIcon;\n            }\n        }\n\n        if (this._previousFontSet !== this._fontSet) {\n            if (this._previousFontSet) {\n                element.classList.remove(this._previousFontSet);\n            }\n            if (this._fontSet) {\n                element.classList.add(this._fontSet);\n                this._previousFontSet = this._fontSet;\n            }\n        }\n    }\n\n    // make sure that there are no spaces and that if they sent multiple space separated values grab the first\n    private _cleanupFontValue(fontValue: string): string {\n        return (fontValue || '').trim().split(' ')[0];\n    }\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** `hcIconSm` - small size of hc-icon (14px) */\n@Directive({\n    selector: '[hcIconSm]'\n})\nexport class HcIconSmallDirective {\n    @HostBinding('class.hc-icon-sm')\n    _hostHcIconSmallClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** `hcIconMd` - medium size of hc-icon (20px) - default size */\n@Directive({\n    selector: '[hcIconMd]'\n})\nexport class HcIconMediumDirective {\n    @HostBinding('class.hc-icon-md')\n    _hostHcIconMediumClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** `hcIconLg` - large size of hc-icon (36px) */\n@Directive({\n    selector: '[hcIconLg]'\n})\nexport class HcIconLargeDirective {\n    @HostBinding('class.hc-icon-lg')\n    _hostHcIconLargeClass = true;\n}\n","import {NgModule} from '@angular/core';\nimport {IconComponent} from './icon.component';\nimport {HcIconSmallDirective} from './hc-icon-sm.directive';\nimport {HcIconMediumDirective} from './hc-icon-md.directive';\nimport {HcIconLargeDirective} from './hc-icon-lg.directive';\n\n@NgModule({\n    declarations: [IconComponent, HcIconSmallDirective, HcIconMediumDirective, HcIconLargeDirective],\n    exports: [IconComponent, HcIconSmallDirective, HcIconMediumDirective, HcIconLargeDirective]\n})\nexport class IconModule {}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppSwitcherComponent} from './app-switcher.component';\nimport {PopModule} from '../pop/popover.module';\nimport {ProgressIndicatorsModule} from '../progress-indicators/progress-indicators.module';\nimport {AppSwitcherService} from './app-switcher.service';\nimport {WorkTrackerService} from '../shared/work-tracker.service';\nimport {PipesModule} from '../pipes/pipes.module';\nimport {IAppSwitcherConfig, APP_SWITCHER_CONFIG, APP_SWITCHER_SERVICE} from './app-switcher-interfaces';\nimport {AppSwitcherLinksComponent} from './app-switcher-application-link/app-switcher-links.component';\nimport {IconModule} from '../icon/icon.module';\n\n@NgModule({\n    imports: [CommonModule, PopModule, HttpClientModule, PipesModule, IconModule, ProgressIndicatorsModule],\n    declarations: [AppSwitcherComponent, AppSwitcherLinksComponent],\n    exports: [AppSwitcherComponent, AppSwitcherLinksComponent],\n    entryComponents: [AppSwitcherComponent],\n    providers: [\n        {\n            provide: APP_SWITCHER_SERVICE,\n            useClass: AppSwitcherService\n        },\n        WorkTrackerService\n    ]\n})\nexport class AppSwitcherModule {\n    static forRoot(config: IAppSwitcherConfig): ModuleWithProviders {\n        return {\n            ngModule: AppSwitcherModule,\n            providers: [\n                {\n                    provide: APP_SWITCHER_CONFIG,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\n","import {Component, Input, ViewEncapsulation, EventEmitter, Output} from '@angular/core';\nimport {parseBooleanAttribute} from '../util';\n\n/** Notification banners are used for general information about the state of the application or upcoming events. For instant\n * feedback responding to user actions, use a toaster message.*/\n@Component({\n    selector: 'hc-banner',\n    templateUrl: './hc-banner.html',\n    styleUrls: ['./hc-banner.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcBannerComponent {\n    private _type: string = 'info';\n    private _clickDismiss: boolean = false;\n\n    /** If the banner can be dismissed, emits when the banner is clicked to close */\n    @Output()\n    bannerClose: EventEmitter<MouseEvent> = new EventEmitter();\n\n    /** Style of the notification banner; Defaults to info.\n     * Options are: `success`, `info`, `warning`, `alert`*/\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(typeVal: string) {\n        if (typeVal !== 'success' && typeVal !== 'info' && typeVal !== 'warning' && typeVal !== 'alert') {\n            throw new Error('Unsupported banner type: ' + typeVal);\n        }\n        this._type = typeVal;\n    }\n\n    /** When set to true, a close icon is added to the right side and `bannerClose`\n     * emits on a click. Defaults to false.*/\n    @Input()\n    get clickDismiss(): boolean {\n        return this._clickDismiss;\n    }\n\n    set clickDismiss(dismissVal) {\n        this._clickDismiss = parseBooleanAttribute(dismissVal);\n    }\n\n    _bannerClick(event: MouseEvent) {\n        if (this._clickDismiss) {\n            this.bannerClose.emit(event);\n        }\n    }\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Including `hcBannerStamp` wraps the enclosed text in a stamp to provide greater emphasis */\n@Directive({\n    selector: '[hcBannerStamp]'\n})\nexport class BannerStampDirective {\n    @HostBinding('class.hc-banner-stamp')\n    get _hostClass(): boolean {\n        return true;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HcBannerComponent} from './hc-banner.component';\nimport {BannerStampDirective} from './hc-banner-stamp.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [HcBannerComponent, BannerStampDirective],\n    declarations: [HcBannerComponent, BannerStampDirective]\n})\nexport class BannerModule {}\n","import {Component, OnDestroy, OnInit, Input, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute, Event, NavigationEnd, Params, PRIMARY_OUTLET, Router} from '@angular/router';\n\n/**\n * IBreadcrumb interface is used to store all required data for each breadcrumb element\n * @docs-private\n */\nexport interface IBreadcrumb {\n    label: string;\n    params?: Params;\n    url: string;\n}\n\n/*\n  This type is from @angular/router, but the import location varies by Angular version\n  Including here to allow Cashmere to work regardless of Angular version\n*/\nexport type QueryParamsHandling = 'merge' | 'preserve' | '';\n\n/** A navigational aid that allows users to keep track of their location within the current application  */\n@Component({\n    selector: 'hc-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class BreadcrumbsComponent implements OnInit, OnDestroy {\n    public _breadcrumbs: IBreadcrumb[] = [];\n    public _routerSubscription: any;\n    _backURL: string = '';\n    _backShow: string = 'none';\n    _locationLabel: string = '';\n    _queryParamsHandling: QueryParamsHandling = '';\n\n    /** Sets the handling of the query parameters for the breadcrumb. Choose from: `'preserve' | 'merge' | '' (default)` */\n    @Input()\n    get queryParamsHandling(): QueryParamsHandling {\n        return this._queryParamsHandling;\n    }\n\n    set queryParamsHandling(queryParamsHandling: QueryParamsHandling) {\n        this._queryParamsHandling = queryParamsHandling;\n    }\n\n    constructor(private activatedRoute: ActivatedRoute, private router: Router) {}\n\n    ngOnInit() {\n        const ROUTE_DATA_BREADCRUMB: string = 'breadcrumb';\n        // Add the first breadcrumb for the base page\n        let root: ActivatedRoute = this.activatedRoute.root;\n        this._breadcrumbs = this.getBreadcrumbs(root);\n\n        // subscribe to the NavigationEnd event\n        this._routerSubscription = this.router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd) {\n                this.setBreadcrumbs();\n            }\n        });\n\n        // set initial breadcrumb state\n        this.setBreadcrumbs();\n    }\n\n    private setBreadcrumbs() {\n        const root = this.activatedRoute.root;\n        this._breadcrumbs = this.getBreadcrumbs(root);\n        if (this._breadcrumbs.length > 1) {\n            this._backURL = this._breadcrumbs[this._breadcrumbs.length - 2].url;\n            this._backShow = 'inline';\n            this._locationLabel = '';\n        } else if (this._breadcrumbs.length === 1) {\n            this._backShow = 'none';\n            this._locationLabel = this._breadcrumbs[this._breadcrumbs.length - 1].label;\n        } else {\n            this._backShow = 'none';\n            this._locationLabel = '';\n        }\n    }\n\n    private getBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadcrumb[] = []): IBreadcrumb[] {\n        const ROUTE_DATA_BREADCRUMB: string = 'breadcrumb';\n\n        // get the child routes\n        let children: ActivatedRoute[] = route.children;\n\n        // return if there are no more children\n        if (children.length === 0) {\n            return breadcrumbs;\n        }\n\n        // iterate over each children\n        for (let child of children) {\n            // verify primary route\n            if (child.outlet !== PRIMARY_OUTLET) {\n                continue;\n            }\n\n            // verify the custom data property \"breadcrumb\" is specified on the route\n            if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\n                return this.getBreadcrumbs(child, url, breadcrumbs);\n            }\n\n            // get the route's URL segment\n            let routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n\n            // append route URL to URL\n            url += `/${routeURL}`;\n\n            // add breadcrumb\n            let parent: ActivatedRoute | null = this.activatedRoute.parent;\n            let fullURL: string = '';\n            if (parent !== null) {\n                fullURL += '/' + parent.snapshot.url.map(segment => segment.path).join('/');\n            }\n            fullURL += `${url}`;\n            let breadcrumb: IBreadcrumb = {\n                label: child.snapshot.data[ROUTE_DATA_BREADCRUMB],\n                params: child.snapshot.params,\n                url: fullURL\n            };\n\n            breadcrumbs.push(breadcrumb);\n\n            // recursive\n            return this.getBreadcrumbs(child, url, breadcrumbs);\n        }\n\n        // we should never get here, but just in case\n        return breadcrumbs;\n    }\n\n    ngOnDestroy(): void {\n        this._routerSubscription.unsubscribe();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BreadcrumbsComponent} from './breadcrumbs.component';\nimport {RouterModule} from '@angular/router';\nimport {IconModule} from '../icon/icon.module';\n\n@NgModule({\n    imports: [CommonModule, RouterModule, IconModule],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n})\nexport class BreadcrumbsModule {}\n","/* tslint:disable:component-selector */\n/* tslint:disable:no-host-metadata-property */\n\nimport {ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation} from '@angular/core';\nimport {parseBooleanAttribute} from '../util';\n\nconst supportedStyles = ['primary', 'primary-alt', 'destructive', 'neutral', 'secondary', 'minimal', 'link', 'link-inline'];\nconst supportedSizes = ['sm', 'md', 'lg'];\n\nexport function validateStyleInput(style: string) {\n    if (supportedStyles.indexOf(style) < 0) {\n        throw Error('Unsupported buttonStyle attribute value on ButtonComponent: ' + style);\n    }\n}\n\nexport function validateSizeInput(size: string) {\n    if (supportedSizes.indexOf(size) < 0) {\n        throw Error('Unsupported size attribute value on ButtonComponent: ' + size);\n    }\n}\n\nconst buttonAttributes = ['hc-icon-button', 'hc-button'];\n\n/** Cashmere styled button */\n@Component({\n    selector: 'button[hc-button], button[hc-icon-button]',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./button.component.scss'],\n    host: {\n        '[disabled]': 'disabled || null'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ButtonComponent {\n    private _disabled = false;\n    private _style: string;\n    private _size: string;\n\n    /**\n     * @deprecated\n     * @description Use `buttonStyle` instead\n     * */\n    @Input()\n    get color(): string {\n        return this.buttonStyle;\n    }\n\n    set color(btnStyle: string) {\n        this.buttonStyle = btnStyle;\n    }\n\n    /** Sets style of button. Choose from: `'primary' | 'primary-alt' | 'destructive' |\n     * 'neutral' | 'secondary' | 'minimal' | link' | 'link-inline'` */\n    @Input()\n    get buttonStyle(): string {\n        return this._style;\n    }\n\n    set buttonStyle(btnStyle: string) {\n        validateStyleInput(btnStyle);\n        this.setHostClass(this._style, btnStyle);\n        this._style = btnStyle;\n    }\n\n    /** Sets size of button. Choose from: `'sm' | 'md' | 'lg' |`. *Defaults to `md`.* */\n    @Input()\n    get size(): string {\n        return this._size;\n    }\n\n    set size(size: string) {\n        validateSizeInput(size);\n        this.setHostClass(this._size, size);\n        this._size = size;\n    }\n\n    /** Whether the control is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(isDisabled) {\n        this._disabled = parseBooleanAttribute(isDisabled);\n    }\n\n    constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n        this.buttonStyle = 'primary';\n        this.size = 'md';\n\n        for (const attr of buttonAttributes) {\n            if (elementRef.nativeElement.hasAttribute(attr)) {\n                renderer.addClass(elementRef.nativeElement, attr);\n            }\n        }\n    }\n\n    /** Used to give focus to the button */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    private setHostClass(previous: string, current) {\n        if (previous !== current) {\n            if (previous) {\n                this.renderer.removeClass(this.elementRef.nativeElement, this._hcClassify(previous));\n            }\n            this.renderer.addClass(this.elementRef.nativeElement, this._hcClassify(current));\n        }\n    }\n\n    private _hcClassify(style: string): string {\n        return `hc-${style}`;\n    }\n}\n","/* tslint:disable:component-selector */\n// https://github.com/mgechev/codelyzer/issues/178#issuecomment-265154480\n\nimport {ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Renderer2, ViewEncapsulation} from '@angular/core';\nimport {ButtonComponent} from './button.component';\n\n/* Cashmere button styled anchor */\n@Component({\n    selector: 'a[hc-button]',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class AnchorComponent extends ButtonComponent {\n    @HostBinding('attr.aria-disabled')\n    get _hostAriaDisabled(): string {\n        return this.disabled ? this.disabled.toString() : 'false';\n    }\n\n    @HostBinding('attr.tabindex')\n    get _hostTabIndex(): number {\n        return this.disabled ? -1 : 0;\n    }\n\n    @HostListener('click', ['$event'])\n    _handleClickEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    constructor(elementRef: ElementRef, renderer: Renderer2) {\n        super(elementRef, renderer);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport {parseBooleanAttribute} from '../../util';\nimport {validateStyleInput, validateSizeInput, ButtonComponent} from '../button.component';\nimport {HcPopComponent} from '../../pop/popover.component';\n\n/** SplitButton click event */\nexport class SplitButtonClickEvent {\n    constructor(public source: SplitButtonComponent) {}\n}\n\n/** Split button provides a primary action button along with a secondary menu of actions */\n@Component({\n    selector: 'hc-split-button',\n    templateUrl: './split-button.component.html',\n    styleUrls: ['../button.component.scss', './split-button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class SplitButtonComponent {\n    private _tabIndex: number;\n    private _disabled: boolean = false;\n    private _style: string = 'primary';\n    private _size: string = 'md';\n\n    @ViewChild('splitBtnToggle', {static: false})\n    _splitBtnToggle: ButtonComponent;\n\n    @ViewChild('splitMenu', {static: false})\n    _splitMenu: HcPopComponent;\n\n    /** Primary button's click event */\n    @Output()\n    click = new EventEmitter<SplitButtonClickEvent>();\n\n    /** Additional information shown as tooltip */\n    @Input()\n    title: string;\n\n    /** Positioning for the menu. Possible values: 'start', 'end', 'center' */\n    @Input()\n    menuPosition: string = 'end';\n\n    /** True if clicking anywhere in the menu should automatically close it. */\n    @Input()\n    autoCloseMenuOnClick = true;\n\n    /** Type of button. Possible values: 'submit', 'reset', 'button' */\n    @Input()\n    type = 'button';\n\n    /** Used as a reference in JavaScript, or to reference form data after a form is submitted */\n    @Input()\n    name: string;\n\n    /** Value of primary button when submitted within a form */\n    @Input()\n    value: string;\n\n    /** Button tabindex */\n    @Input()\n    get tabIndex(): number {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: number) {\n        this._tabIndex = value == null ? 0 : value;\n    }\n\n    /**\n     * @deprecated\n     * @description Use `buttonStyle` instead\n     * */\n    @Input()\n    get color(): string {\n        return this.buttonStyle;\n    }\n\n    set color(btnStyle: string) {\n        this.buttonStyle = btnStyle;\n    }\n\n    /** Sets style of button. Choose from: `'primary' | 'primary-alt' | 'destructive' | 'neutral' | 'secondary' | 'link' | 'link-inline'` */\n    @Input()\n    get buttonStyle(): string {\n        return this._style;\n    }\n\n    set buttonStyle(btnStyle: string) {\n        validateStyleInput(btnStyle);\n        this._style = btnStyle;\n    }\n\n    /** Sets size of button. Choose from: `'sm' | 'md' | 'lg'` */\n    @Input()\n    get size(): string {\n        return this._size;\n    }\n\n    set size(size: string) {\n        validateSizeInput(size);\n        this._size = size;\n    }\n\n    /** Whether the control is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(isDisabled) {\n        this._disabled = parseBooleanAttribute(isDisabled);\n    }\n\n    @HostBinding('class.hc-split-button')\n    get _hostClass(): boolean {\n        return true;\n    }\n\n    constructor(private elementRef: ElementRef) {}\n\n    _stopClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n\n    /** Used to give focus to the button */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    _mainBtnClick(event: MouseEvent): void {\n        event.stopPropagation();\n\n        if (!this.disabled) {\n            this.click.emit(new SplitButtonClickEvent(this));\n        }\n    }\n\n    /** Manually close the menu */\n    closeMenu() {\n        this._splitMenu.close();\n    }\n\n    /** Manually open the menu */\n    openMenu() {\n        this._splitMenu.open();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonComponent} from './button.component';\nimport {AnchorComponent} from './anchor.component';\nimport {SplitButtonComponent} from './split-button/split-button.component';\nimport {PopModule} from '../pop/popover.module';\n\n@NgModule({\n    imports: [CommonModule, PopModule],\n    declarations: [AnchorComponent, ButtonComponent, SplitButtonComponent],\n    exports: [AnchorComponent, ButtonComponent, SplitButtonComponent, PopModule]\n})\nexport class ButtonModule {}\n","/** Wrapper component that textual form controls extend to work with hc-form-field */\nexport abstract class HcFormControlComponent {\n    /** Whether the control should be displaying an associated error */\n    _errorState: boolean = false;\n\n    /** An error message to be shown in the UI when there is an error state present */\n    _errorMessage: string = '';\n\n    /** An object that represents the Angular validation errors that are present on the form */\n    _errors: {\n        [key: string]: any;\n    } = {};\n\n    /** Whether the control is disabled */\n    _isDisabled: boolean = false;\n\n    /** ID identifier of the the control */\n    _componentId: string;\n\n    /** Whether the control is required */\n    _isRequired: boolean = false;\n\n    /** Whether the control should apply tight styling */\n    tight: boolean = false;\n}\n","import {\n    Attribute,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    Renderer2,\n    ViewChild,\n    ViewEncapsulation,\n    Self,\n    Optional,\n    DoCheck\n} from '@angular/core';\nimport {ControlValueAccessor, NgForm, FormGroupDirective, NgControl} from '@angular/forms';\nimport {HcFormControlComponent} from '../form-field/hc-form-control.component';\nimport {parseBooleanAttribute} from '../util';\n\nlet nextCheckboxId = 1;\n\nexport class CheckboxChangeEvent {\n    constructor(public source: CheckboxComponent, public checked: boolean) {}\n}\n\n@Component({\n    selector: 'hc-checkbox',\n    templateUrl: './checkbox.component.html',\n    styleUrls: ['./checkbox.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [{provide: HcFormControlComponent, useExisting: forwardRef(() => CheckboxComponent)}],\n    exportAs: 'hcCheckbox'\n})\nexport class CheckboxComponent extends HcFormControlComponent implements ControlValueAccessor, DoCheck {\n    private _uniqueId = `hc-checkbox-${nextCheckboxId++}`;\n    private _form: NgForm | FormGroupDirective | null;\n    private _checked: boolean = false;\n    private _tabIndex: number;\n    private _tight: boolean = false;\n\n    _componentId = this._uniqueId;\n\n    /** Value attribute of the native checkbox */\n    @Input()\n    value: string;\n\n    /** Whether the checkbox is indeterminate. It can represent a checkbox with three states. */\n    @Input()\n    indeterminate: boolean;\n\n    /** If true, the checkbox is for display purposes (not user interaction). As such its checked/unchecked state\n     * can only be controlled programatically. Useful for embedding in an ng-select typeahead */\n    @Input()\n    isStub = false;\n\n    /** Unique id for the checkbox element. If none is supplied, one will be auto-generated. */\n    @Input()\n    get id(): string {\n        return this._componentId || this._uniqueId;\n    }\n\n    set id(idVal: string) {\n        this._componentId = idVal ? idVal : this._uniqueId;\n    }\n\n    /** If true, condense the default margin and reduce the font size. *Defaults to `false`.*  */\n    @Input()\n    get tight(): boolean {\n        return this._tight;\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n    }\n\n    /** Sets the position of the checkbox relative to its associated label. *Defaults to `center`.*  */\n    @Input()\n    align: 'center' | 'top' | 'bottom' = 'center';\n\n    /** Sets unique name used in a form */\n    @Input()\n    name: string | null = null;\n\n    /** Event emitted whenever the state changes */\n    @Output()\n    change = new EventEmitter<CheckboxChangeEvent>();\n\n    @ViewChild('checkboxInput', {static: true})\n    _checkboxInput: ElementRef;\n\n    @HostBinding('attr.id')\n    get _getHostId(): string {\n        return this.id;\n    }\n\n    @HostBinding('class.hc-checkbox-checked')\n    get _getCheckboxCheckedClass(): boolean {\n        return this.checked;\n    }\n\n    @HostBinding('class.hc-checkbox-disabled')\n    get _getCheckboxDisabledClass(): boolean {\n        if (this._ngControl && this._ngControl.disabled) {\n            return this._ngControl.disabled;\n        }\n        return this._isDisabled;\n    }\n\n    @HostBinding('class.hc-checkbox-indeterminate')\n    get _getCheckboxIndeterminateClass(): boolean {\n        return this.indeterminate;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._isRequired;\n    }\n\n    set required(requiredVal) {\n        this._isRequired = parseBooleanAttribute(requiredVal);\n    }\n\n    /** Whether the checkbox is disabled. */\n    @Input()\n    get disabled(): boolean {\n        if (this._ngControl && this._ngControl.disabled) {\n            return this._ngControl.disabled;\n        }\n        return this._isDisabled;\n    }\n\n    set disabled(disabledVal) {\n        this._isDisabled = parseBooleanAttribute(disabledVal);\n    }\n\n    /** Whether the checkbox is checked. */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(checked: boolean) {\n        if (this._checked === checked) {\n            return;\n        }\n        this._checked = checked;\n    }\n\n    /** TabIndex attribute of native checkbox */\n    get tabIndex(): number {\n        return this._isDisabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: number) {\n        this._tabIndex = value == null ? 0 : value;\n    }\n\n    get _inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    private _onChangeFunc: (value: any) => void = () => {};\n\n    private _onTouchFunc: () => any = () => {};\n\n    constructor(\n        @Attribute('tabindex') tabindex: string,\n        private _renderer: Renderer2,\n        private _elementRef: ElementRef,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional()\n        @Self()\n        public _ngControl: NgControl\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabindex, 10) || 0;\n\n        this._form = _parentForm || _parentFormGroup;\n        if (this._ngControl != null) {\n            this._ngControl.valueAccessor = this;\n        }\n    }\n\n    writeValue(value: any): void {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChangeFunc = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouchFunc = fn;\n    }\n\n    setDisabledState(disabledVal: boolean): void {\n        this.disabled = disabledVal;\n        this._renderer.setProperty(this._checkboxInput.nativeElement, 'disabled', disabledVal);\n    }\n\n    /** Toggles the current checked state of the checkbox */\n    toggle() {\n        this.checked = !this.checked;\n    }\n\n    _clickEvent(event: Event) {\n        event.stopPropagation(); // prevent native click event from being dispatched\n\n        if (!this.disabled) {\n            this.toggle();\n            this._emitChangeEvent();\n        }\n    }\n\n    _stopChangeEvent(event: Event) {\n        event.stopPropagation(); // prevent native change event from emitting its own object through output 'change'\n    }\n\n    private _emitChangeEvent(): void {\n        this._onChangeFunc(this.checked);\n        this.change.emit(new CheckboxChangeEvent(this, this.checked));\n    }\n\n    _onBlur() {\n        this._onTouchFunc();\n    }\n\n    ngDoCheck(): void {\n        // This needs to be checked every cycle because we can't subscribe to form submissions\n        if (this._ngControl) {\n            this._updateErrorState();\n        }\n    }\n\n    private _updateErrorState() {\n        const oldState = this._errorState;\n\n        // TODO: this could be abstracted out as an @Input() if we need this to be configurable\n        const newState = !!(\n            this._ngControl &&\n            this._ngControl.invalid &&\n            (this._ngControl.touched || (this._form && this._form.submitted))\n        );\n\n        if (oldState !== newState) {\n            this._errorState = newState;\n        }\n    }\n}\n","/* tslint:disable:directive-selector */\n\nimport {Directive, forwardRef, HostBinding, Provider} from '@angular/core';\nimport {CheckboxRequiredValidator, NG_VALIDATORS} from '@angular/forms';\n\nexport const HC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => HcCheckboxRequiredValidatorDirective),\n    multi: true\n};\n\n/** @docs-private */\n@Directive({\n    selector: `hc-checkbox[required][formControlName],\n             hc-checkbox[required][formControl],hc-checkbox[required][ngModel]`,\n    providers: [HC_CHECKBOX_REQUIRED_VALIDATOR]\n})\nexport class HcCheckboxRequiredValidatorDirective extends CheckboxRequiredValidator {\n    @HostBinding('attr.required')\n    get isRequired(): string | null {\n        return this.required ? '' : null;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CheckboxComponent} from './checkbox.component';\nimport {HcCheckboxRequiredValidatorDirective} from './checkbox-required.directive';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    exports: [CheckboxComponent, HcCheckboxRequiredValidatorDirective],\n    declarations: [CheckboxComponent, HcCheckboxRequiredValidatorDirective]\n})\nexport class CheckboxModule {}\n","import {Component, Input, ViewEncapsulation, Output, EventEmitter} from '@angular/core';\nimport {parseBooleanAttribute} from '../util';\n\nconst supportedColors = ['neutral', 'yellow', 'green', 'red'];\n\nexport function validateColorInput(inputStr: string) {\n    if (supportedColors.indexOf(inputStr) < 0) {\n        throw Error('Unsupported chip color value: ' + inputStr);\n    }\n}\n\n/** Chips represent complex entities in small blocks, such as filters, contacts, or system information */\n@Component({\n    selector: 'hc-chip',\n    templateUrl: './chip.component.html',\n    styleUrls: ['./chip.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChipComponent {\n    private _hasCloseButton: boolean = false;\n    private _color: string = 'neutral';\n\n    /** Emitted when the 'X' close button is clicked. `(click)` may be used for clicks on the entire chip */\n    @Output()\n    closeClick = new EventEmitter<MouseEvent>();\n\n    /** Sets chip color to one of: `neutral`, `yellow`, `green`, or `red` (default=`neutral`) */\n    @Input()\n    get color(): string {\n        return this._color;\n    }\n\n    set color(colorType: string) {\n        validateColorInput(colorType);\n        this._color = colorType;\n    }\n\n    constructor() {}\n\n    /** If true, displays an X button on the right side of the chip which emits a `closeClick` event */\n    @Input()\n    get hasCloseButton(): boolean {\n        return this._hasCloseButton;\n    }\n\n    set hasCloseButton(hasButton) {\n        this._hasCloseButton = parseBooleanAttribute(hasButton);\n    }\n\n    /** Called on a click of the X close button */\n    _closeClick(e: MouseEvent) {\n        this.closeClick.emit(e);\n    }\n\n    /**\n     * @deprecated\n     * @description Use `hasCloseButton` instead\n     * */\n    @Input()\n    get action(): boolean {\n        return this._hasCloseButton;\n    }\n\n    set action(isAction) {\n        this._hasCloseButton = parseBooleanAttribute(isAction);\n    }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {parseBooleanAttribute} from '../../util';\n\n/** Supporting component to help with grouping chips into collections */\n@Component({\n    selector: 'hc-chip-row',\n    template: `\n        <div class=\"hc-chip-row-contents\" [ngClass]=\"{'hc-chip-single-row': !wrap}\">\n            <div>\n                <div class=\"hc-chip-row-buffer\"><ng-content></ng-content></div>\n            </div>\n        </div>\n    `,\n    styleUrls: ['../chip.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChipRowComponent {\n    private _wrap: boolean = true;\n\n    constructor() {}\n\n    /** If false, constrain the container to one line with overflow ellipses (default=true) */\n    @Input()\n    get wrap(): boolean {\n        return this._wrap;\n    }\n\n    set wrap(doWrap) {\n        this._wrap = parseBooleanAttribute(doWrap);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChipComponent} from './chip.component';\nimport {ChipRowComponent} from './chip-row/chip-row.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ChipComponent, ChipRowComponent],\n    declarations: [ChipComponent, ChipRowComponent]\n})\nexport class ChipModule {}\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class HcDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the current month button (used by screen readers). */\n    currentMonthLabel: string = 'Current month';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n\n    /** A label for the 'jump to the current date' button (used by screen readers). */\n    switchToTodayLabel: string = 'Jump to the current date';\n}\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `Datepicker: No provider found for ${provider}. You must import one of the following ` +\n            `modules at your application root: HcNativeDateModule, MatMomentDateModule, or provide a ` +\n            `custom implementation.`\n    );\n}\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\n\nimport {InjectionToken} from '@angular/core';\n\nexport type D = Date;\n\n// tslint:disable-next-line:interface-over-type-literal\nexport type HcDateFormats = {\n    parse: {\n        dateInput: any;\n    };\n    display: {\n        dateInput: any;\n        timeInput: any;\n        dateTimeInput: any;\n        monthYearLabel: any;\n        dateA11yLabel: any;\n        monthYearA11yLabel: any;\n    };\n};\n\nexport const HC_DATE_FORMATS = new InjectionToken<HcDateFormats>('hc-date-formats');\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const HC_DATE_LOCALE = new InjectionToken<string>('HC_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: HC_DATE_LOCALE_FACTORY\n});\n\n/** @docs-private */\nexport function HC_DATE_LOCALE_FACTORY(): string {\n    return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since HC_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nexport const HC_DATE_LOCALE_PROVIDER = {provide: HC_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n    /** The locale to use for all dates. */\n    protected locale: any;\n\n    /** A stream that emits when the locale changes. */\n    get localeChanges(): Observable<void> {\n        return this._localeChanges;\n    }\n    protected _localeChanges = new Subject<void>();\n\n    /**\n     * Gets the year component of the given date.\n     * @param date The date to extract the year from.\n     * @returns The year component.\n     */\n    abstract getYear(date: D): number;\n\n    /**\n     * Gets the month component of the given date.\n     * @param date The date to extract the month from.\n     * @returns The month component (0-indexed, 0 = January).\n     */\n    abstract getMonth(date: D): number;\n\n    /**\n     * Gets the date of the month component of the given date.\n     * @param date The date to extract the date of the month from.\n     * @returns The month component (1-indexed, 1 = first of month).\n     */\n    abstract getDate(date: D): number;\n\n    abstract getHours(date: D): number;\n    abstract getMinutes(date: D): number;\n\n    /**\n     * Gets the day of the week component of the given date.\n     * @param date The date to extract the day of the week from.\n     * @returns The month component (0-indexed, 0 = Sunday).\n     */\n    abstract getDayOfWeek(date: D): number;\n\n    /**\n     * Gets a list of names for the months.\n     * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @returns An ordered list of all month names, starting with January.\n     */\n    abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n    /**\n     * Gets a list of names for the dates of the month.\n     * @returns An ordered list of all date of the month names, starting with '1'.\n     */\n    abstract getDateNames(): string[];\n\n    /**\n     * Gets a list of names for the days of the week.\n     * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @returns An ordered list of all weekday names, starting with Sunday.\n     */\n    abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n    /**\n     * Gets the name for the year of the given date.\n     * @param date The date to get the year name for.\n     * @returns The name of the given year (e.g. '2017').\n     */\n    abstract getYearName(date: D): string;\n\n    /**\n     * Gets the first day of the week.\n     * @returns The first day of the week (0-indexed, 0 = Sunday).\n     */\n    abstract getFirstDayOfWeek(): number;\n\n    /**\n     * Gets the number of days in the month of the given date.\n     * @param date The date whose month should be checked.\n     * @returns The number of days in the month of the given date.\n     */\n    abstract getNumDaysInMonth(date: D): number;\n\n    /**\n     * Clones the given date.\n     * @param date The date to clone\n     * @returns A new date equal to the given date.\n     */\n    abstract clone(date: D): D;\n\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @returns The new date, or null if invalid.\n     */\n    abstract createDate(year: number, month: number, date: number): D;\n\n    /**\n     * Gets today's date.\n     * @returns Today's date.\n     */\n    abstract today(): D;\n\n    /**\n     * Parses a date from a user-provided value.\n     * @param value The value to parse.\n     * @param parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @returns The parsed date.\n     */\n    abstract parse(value: any, parseFormat: any): D | null;\n\n    /**\n     * Formats a date as a string according to the given format.\n     * @param date The value to format.\n     * @param displayFormat The format to use to display the date as a string.\n     * @returns The formatted date string.\n     */\n    abstract format(date: D, displayFormat: any): string;\n\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @param date The date to add years to.\n     * @param years The number of years to add (may be negative).\n     * @returns A new date equal to the given one with the specified number of years added.\n     */\n    abstract addCalendarYears(date: D, years: number): D;\n\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @param date The date to add months to.\n     * @param months The number of months to add (may be negative).\n     * @returns A new date equal to the given one with the specified number of months added.\n     */\n    abstract addCalendarMonths(date: D, months: number): D;\n\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @param date The date to add days to.\n     * @param days The number of days to add (may be negative).\n     * @returns A new date equal to the given one with the specified number of days added.\n     */\n    abstract addCalendarDays(date: D, days: number): D;\n\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @param date The date to get the ISO date string for.\n     * @returns The ISO date string date string.\n     */\n    abstract toIso8601(date: D): string;\n\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @param obj The object to check\n     * @returns Whether the object is a date instance.\n     */\n    abstract isDateInstance(obj: any): boolean;\n\n    /**\n     * Checks whether the given date is valid.\n     * @param date The date to check.\n     * @returns Whether the date is valid.\n     */\n    abstract isValid(date: D): boolean;\n\n    /**\n     * Gets date instance that is not valid.\n     * @returns An invalid date.\n     */\n    abstract invalid(): D;\n\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<sat-datepicker>` will call this\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value: any): D | null {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale: any) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first: D, second: D): number {\n        return (\n            this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second) ||\n            this.getHours(first) - this.getHours(second) ||\n            this.getMinutes(first) - this.getMinutes(second)\n        );\n    }\n\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first: D | null, second: D | null): boolean {\n        if (first && second) {\n            const firstValid = this.isValid(first);\n            const secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid === secondValid;\n        }\n        return first === second;\n    }\n\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date: D, min?: D | null, max?: D | null): D {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    OnChanges,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    NgZone,\n    SimpleChanges\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n// tslint:disable:no-host-metadata-property\n// tslint:disable:component-selector\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type HcCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class HcCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: HcCalendarCellCssClasses\n    ) {}\n}\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[hc-calendar-body]',\n    templateUrl: './calendar-body.component.html',\n    styleUrls: ['calendar-body.component.scss'],\n    host: {\n        class: 'hc-calendar-body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'hcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarBodyComponent implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input()\n    label: string;\n\n    /** The cells to display in the table. */\n    @Input()\n    rows: HcCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input()\n    todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input()\n    selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input()\n    labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input()\n    numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input()\n    activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input()\n    cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output()\n    readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    _firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    _cellPadding: string;\n\n    /** Width of an individual cell. */\n    _cellWidth: string;\n\n    constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) {}\n\n    _cellClicked(cell: HcCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        const {rows, numCols} = this;\n\n        if (changes.rows || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;\n        }\n\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    _isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                    const activeCell: HTMLElement | null = this._elementRef.nativeElement.querySelector('.hc-calendar-body-active');\n\n                    if (activeCell) {\n                        activeCell.focus();\n                    }\n                });\n        });\n    }\n}\n","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    AfterContentInit,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ChangeDetectorRef,\n    Optional\n} from '@angular/core';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {createMissingDateImplError} from '../datetime/datepicker-errors';\nimport {LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, HOME, END, PAGE_UP, PAGE_DOWN, ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {D} from '../datetime/date-formats';\nimport {CalendarBodyComponent, HcCalendarCell} from '../calendar-body/calendar-body.component';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n@Component({\n    selector: 'hc-multi-year-view',\n    templateUrl: './multi-year-view.component.html',\n    exportAs: 'hcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultiYearViewComponent implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (\n            Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)\n        ) {\n            this._init();\n        }\n    }\n    private _activeDate: D;\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n    set selected(value: D | null) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    private _selected: D | null;\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n    set minDate(value: D | null) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _minDate: D | null;\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n    set maxDate(value: D | null) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _maxDate: D | null;\n\n    /** A function used to filter which dates are selectable. */\n    @Input()\n    dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output()\n    readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output()\n    readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output()\n    readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(CalendarBodyComponent, {static: false})\n    _hcCalendarBody: CalendarBodyComponent;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    _years: HcCalendarCell[][];\n\n    /** The year that today falls on. */\n    _todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    _selectedYear: number | null;\n\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Optional() public _dateAdapter: DateAdapter<D>,\n        @Optional() private _dir?: Directionality\n    ) {\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this._dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this._init();\n    }\n\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this._years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    _yearSelected(year: number) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        const month = this._dateAdapter.getMonth(this.activeDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(\n            this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth))\n        );\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(\n                    this._activeDate,\n                    -this._dateAdapter.getYear(this._activeDate) % yearsPerPage\n                );\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(\n                    this._activeDate,\n                    yearsPerPage - (this._dateAdapter.getYear(this._activeDate) % yearsPerPage) - 1\n                );\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    _getActiveCell(): number {\n        return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._hcCalendarBody._focusActiveCell();\n    }\n\n    /** Creates an hcCalendarCell for the given year. */\n    private _createCellForYear(year: number) {\n        const yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new HcCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private _shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (\n            year === undefined ||\n            year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))\n        ) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) === year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private _getValidDateOrNull(obj: any): D | null {\n        return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\n","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    AfterContentInit,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ChangeDetectorRef,\n    Optional,\n    Inject\n} from '@angular/core';\nimport {HcCalendarCellCssClasses, CalendarBodyComponent, HcCalendarCell} from '../calendar-body/calendar-body.component';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {createMissingDateImplError} from '../datetime/datepicker-errors';\nimport {LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, HOME, END, PAGE_UP, PAGE_DOWN, ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {D, HC_DATE_FORMATS, HcDateFormats} from '../datetime/date-formats';\nimport {DateAdapter} from '../datetime/date-adapter';\n\nconst DAYS_PER_WEEK = 7;\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'hc-month-view',\n    templateUrl: './month-view.component.html',\n    exportAs: 'hcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MonthViewComponent implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    private _activeDate: D;\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n    set selected(value: D | null) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    private _selected: D | null;\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n    set minDate(value: D | null) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _minDate: D | null;\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n    set maxDate(value: D | null) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _maxDate: D | null;\n\n    /** Function used to filter which dates are selectable. */\n    @Input()\n    dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input()\n    dateClass: (date: D) => HcCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output()\n    readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output()\n    readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output()\n    readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(CalendarBodyComponent, {static: false})\n    _hcCalendarBody: CalendarBodyComponent;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    _monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    _weeks: HcCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    _firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    _selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    _todayDate: number | null;\n\n    /** The names of the weekdays. */\n    _weekdays: {long: string; narrow: string}[];\n\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Optional()\n        @Inject(HC_DATE_FORMATS)\n        private _dateFormats: HcDateFormats,\n        @Optional() public _dateAdapter: DateAdapter<D>,\n        @Optional() private _dir?: Directionality\n    ) {\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('HC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('short');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return {long, narrow: narrowWeekdays[i]};\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this._dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this._init();\n    }\n\n    /** Handles when a new date is selected. */\n    _dateSelected(date: number) {\n        if (this._selectedDate !== date) {\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            let selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            if (this._selected) {\n                selectedDate.setHours(this._selected.getHours());\n                selectedDate.setMinutes(this._selected.getMinutes());\n            }\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this._userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(\n                    this._activeDate,\n                    this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate)\n                );\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, -1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, 1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel = this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n\n        const firstOfMonth = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate),\n            1\n        );\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._hcCalendarBody._focusActiveCell();\n    }\n\n    /** Creates hcCalendarCells for the dates in this month. */\n    private _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(\n                this._dateAdapter.getYear(this.activeDate),\n                this._dateAdapter.getMonth(this.activeDate),\n                i + 1\n            );\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this._weeks[this._weeks.length - 1].push(new HcCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private _shouldEnableDate(date: D): boolean {\n        return (\n            !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0)\n        );\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private _getDateInCurrentMonth(date: D | null): number | null {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(\n            d1 &&\n            d2 &&\n            this._dateAdapter.getMonth(d1) === this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) === this._dateAdapter.getYear(d2)\n        );\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private _getValidDateOrNull(obj: any): D | null {\n        return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    AfterContentInit,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ChangeDetectorRef,\n    Optional,\n    Inject\n} from '@angular/core';\nimport {CalendarBodyComponent, HcCalendarCell} from '../calendar-body/calendar-body.component';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {createMissingDateImplError} from '../datetime/datepicker-errors';\nimport {LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, HOME, END, PAGE_UP, PAGE_DOWN, ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {D, HC_DATE_FORMATS, HcDateFormats} from '../datetime/date-formats';\nimport {DateAdapter} from '../datetime/date-adapter';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'hc-year-view',\n    templateUrl: './year-view.component.html',\n    exportAs: 'hcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YearViewComponent implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    private _activeDate: D;\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n    set selected(value: D | null) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    private _selected: D | null;\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n    set minDate(value: D | null) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _minDate: D | null;\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n    set maxDate(value: D | null) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _maxDate: D | null;\n\n    /** A function used to filter which dates are selectable. */\n    @Input()\n    dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output()\n    readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output()\n    readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output()\n    readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(CalendarBodyComponent, {static: false})\n    _hcCalendarBody: CalendarBodyComponent;\n\n    /** Grid of calendar cells representing the months of the year. */\n    _months: HcCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    _yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    _todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    _selectedMonth: number | null;\n\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Optional()\n        @Inject(HC_DATE_FORMATS)\n        private _dateFormats: HcDateFormats,\n        @Optional() public _dateAdapter: DateAdapter<D>,\n        @Optional() private _dir?: Directionality\n    ) {\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('HC_DATE_FORMATS');\n        }\n\n        this._activeDate = this._dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this._init();\n    }\n\n    /** Handles when a new month is selected. */\n    _monthSelected(month: number) {\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(\n            this._dateAdapter.createDate(\n                this._dateAdapter.getYear(this.activeDate),\n                month,\n                Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)\n            )\n        );\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [\n            [0, 1, 2, 3],\n            [4, 5, 6, 7],\n            [8, 9, 10, 11]\n        ].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._hcCalendarBody._focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private _getMonthInCurrentYear(date: D | null) {\n        return date && this._dateAdapter.getYear(date) === this._dateAdapter.getYear(this.activeDate)\n            ? this._dateAdapter.getMonth(date)\n            : null;\n    }\n\n    /** Creates an hcCalendarCell for the given month. */\n    private _createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this._dateAdapter.format(\n            this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n            this._dateFormats.display.monthYearA11yLabel\n        );\n        return new HcCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private _shouldEnableMonth(month: number) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n        if (\n            month === undefined ||\n            month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)\n        ) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) === month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private _getValidDateOrNull(obj: any): D | null {\n        return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\n","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    forwardRef,\n    Inject,\n    SimpleChanges,\n    Optional,\n    ChangeDetectorRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n    AfterContentInit,\n    AfterViewChecked,\n    OnDestroy,\n    OnChanges\n} from '@angular/core';\nimport {HcDatepickerIntl} from '../datepicker-intl';\nimport {ComponentPortal, Portal, ComponentType} from '@angular/cdk/portal';\nimport {createMissingDateImplError} from '../datetime/datepicker-errors';\nimport {HC_DATE_FORMATS, HcDateFormats, D} from '../datetime/date-formats';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {Subject, Subscription} from 'rxjs';\nimport {yearsPerPage, MultiYearViewComponent} from '../multi-year-view/multi-year-view.component';\nimport {HcCalendarCellCssClasses} from '../calendar-body/calendar-body.component';\nimport {MonthViewComponent} from '../month-view/month-view.component';\nimport {YearViewComponent} from '../year-view/year-view.component';\nimport {FormControl} from '@angular/forms';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type CalendarViewComponent = 'month' | 'year' | 'multi-year';\n\n/** Default header for hcCalendar */\n@Component({\n    selector: 'hc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'hcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarHeaderComponent {\n    constructor(\n        private _intl: HcDatepickerIntl,\n        @Inject(forwardRef(() => CalendarComponent)) public calendar: CalendarComponent,\n        @Optional() private _dateAdapter: DateAdapter<D>,\n        @Optional()\n        @Inject(HC_DATE_FORMATS)\n        private _dateFormats: HcDateFormats,\n        changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the currently visible month */\n    get monthButtonText(): string {\n        return this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.calendar.activeDate)];\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the jump to today button */\n    get _todayButtonLabel(): string {\n        return this._intl.switchToTodayLabel;\n    }\n\n    /** The label for the currently displayed month */\n    get monthButtonLabel(): string {\n        return this._intl.currentMonthLabel;\n    }\n\n    /** The label for the the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this._intl.prevMonthLabel,\n            year: this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this._intl.nextMonthLabel,\n            year: this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate =\n            this.calendar.currentView === 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage);\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate =\n            this.calendar.currentView === 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView === 'year' ? 1 : yearsPerPage);\n    }\n\n    /** Handles clicks on the jump to today button */\n\n    _todayClicked(): void {\n        this.calendar.activeDate = this._dateAdapter.today();\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    _todayEnabled(): boolean {\n        let minDate;\n        let maxDate;\n        let today = new Date(this._dateAdapter.today().toDateString());\n\n        /** Normalize the compare dates to all be on the first day of the month because we are only concerned\n         * about whether today falls outside of the month than min or max is in */\n        today.setDate(1);\n        if (this.calendar.minDate) {\n            minDate = new Date(this.calendar.minDate.toDateString());\n            minDate.setDate(1);\n        }\n        if (this.calendar.maxDate) {\n            maxDate = new Date(this.calendar.maxDate.toDateString());\n            maxDate.setDate(1);\n        }\n        return (\n            (!minDate || this._dateAdapter.compareDate(minDate, today) < 1) &&\n            (!maxDate || this._dateAdapter.compareDate(maxDate, today) > -1)\n        );\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private _isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return (\n                this._dateAdapter.getYear(date1) === this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) === this._dateAdapter.getMonth(date2)\n            );\n        }\n        if (this.calendar.currentView === 'year') {\n            return this._dateAdapter.getYear(date1) === this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) === Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'hc-calendar',\n    templateUrl: './calendar.component.html',\n    styleUrls: ['calendar.component.scss'],\n    // tslint:disable-next-line:no-host-metadata-property\n    host: {\n        class: 'hc-calendar'\n    },\n    exportAs: 'hcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarComponent implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n    /** An input indicating the type of the header component, if set. */\n    @Input()\n    headerComponent: ComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    _calendarHeaderPortal: Portal<any>;\n\n    /** Stores the current am/pm value */\n    _period: FormControl = new FormControl('am');\n\n    private _intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private _moveFocusOnNextTick = false;\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n    set startAt(value: D | null) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _startAt: D | null;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input()\n    startView: CalendarViewComponent = 'month';\n\n    /** Whether the calendar should show calendar, time-picker, or both */\n    @Input()\n    mode: 'date' | 'time' | 'date-time' = 'date';\n\n    /** Whether the time picker should display a 12-hour or 24-clock. Accepts 12 or 24. Defaults to 12. */\n    @Input()\n    get hourCycle(): string | number {\n        return this._hourCycle;\n    }\n    set hourCycle(value: string | number) {\n        if (+value === 12 || +value === 24) {\n            this._hourCycle = +value;\n        } else if (value) {\n            throw Error('Unsupported hourCycle value: ' + value + '. Accepted values are 12 or 24.');\n        }\n    }\n    _hourCycle: number = 12;\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n    set selected(value: D | null) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (this._selected) {\n            this._period.setValue(this._selected.getHours() > 11 ? 'pm' : 'am');\n        }\n    }\n    private _selected: D | null;\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n    set minDate(value: D | null) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _minDate: D | null;\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n    set maxDate(value: D | null) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _maxDate: D | null;\n\n    /** Function used to filter which dates are selectable. */\n    @Input()\n    dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input()\n    dateClass: (date: D) => HcCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output()\n    readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output()\n    readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output()\n    readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output()\n    readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(MonthViewComponent, {static: false})\n    monthView: MonthViewComponent;\n\n    /** Reference to the current year view component. */\n    @ViewChild(YearViewComponent, {static: false})\n    yearView: YearViewComponent;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(MultiYearViewComponent, {static: false})\n    multiYearView: MultiYearViewComponent;\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this._clampedActiveDate;\n    }\n    set activeDate(value: D) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n    private _clampedActiveDate: D;\n\n    /** Whether the calendar is in month view. */\n    get currentView(): CalendarViewComponent {\n        return this._currentView;\n    }\n    set currentView(value: CalendarViewComponent) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n    }\n    private _currentView: CalendarViewComponent;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    /** A string containing the value of minutes for the current date */\n    get minutes(): string | null {\n        if (this.selected) {\n            let minVal = this.selected.getMinutes();\n            return minVal < 10 ? '0' + minVal : minVal.toString();\n        } else {\n            return this.selected;\n        }\n    }\n    set minutes(value: string | null) {\n        if (value && !isNaN(+value)) {\n            let tempDate = this.selected ? new Date(this.selected.getTime()) : new Date();\n            tempDate.setMinutes(+value);\n            this.selectedChange.emit(tempDate);\n            this._userSelected();\n        }\n    }\n\n    /** A string containing the hour for the current date */\n    get hours(): string | null {\n        if (this.selected) {\n            let hourVal = this.selected.getHours();\n            if (this._hourCycle === 12) {\n                if (hourVal > 11) {\n                    return hourVal === 12 ? hourVal.toString() : (hourVal - 12).toString();\n                } else {\n                    return hourVal === 0 ? '12' : hourVal.toString();\n                }\n            } else {\n                return hourVal.toString();\n            }\n        } else {\n            return this.selected;\n        }\n    }\n    set hours(value: string | null) {\n        if (value && !isNaN(+value)) {\n            let hourVal: number = +value;\n            if (this._hourCycle === 12) {\n                if (this._period.value === 'pm' && hourVal !== 12) {\n                    hourVal += 12;\n                } else if (this._period.value === 'am' && hourVal === 12) {\n                    hourVal = 0;\n                }\n            }\n            let tempDate = this.selected ? new Date(this.selected.getTime()) : new Date();\n            tempDate.setHours(hourVal);\n            this.selectedChange.emit(tempDate);\n            this._userSelected();\n        }\n    }\n\n    _periodChange() {\n        if (this.selected) {\n            let tempDate = new Date(this.selected.getTime());\n            let curHours = tempDate.getHours();\n            if (this._period.value === 'pm') {\n                tempDate.setHours(curHours + 12);\n            } else {\n                tempDate.setHours(curHours - 12);\n            }\n            this.selectedChange.emit(tempDate);\n            this._userSelected();\n        }\n    }\n\n    constructor(\n        private _intl: HcDatepickerIntl,\n        @Optional() private _dateAdapter: DateAdapter<D>,\n        @Optional()\n        @Inject(HC_DATE_FORMATS)\n        private _dateFormats: HcDateFormats,\n        private _changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('HC_DATE_FORMATS');\n        }\n\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || CalendarHeaderComponent);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        if (this.mode !== 'time') {\n            this._getCurrentViewComponent()._focusActiveCell();\n        }\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView : this.currentView === 'year' ? this.yearView : this.multiYearView;\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    _dateSelected(date: D): void {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    _userSelected(): void {\n        this._userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private _getValidDateOrNull(obj: any): D | null {\n        return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n\n    _hoursUp() {\n        if (!this.hours) {\n            this.hours = this._hourCycle > 12 ? '0' : '1';\n        } else {\n            let curHour = +this.hours;\n            curHour++;\n            const tempCycle = this._hourCycle > 12 ? 23 : 12;\n            if (curHour > tempCycle) {\n                curHour = tempCycle;\n            }\n            this.hours = curHour.toString();\n        }\n    }\n\n    _hoursDown() {\n        if (!this.hours) {\n            this.hours = this._hourCycle > 12 ? '23' : '12';\n        } else {\n            let curHour = +this.hours;\n            curHour--;\n            const tempCycle = this._hourCycle > 12 ? 0 : 1;\n            if (curHour < tempCycle) {\n                curHour = tempCycle;\n            }\n            this.hours = curHour.toString();\n        }\n    }\n\n    _minutesUp() {\n        if (!this.minutes) {\n            this.minutes = '00';\n        } else {\n            let curMin = +this.minutes;\n            curMin++;\n            if (curMin > 59) {\n                curMin = 59;\n            }\n            this.minutes = curMin.toString();\n        }\n    }\n\n    _minutesDown() {\n        if (!this.minutes) {\n            this.minutes = '59';\n        } else {\n            let curMin = +this.minutes;\n            curMin--;\n            if (curMin < 1) {\n                curMin = 1;\n            }\n            this.minutes = curMin.toString();\n        }\n    }\n}\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\nimport {animate, state, style, transition, trigger, AnimationTriggerMetadata} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const HcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state(\n            'void',\n            style({\n                opacity: 0,\n                transform: 'scale(1, 0.8)'\n            })\n        ),\n        transition(\n            'void => enter',\n            animate(\n                '120ms cubic-bezier(0, 0, 0.2, 1)',\n                style({\n                    opacity: 1,\n                    transform: 'scale(1, 1)'\n                })\n            )\n        ),\n        transition('* => void', animate('100ms linear', style({opacity: 0})))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({opacity: 0})),\n        state('enter', style({opacity: 1})),\n\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n","import {Component, ViewEncapsulation, ChangeDetectionStrategy, AfterViewInit, ViewChild} from '@angular/core';\nimport {HcDatepickerAnimations} from '../datepicker-animations';\nimport {CalendarComponent} from '../calendar/calendar.component';\nimport {DatepickerComponent} from '../datepicker.component';\n\n/**\n * Component used as the content for the datepicker popup. We use this instead of using\n * hcCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'hc-datepicker-content',\n    templateUrl: './datepicker-content.component.html',\n    // tslint:disable-next-line:no-host-metadata-property\n    host: {\n        class: 'hc-datepicker-content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [HcDatepickerAnimations.transformPanel, HcDatepickerAnimations.fadeInCalendar],\n    exportAs: 'hcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatepickerContentComponent implements AfterViewInit {\n    /** Reference to the internal calendar component. */\n    @ViewChild(CalendarComponent, {static: false})\n    _calendar: CalendarComponent;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: DatepickerComponent;\n\n    /** Whether the datepicker is above or below the input. */\n    _isAbove: boolean;\n\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n\n    /** Close the datepicker automatically on selection only if in date mode */\n    autoClose() {\n        if (this.datepicker.mode === 'date') {\n            this.datepicker.close();\n        }\n    }\n}\n","/** Coerces a data-bound value (typically a string) to a boolean. */\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import {\n    Component,\n    ViewEncapsulation,\n    Output,\n    EventEmitter,\n    Optional,\n    InjectionToken,\n    ElementRef,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    Input,\n    ComponentRef,\n    NgZone,\n    ViewContainerRef,\n    Inject\n} from '@angular/core';\nimport {D} from './datetime/date-formats';\nimport {DateAdapter} from './datetime/date-adapter';\nimport {createMissingDateImplError} from './datetime/datepicker-errors';\nimport {Subject, Subscription, merge} from 'rxjs';\nimport {ScrollStrategy, Overlay, ComponentType, OverlayRef, OverlayConfig, PositionStrategy} from '@angular/cdk/overlay';\nimport {coerceBooleanProperty} from './utils/boolean-property';\nimport {HcCalendarCellCssClasses} from './calendar-body/calendar-body.component';\nimport {DatepickerContentComponent} from './datepicker-content/datepicker-content.component';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {DatepickerInputDirective} from './datepicker-input/datepicker-input.directive';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DOCUMENT} from '@angular/common';\nimport {take, filter} from 'rxjs/operators';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\n\n// tslint:disable:no-output-rename\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const HC_DATEPICKER_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>('hc-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function HC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const HC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: HC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: HC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to hcDatepickerContent.\n/** @docs-private */\nexport class HcDatepickerContentBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\n/** Component responsible for managing the datepicker popup */\n@Component({\n    selector: 'hc-datepicker',\n    template: '',\n    exportAs: 'hcDatepicker',\n    styleUrls: ['datepicker.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DatepickerComponent implements OnDestroy {\n    private _scrollStrategy: () => ScrollStrategy;\n\n    /**\n     * Whether the datepicker includes the calendar, time selector, or both. Defaults to `date`.\n     */\n    @Input()\n    get mode(): 'date' | 'time' | 'date-time' {\n        return this._mode;\n    }\n    set mode( value: 'date' | 'time' | 'date-time' ) {\n        this._mode = value;\n        if ( this._selected ) {\n            this._selectedChanged.next(this._selected);\n        }\n    }\n    private _mode: 'date' | 'time' | 'date-time' = 'date';\n\n    /**\n     * Whether the time picker uses a 12 or 24 hour clock. Defaults to 12.\n     */\n    @Input()\n    get hourCycle(): string | number {\n        return this._hourCycle;\n    }\n    set hourCycle( value: string | number ) {\n        if ( +value !== this._hourCycle) {\n            this._hourCycle = +value;\n            if ( this._selected ) {\n                this._selectedChanged.next(this._selected);\n            }\n        }\n    }\n    private _hourCycle: number = 12;\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input()\n    calendarHeaderComponent: ComponentType<any>;\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    set startAt(value: D | null) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _startAt: D | null;\n\n    /** The view that the calendar should start in. */\n    @Input()\n    startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * @deprecated\n     * @description The datepicker now only uses `hcPop` to display\n     * */\n    @Input()\n    get touchUi(): boolean {\n        return this._touchUi;\n    }\n    set touchUi(value: boolean) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    private _touchUi = false;\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this._datepickerInput ? this._datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    private _disabled: boolean;\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output()\n    readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output()\n    readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input()\n    panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input()\n    dateClass: (date: D) => HcCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened')\n    openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed')\n    closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n    set opened(value: boolean) {\n        value ? this.open() : this.close();\n    }\n    private _opened = false;\n\n    /** The id for the datepicker calendar. */\n    id: string = `hc-datepicker-${datepickerUid++}`;\n\n    /** The currently selected date. */\n    get _selected(): D | null {\n        return this._validSelected;\n    }\n    set _selected(value: D | null) {\n        this._validSelected = value;\n    }\n    private _validSelected: D | null = null;\n\n    /** The minimum selectable date. */\n    get _minDate(): D | null {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get _maxDate(): D | null {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n\n    get _dateFilter(): (date: D | null) => boolean {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    _popupRef: OverlayRef;\n\n    /** A portal containing the calendar for this datepicker. */\n    private _calendarPortal: ComponentPortal<DatepickerContentComponent>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private _popupComponentRef: ComponentRef<DatepickerContentComponent> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private _inputSubscription = Subscription.EMPTY;\n\n    /** The input element this datepicker is associated with. */\n    _datepickerInput: DatepickerInputDirective;\n\n    /** Emits when the datepicker is disabled. */\n    readonly _disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly _selectedChanged = new Subject<D>();\n\n    constructor(\n        private _overlay: Overlay,\n        private _ngZone: NgZone,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(HC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n        @Optional() private _dateAdapter: DateAdapter<D>,\n        @Optional() private _dir: Directionality,\n        @Optional()\n        @Inject(DOCUMENT)\n        private _document: any\n    ) {\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    _registerInput(input: DatepickerInputDirective): void {\n        if (this._datepickerInput) {\n            throw Error('A hcDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription = this._datepickerInput._valueChange.subscribe((value: D | null) => (this._selected = value));\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an hcDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n\n        this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private _openAsPopup(): void {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal<DatepickerContentComponent>(DatepickerContentComponent, this._viewContainerRef);\n        }\n\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                    this._popupRef.updatePosition();\n                });\n        }\n    }\n\n    /** Create the popup. */\n    private _createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'hc-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'hc-datepicker-popup'\n        });\n\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this._popupRef.backdropClick(),\n            this._popupRef.detachments(),\n            this._popupRef.keydownEvents().pipe(\n                filter(event => {\n                    // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                    return event.keyCode === ESCAPE || (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n                })\n            )\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private _createPopupPositionStrategy(): PositionStrategy {\n        return this._overlay\n            .position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.hc-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                    // hc form field wrapper bottom margin\n                    offsetY: -20\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'center'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom',\n                    offsetY: 60\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private _getValidDateOrNull(obj: any): D | null {\n        return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n/** Single error to be shown under HcFormFieldComponent */\n@Component({\n    selector: 'hc-error',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcErrorComponent {\n    @HostBinding('class.hc-error')\n    _hostClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Position an element at the front of HcFormFieldComponent */\n@Directive({\n    selector: '[hcPrefix]'\n})\nexport class HcPrefixDirective {\n    @HostBinding('class.hc-prefix')\n    _hostHcPrefixClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Position an element at the end of HcFormFieldComponent */\n@Directive({\n    selector: '[hcSuffix]'\n})\nexport class HcSuffixDirective {\n    @HostBinding('class.hc-suffix')\n    _hostHcSuffixClass = true;\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n/** Label for HcFormFieldComponent */\n@Component({\n    selector: 'hc-label',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcLabelComponent {}\n","import {Directive, DoCheck, ElementRef, HostBinding, HostListener, Input, Optional, Self, forwardRef} from '@angular/core';\nimport {parseBooleanAttribute} from '../util';\nimport {HcFormControlComponent} from '../form-field/hc-form-control.component';\nimport {FormGroupDirective, NgControl, NgForm} from '@angular/forms';\n\nexport function getUnsupportedHCInputType(type: string): Error {\n    return new Error(`hc-input doesn't support the following type: ${type}`);\n}\n\nlet uniqueId = 1;\n\nconst unsupportedTypes = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'reset'];\n\n/** Directive that allows a native input to work inside a HcFormFieldComponent */\n@Directive({\n    selector: '[hcInput]',\n    providers: [{provide: HcFormControlComponent, useExisting: forwardRef(() => InputDirective)}]\n})\nexport class InputDirective extends HcFormControlComponent implements DoCheck {\n    private _focused = false;\n    private _uniqueInputId = `hc-input-${uniqueId++}`;\n    private _form: NgForm | FormGroupDirective | null;\n\n    _componentId = this._uniqueInputId;\n\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(type: string) {\n        if (unsupportedTypes.indexOf(type) > -1) {\n            throw getUnsupportedHCInputType(type);\n        }\n        this._type = type;\n\n        // textArea doesn't have type property\n        if (!this._isTextArea()) {\n            this._elementRef.nativeElement.type = this.type;\n        }\n    }\n\n    private _type = 'input';\n\n    /** Element id. */\n    @Input()\n    get id(): string {\n        return this._componentId || this._uniqueInputId;\n    }\n\n    set id(idVal: string) {\n        this._componentId = idVal ? idVal : this._uniqueInputId;\n    }\n\n    /** Sets input element as readonly. */\n    @Input()\n    get readonly(): boolean {\n        return this._readonly;\n    }\n\n    set readonly(isReadOnly) {\n        this._readonly = parseBooleanAttribute(isReadOnly);\n    }\n\n    private _readonly = false;\n\n    /** Disables the input element. */\n    @Input()\n    get disabled(): boolean {\n        if (this._ngControl && this._ngControl.disabled) {\n            return this._ngControl.disabled;\n        }\n        return this._isDisabled;\n    }\n\n    set disabled(disabledInput) {\n        this._isDisabled = parseBooleanAttribute(disabledInput);\n\n        if (this._focused) {\n            this._focused = false;\n            // TODO: trigger state change\n        }\n    }\n\n    /** Sets required attribute. */\n    @Input()\n    get required(): boolean {\n        return this._isRequired;\n    }\n\n    set required(requiredInput) {\n        this._isRequired = parseBooleanAttribute(requiredInput);\n    }\n\n    @HostBinding('class.hc-input')\n    _hostHcInputClass = true;\n\n    @HostBinding('attr.id')\n    get _hostId(): string {\n        return this._componentId || this._uniqueInputId;\n    }\n\n    @HostBinding('readonly')\n    get _hostReadOnly(): boolean {\n        return this.readonly;\n    }\n\n    @HostBinding('disabled')\n    get _hostDisabled(): boolean {\n        return this.disabled;\n    }\n\n    @HostBinding('required')\n    get _hostRequired(): boolean {\n        return this._isRequired;\n    }\n\n    @HostListener('blur')\n    _onBlur() {\n        this._changeFocus(false);\n    }\n\n    @HostListener('focus')\n    _onFocus() {\n        this._changeFocus(true);\n    }\n\n    /** Sets value of the input element */\n    @Input()\n    get value(): string {\n        return this._elementRef.nativeElement.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._elementRef.nativeElement.value = value;\n        }\n    }\n\n    @HostListener('input')\n    _inputEvent() {\n        // causes angular to run change detection on input event\n    }\n\n    constructor(\n        private _elementRef: ElementRef,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional()\n        @Self()\n        public _ngControl: NgControl\n    ) {\n        super();\n\n        this._form = _parentForm || _parentFormGroup;\n    }\n\n    ngDoCheck(): void {\n        // This needs to be checked every cycle because we can't subscribe to form submissions\n        if (this._ngControl) {\n            this._updateErrorState();\n        }\n    }\n\n    /** Sets the focus on the input element */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    private _changeFocus(focused: boolean) {\n        if (this._focused !== focused && !this.readonly) {\n            this._focused = focused;\n            // TODO: trigger state change\n        }\n    }\n\n    private _isTextArea(): boolean {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() !== 'textarea';\n    }\n\n    private _updateErrorState() {\n        const oldState = this._errorState;\n\n        // TODO: this could be abstracted out as an @Input() if we need this to be configurable\n        const newState = !!(\n            this._ngControl &&\n            this._ngControl.invalid &&\n            (this._ngControl.touched || (this._form && this._form.submitted))\n        );\n\n        if (oldState !== newState) {\n            this._errorState = newState;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ContentChildren,\n    HostBinding,\n    QueryList,\n    ViewEncapsulation,\n    Input,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport {HcFormControlComponent} from './hc-form-control.component';\nimport {HcErrorComponent} from './hc-error.component';\nimport {HcPrefixDirective} from './hc-prefix.directive';\nimport {HcSuffixDirective} from './hc-suffix.directive';\nimport {HcLabelComponent} from './hc-label.component';\nimport {parseBooleanAttribute} from '../util';\nimport {InputDirective} from '../input/input.directive';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\n\nexport function getControlMissing(): Error {\n    return new Error(`HcFormField must contain a component that extends HcFormControl`);\n}\n\n/** Container for form fields that applies Cashmere styling and behavior */\n@Component({\n    selector: 'hc-form-field',\n    templateUrl: './hc-form-field.component.html',\n    styleUrls: ['./hc-form-field.component.scss', '../input/input.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcFormFieldComponent implements AfterContentInit, OnDestroy {\n    private _inline: boolean = false;\n    private _tight: boolean = false;\n    private unsubscribe$ = new Subject<void>();\n\n    @ContentChild(HcFormControlComponent, {static: false})\n    _control: HcFormControlComponent;\n    @ContentChildren(HcFormControlComponent)\n    _controls: QueryList<HcFormControlComponent>;\n    @ContentChildren(HcErrorComponent)\n    _errorChildren: QueryList<HcErrorComponent>;\n    @ContentChildren(HcPrefixDirective)\n    _prefixChildren: QueryList<HcPrefixDirective>;\n    @ContentChildren(HcSuffixDirective)\n    _suffixChildren: QueryList<HcSuffixDirective>;\n    @ContentChildren(InputDirective)\n    _inputChildren: QueryList<InputDirective>;\n    @ContentChildren(HcLabelComponent)\n    _labelChildren: QueryList<HcLabelComponent>;\n\n    @HostBinding('class.hc-form-field')\n    _classHcFormFieldClass = true;\n\n    @HostBinding('class.hc-form-field-disabled')\n    get _disabledClass() {\n        if (this._inputChildren.length > 0) {\n            return this._inputChildren.first.disabled;\n        } else {\n            return this._control._isDisabled;\n        }\n    }\n\n    /** Read-only boolean value of whether the form field has an associated label element */\n    get hasLabel(): boolean {\n        return !!this._labelChildren.length;\n    }\n\n    /** Read-only boolean value of whether the form field has an input element */\n    get hasInput(): boolean {\n        return !!this._inputChildren.length;\n    }\n\n    /** Whether the form elements should be stacked (default), or inline */\n    @Input()\n    get inline(): boolean {\n        return this._inline;\n    }\n\n    set inline(isInline) {\n        this._inline = parseBooleanAttribute(isInline);\n    }\n\n    /** If true, condense the default padding on all included elements and reduce the font size. *Defaults to `false`.*  */\n    @Input()\n    get tight(): boolean {\n        return this._tight;\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n        this._updateTightControls();\n    }\n\n    constructor(private _elementRef: ElementRef<HTMLInputElement>) {}\n\n    ngAfterContentInit(): void {\n        if (!this._control) {\n            throw getControlMissing();\n        } else {\n            this._updateTightControls();\n            // Pass the current tight setting to controls that are added dynamically to the FormField\n            this._controls.changes.pipe(takeUntil(this.unsubscribe$)).subscribe(() => this._updateTightControls());\n        }\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n\n    _updateTightControls() {\n        if (this._controls) {\n            this._controls.forEach(control => {\n                control.tight = this._tight;\n            });\n        }\n    }\n\n    getConnectedOverlayOrigin(): ElementRef {\n        return this._elementRef;\n    }\n\n    _shouldShowErrorMessages(): boolean {\n        return (\n            this._control._errorState &&\n            ((this._errorChildren && this._errorChildren.length > 0) ||\n                (!!this._control._errorMessage && this._control._errorMessage.length > 0))\n        );\n    }\n}\n","import {forwardRef, Directive, ElementRef, Optional, Inject, Input, EventEmitter, Output, OnDestroy} from '@angular/core';\nimport {\n    NG_VALUE_ACCESSOR,\n    NG_VALIDATORS,\n    Validator,\n    ValidatorFn,\n    ValidationErrors,\n    AbstractControl,\n    ControlValueAccessor,\n    Validators\n} from '@angular/forms';\nimport {createMissingDateImplError} from '../datetime/datepicker-errors';\nimport {DatepickerComponent} from '../datepicker.component';\nimport {coerceBooleanProperty} from '../utils/boolean-property';\nimport {Subscription} from 'rxjs';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {D, HC_DATE_FORMATS, HcDateFormats} from '../datetime/date-formats';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {HcFormControlComponent} from '../../form-field/hc-form-control.component';\nimport {HcFormFieldComponent} from '../../form-field/hc-form-field.component';\n\n// tslint:disable:no-host-metadata-property\n// tslint:disable:member-ordering\n\n/** @docs-private */\nexport const HC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatepickerInputDirective),\n    multi: true\n};\n\n/** @docs-private */\nexport const HC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => DatepickerInputDirective),\n    multi: true\n};\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use hcDatepickerInputEvent instead.\n */\nexport class HcDatepickerInputEvent {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: DatepickerInputDirective,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement\n    ) {\n        this.value = this.target.value;\n    }\n}\n\n@Directive({\n    selector: 'input[hcDatepicker]',\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)'\n    },\n    providers: [\n        HC_DATEPICKER_VALUE_ACCESSOR,\n        HC_DATEPICKER_VALIDATORS,\n        {provide: HcFormControlComponent, useExisting: forwardRef(() => DatepickerInputDirective)}\n    ]\n})\nexport class DatepickerInputDirective implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set hcDatepicker(value: DatepickerComponent) {\n        if (!value) {\n            return;\n        }\n\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected: D) => {\n            this.setDate(selected);\n        });\n    }\n    _datepicker: DatepickerComponent;\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set hcDatepickerFilter(value: (date: D | null) => boolean) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    _dateFilter: (date: D | null) => boolean;\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n    set value(value: D | null) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    private _value: D | null;\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n    set min(value: D | null) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    private _min: D | null;\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n    set max(value: D | null) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    private _max: D | null;\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    private _disabled: boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output()\n    readonly dateChange: EventEmitter<HcDatepickerInputEvent> = new EventEmitter<HcDatepickerInputEvent>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output()\n    readonly dateInput: EventEmitter<HcDatepickerInputEvent> = new EventEmitter<HcDatepickerInputEvent>();\n\n    /** Stores the mode & hourCycle for the inputs of the date range (which don't have a DatePickerComponent) */\n    @Input() _mode: string;\n    @Input() _hourCycle: number;\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    _valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    _disabledChange = new EventEmitter<boolean>();\n\n    _onTouched = () => {};\n\n    private _cvaOnChange: (value: any) => void = () => {};\n\n    private _validatorOnChange = () => {};\n\n    private _datepickerSubscription = Subscription.EMPTY;\n\n    private _localeSubscription = Subscription.EMPTY;\n\n    /** The form control validator for whether the input parses. */\n    private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this._lastValueValid ? null : {hcDatepickerParse: {text: this._elementRef.nativeElement.value}};\n    };\n\n    /** The form control validator for the min date. */\n    private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        return !this.min || !controlValue || this._dateAdapter.compareDate(this.min, controlValue) <= 0\n            ? null\n            : {hcDatepickerMin: {min: this.min, actual: controlValue}};\n    };\n\n    /** The form control validator for the max date. */\n    private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        return !this.max || !controlValue || this._dateAdapter.compareDate(this.max, controlValue) >= 0\n            ? null\n            : {hcDatepickerMax: {max: this.max, actual: controlValue}};\n    };\n\n    /** The form control validator for the date filter. */\n    private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ? null : {hcDatepickerFilter: true};\n    };\n\n    /** The combined form control validator for this input. */\n    private _validator: ValidatorFn | null = Validators.compose([\n        this._parseValidator,\n        this._minValidator,\n        this._maxValidator,\n        this._filterValidator\n    ]);\n\n    /** Whether the last value set on the input was valid. */\n    private _lastValueValid = false;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public _dateAdapter: DateAdapter<D>,\n        @Optional()\n        @Inject(HC_DATE_FORMATS)\n        private _dateFormats: HcDateFormats,\n        @Optional() private _formField: HcFormFieldComponent\n    ) {\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('HC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this._validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this._validator ? this._validator(c) : null;\n    }\n\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin(): ElementRef {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n\n    /** Sets the focus on the input element */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    // Set the date programmatically\n    setDate(selected: D) {\n        this.value = selected;\n        this._cvaOnChange(selected);\n        this._onTouched();\n        this.dateInput.emit(new HcDatepickerInputEvent(this, this._elementRef.nativeElement));\n        this.dateChange.emit(new HcDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n\n    _onKeydown(event: KeyboardEvent) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    _onInput(value: string) {\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        /** Two-digit year input conversion method for IE\n         * Based on the current year, assume that the four-digit year date should be in\n         * either the next 30 years, or the preceding 70 years */\n        if (date) {\n            let inputString: string = this._elementRef.nativeElement.value;\n            /** Skip this check if the input string contains any 3+ digit numerical values - assumed to be a year */\n            if (!inputString.match(/[1-9][0-9][0-9]/g)) {\n                let currentDate = new Date();\n                if (date.getFullYear() >= currentDate.getFullYear() + 30) {\n                    date.setFullYear(date.getFullYear() - 100);\n                } else if (date.getFullYear() < currentDate.getFullYear() - 70) {\n                    date.setFullYear(date.getFullYear() + 100);\n                }\n            }\n        }\n\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new HcDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n    }\n\n    _onChange() {\n        this.dateChange.emit(new HcDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value || this._elementRef.nativeElement.value) {\n            this._formatValue(this.value);\n        }\n\n        this._onTouched();\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private _formatValue(value: D | null) {\n        let dateFormat: any = this._dateFormats.display.dateInput;\n        let tempMode: string = 'date';\n        let tempCycle: number = 12;\n\n        if (this._datepicker) {\n            tempMode = this._datepicker.mode;\n            tempCycle = +this._datepicker.hourCycle;\n        } else if (this._mode) {\n            tempMode = this._mode;\n            if (this._hourCycle) {\n                tempCycle = this._hourCycle;\n            }\n        }\n\n        if (tempMode === 'time') {\n            let tempFormat = this._dateFormats.display.timeInput;\n            tempFormat['hour12'] = tempCycle === 12;\n            dateFormat = tempFormat;\n        } else if (tempMode === 'date-time') {\n            let tempFormat = this._dateFormats.display.dateTimeInput;\n            tempFormat['hour12'] = tempCycle === 12;\n            dateFormat = tempFormat;\n        }\n        this._elementRef.nativeElement.value = value ? this._dateAdapter.format(value, dateFormat) : '';\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private _getValidDateOrNull(obj: any): D | null {\n        return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n    }\n}\n","import {\n    Component,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    ViewChild,\n    OnDestroy,\n    Directive,\n    AfterContentInit,\n    OnChanges,\n    ContentChild,\n    Attribute,\n    SimpleChanges\n} from '@angular/core';\nimport {merge, Subscription, of as observableOf} from 'rxjs';\nimport {coerceBooleanProperty} from '../utils/boolean-property';\nimport {HcDatepickerIntl} from '../datepicker-intl';\nimport {DatepickerComponent} from '../datepicker.component';\nimport {ButtonComponent} from '../../button/button.component';\n\n/** Can be used to override the icon of a `hcDatepickerToggle`. */\n@Directive({\n    selector: '[hcDatepickerToggleIcon]'\n})\nexport class DatepickerToggleIconDirective {}\n\n@Component({\n    selector: 'hc-datepicker-toggle',\n    templateUrl: './datepicker-toggle.component.html',\n    styleUrls: ['./datepicker-toggle.component.scss'],\n    // tslint:disable-next-line:no-host-metadata-property\n    host: {\n        class: 'hc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.hc-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n        '(focus)': '_button.focus()'\n    },\n    exportAs: 'hcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatepickerToggleComponent implements AfterContentInit, OnChanges, OnDestroy {\n    private _stateChanges = Subscription.EMPTY;\n\n    /** Datepicker instance that the button will toggle. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('for')\n    datepicker: DatepickerComponent;\n\n    /** Tabindex for the toggle. */\n    @Input()\n    tabIndex: number | null;\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(DatepickerToggleIconDirective, {static: false})\n    _customIcon: DatepickerToggleIconDirective;\n\n    /** Underlying button element. */\n    @ViewChild('button', {static: false})\n    _button: ButtonComponent;\n\n    constructor(\n        public _intl: HcDatepickerIntl,\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this._watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n\n    _open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private _watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n        const inputDisabled =\n            this.datepicker && this.datepicker._datepickerInput ? this.datepicker._datepickerInput._disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : observableOf();\n\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe(() =>\n            this._changeDetectorRef.markForCheck()\n        );\n    }\n}\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, HC_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    long: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n/** First day of week according locale.\n * Taken form moment.js source code https://github.com/moment/moment/tree/develop/src/locale\n */\nconst FIRST_DAY_OF_WEEK = {\n    af: 1,\n    ar: 6,\n    'ar-ly': 6,\n    'ar-ma': 6,\n    'ar-tn': 1,\n    az: 1,\n    be: 1,\n    bg: 1,\n    bm: 1,\n    br: 1,\n    bs: 1,\n    ca: 1,\n    cs: 1,\n    cv: 1,\n    cy: 1,\n    da: 1,\n    de: 1,\n    'de-at': 1,\n    'de-ch': 1,\n    el: 1,\n    'en-au': 1,\n    'en-gb': 1,\n    'en-ie': 1,\n    'en-nz': 1,\n    eo: 1,\n    es: 1,\n    'es-do': 1,\n    et: 1,\n    eu: 1,\n    fa: 6,\n    fi: 1,\n    fo: 1,\n    fr: 1,\n    'fr-ch': 1,\n    fy: 1,\n    gd: 1,\n    gl: 1,\n    'gom-latn': 1,\n    hr: 1,\n    hu: 1,\n    'hy-am': 1,\n    id: 1,\n    is: 1,\n    it: 1,\n    jv: 1,\n    ka: 1,\n    kk: 1,\n    km: 1,\n    ky: 1,\n    lb: 1,\n    lt: 1,\n    lv: 1,\n    me: 1,\n    mi: 1,\n    mk: 1,\n    ms: 1,\n    'ms-my': 1,\n    mt: 1,\n    my: 1,\n    nb: 1,\n    nl: 1,\n    'nl-be': 1,\n    nn: 1,\n    pl: 1,\n    pt: 1,\n    'pt-BR': 0,\n    ro: 1,\n    ru: 1,\n    sd: 1,\n    se: 1,\n    sk: 1,\n    sl: 1,\n    sq: 1,\n    sr: 1,\n    'sr-cyrl': 1,\n    ss: 1,\n    sv: 1,\n    sw: 1,\n    tet: 1,\n    tg: 1,\n    'tl-ph': 1,\n    tlh: 1,\n    tr: 1,\n    tzl: 1,\n    tzm: 6,\n    'tzm-latn': 6,\n    'ug-cn': 1,\n    uk: 1,\n    ur: 1,\n    uz: 1,\n    'uz-latn': 1,\n    vi: 1,\n    'x-pseudo': 1,\n    yo: 1,\n    'zh-cn': 1\n};\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n    /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n    private readonly _clampDate: boolean;\n\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from it's utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n    useUtcForDisplay: boolean = true;\n\n    constructor(\n        @Optional()\n        @Inject(HC_DATE_LOCALE)\n        hcDateLocale: string,\n        platform: Platform\n    ) {\n        super();\n        super.setLocale(hcDateLocale);\n\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n\n    getYear(date: Date): number {\n        return date.getFullYear();\n    }\n\n    getMonth(date: Date): number {\n        return date.getMonth();\n    }\n\n    getDate(date: Date): number {\n        return date.getDate();\n    }\n\n    getHours(date: Date): number {\n        return date.getHours();\n    }\n\n    getMinutes(date: Date): number {\n        return date.getMinutes();\n    }\n\n    getDayOfWeek(date: Date): number {\n        return date.getDay();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n\n    getDateNames(): string[] {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n\n    getYearName(date: Date): string {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n\n    getFirstDayOfWeek(): number {\n        // We can't tell using native JS Date what the first day of the week is.\n        // Sometimes people use excess language definition, e.g. ru-RU,\n        // so we use fallback to two-letter language code\n        const locale = this.locale.toLowerCase();\n        return FIRST_DAY_OF_WEEK[locale] || FIRST_DAY_OF_WEEK[locale.substr(0, 2)] || 0;\n    }\n\n    getNumDaysInMonth(date: Date): number {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n\n    clone(date: Date): Date {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    }\n\n    createDate(year: number, month: number, date: number): Date {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n\n        const result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() !== month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n\n        return result;\n    }\n\n    today(): Date {\n        return new Date();\n    }\n\n    parse(value: any): Date | null {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value === 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n\n    format(date: Date, displayFormat: Object): string {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n\n            displayFormat = {...displayFormat, timeZone: 'utc'};\n\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n\n    addCalendarYears(date: Date, years: number): Date {\n        return this.addCalendarMonths(date, years * 12);\n    }\n\n    addCalendarMonths(date: Date, months: number): Date {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) !== (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n\n        return newDate;\n    }\n\n    addCalendarDays(date: Date, days: number): Date {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n\n    toIso8601(date: Date): string {\n        return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value: any): Date | null {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                const date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n\n    isDateInstance(obj: any) {\n        return obj instanceof Date;\n    }\n\n    isValid(date: Date) {\n        return !isNaN(date.getTime());\n    }\n\n    invalid(): Date {\n        return new Date(NaN);\n    }\n\n    /** Creates a date but allows the month and date to overflow. */\n    private _createDateWithOverflow(year: number, month: number, date: number) {\n        const result = new Date(year, month, date);\n\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    private _2digit(n: number) {\n        return ('00' + n).slice(-2);\n    }\n\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n    private _stripDirectionalityCharacters(str: string) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    private _format(dtf: Intl.DateTimeFormat, date: Date) {\n        const d = new Date(\n            Date.UTC(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds(),\n                date.getMilliseconds()\n            )\n        );\n        return dtf.format(d);\n    }\n}\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\n\nimport {HcDateFormats} from './date-formats';\n\nexport const HC_NATIVE_DATE_FORMATS: HcDateFormats = {\n    parse: {\n        dateInput: null\n    },\n    display: {\n        dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n        timeInput: {hour: 'numeric', minute: '2-digit', hour12: true},\n        dateTimeInput: {year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true},\n        monthYearLabel: {year: 'numeric', month: 'short'},\n        dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n        monthYearA11yLabel: {year: 'numeric', month: 'long'}\n    }\n};\n","/**\n * @license\n * Copyright Health Catalyst All Rights Reserved.\n *\n * Use of this source code is governed by an Apache-2.0 license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/HealthCatalyst/Fabric.Cashmere/dev/LICENSE\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {HC_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {HC_NATIVE_DATE_FORMATS} from './native-date-formats';\n\n@NgModule({\n    imports: [PlatformModule],\n    providers: [{provide: DateAdapter, useClass: NativeDateAdapter}]\n})\nexport class NativeDateModule {}\n\n@NgModule({\n    imports: [NativeDateModule],\n    providers: [{provide: HC_DATE_FORMATS, useValue: HC_NATIVE_DATE_FORMATS}]\n})\nexport class HcNativeDateModule {}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n/** Container for additional label content for HcFormFieldComponent */\n@Component({\n    selector: 'hc-label-ext',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcLabelExtensionComponent {\n    @HostBinding('class.hc-form-field-label-extension')\n    _hostHcLabelClass = true;\n}\n","import {Directive, Input, ContentChildren, QueryList, AfterContentInit, OnDestroy} from '@angular/core';\nimport {parseBooleanAttribute} from '../util';\nimport {HcFormFieldComponent} from './hc-form-field.component';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\n\n/** `hcForm` directive that allows settings to be applied to all included HcFormFields */\n@Directive({\n    selector: '[hcForm]'\n})\nexport class HcFormDirective implements AfterContentInit, OnDestroy {\n    private _tight: boolean = false;\n    private unsubscribe$ = new Subject<void>();\n\n    @ContentChildren(HcFormFieldComponent)\n    _formFields: QueryList<HcFormFieldComponent>;\n\n    /** Set the tight parameter on all enclosed HcFormFields. *Defaults to `false`.*  */\n    @Input()\n    get tight(): boolean {\n        return this._tight;\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n        this._updateTightFields();\n    }\n\n    ngAfterContentInit(): void {\n        this._updateTightFields();\n        // Pass the tight setting to any FormFields added dynamically\n        this._formFields.changes.pipe(takeUntil(this.unsubscribe$)).subscribe(() => this._updateTightFields());\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n\n    _updateTightFields() {\n        if (this._formFields) {\n            this._formFields.forEach(field => {\n                field.tight = this._tight;\n            });\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {HcFormFieldComponent} from './hc-form-field.component';\nimport {CommonModule} from '@angular/common';\nimport {HcErrorComponent} from './hc-error.component';\nimport {HcSuffixDirective} from './hc-suffix.directive';\nimport {HcPrefixDirective} from './hc-prefix.directive';\nimport {HcLabelComponent} from './hc-label.component';\nimport {HcLabelExtensionComponent} from './hc-label-ext.component';\nimport {HcFormDirective} from './hc-form.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        HcFormFieldComponent,\n        HcErrorComponent,\n        HcPrefixDirective,\n        HcSuffixDirective,\n        HcLabelComponent,\n        HcLabelExtensionComponent,\n        HcFormDirective\n    ],\n    exports: [\n        HcFormFieldComponent,\n        HcErrorComponent,\n        HcPrefixDirective,\n        HcSuffixDirective,\n        HcLabelComponent,\n        HcLabelExtensionComponent,\n        HcFormDirective\n    ]\n})\nexport class FormFieldModule {}\n","import {NgModule} from '@angular/core';\nimport {InputDirective} from './input.directive';\nimport {FormFieldModule} from '../form-field/hc-form-field.module';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    imports: [CommonModule, FormFieldModule],\n    declarations: [InputDirective],\n    exports: [InputDirective]\n})\nexport class InputModule {}\n","/* tslint:disable:directive-selector */\n\nimport {Directive, Input} from '@angular/core';\n\n/** Utility directive to hold objects used in ngValue */\n@Directive({\n    selector: 'option[ngValue]'\n})\nexport class HcOptionDirective {\n    /** Stores the content of ngValue, including objects */\n    @Input()\n    ngValue: any;\n}\n","import {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    ViewEncapsulation,\n    ElementRef,\n    Optional,\n    DoCheck,\n    Self,\n    Output,\n    EventEmitter,\n    ContentChildren,\n    QueryList,\n    ViewChild,\n    AfterContentInit\n} from '@angular/core';\nimport {ControlValueAccessor, NgForm, FormGroupDirective, NgControl} from '@angular/forms';\nimport {HcFormControlComponent} from '../form-field/hc-form-control.component';\nimport {parseBooleanAttribute} from '../util';\nimport {HcOptionDirective} from './hc-option.directive';\n\nlet uniqueId = 1;\n\nexport class SelectChangeEvent {\n    constructor(public source: SelectComponent, public value: any) {}\n}\n\n/** Select one of many options from a dropdown */\n@Component({\n    selector: 'hc-select',\n    templateUrl: 'select.component.html',\n    styleUrls: ['select.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [{provide: HcFormControlComponent, useExisting: forwardRef(() => SelectComponent)}]\n})\nexport class SelectComponent extends HcFormControlComponent implements ControlValueAccessor, AfterContentInit, DoCheck {\n    private _uniqueInputId = `hc-select-${uniqueId++}`;\n    private _form: NgForm | FormGroupDirective | null;\n    private _tight: boolean = false;\n    private _value: any = '';\n    private _valueData: any;\n\n    _componentId = this._uniqueInputId;\n\n    @ContentChildren(HcOptionDirective)\n    _options: QueryList<HcOptionDirective>;\n\n    @ViewChild('selectInput', {static: false})\n    _nativeSelect: ElementRef;\n\n    /** Optional string of text to appear before selection is made */\n    @Input()\n    placeholder: string;\n\n    /** Enables or disables the component */\n    @Input()\n    get disabled(): boolean {\n        if (this._ngControl && this._ngControl.disabled) {\n            return this._ngControl.disabled;\n        }\n        return this._isDisabled;\n    }\n\n    set disabled(disabledVal) {\n        this._isDisabled = parseBooleanAttribute(disabledVal);\n    }\n\n    /** Sets whether this is a required form element */\n    @Input()\n    get required(): boolean {\n        return this._isRequired;\n    }\n\n    set required(requiredVal) {\n        this._isRequired = parseBooleanAttribute(requiredVal);\n    }\n\n    /** Element id. */\n    @Input()\n    get id(): string {\n        return this._componentId || this._uniqueInputId;\n    }\n\n    set id(idVal: string) {\n        this._componentId = idVal ? idVal : this._uniqueInputId;\n    }\n\n    /** Get or set the value of the select component */\n    @Input()\n    get value() {\n        return this._value;\n    }\n\n    set value(val: any) {\n        if (val !== this._value) {\n            this._value = val;\n            this.onChange(val);\n        }\n    }\n\n    /** If true, condense the default margin and reduce the font size. *Defaults to `false`.*  */\n    @Input()\n    get tight(): boolean {\n        return this._tight;\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n    }\n\n    @Output()\n    readonly focus: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly blur: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted whenever the state changes */\n    @Output()\n    change = new EventEmitter<SelectChangeEvent>();\n\n    @HostBinding('class.hc-select')\n    _hostClass = true;\n\n    @HostBinding('class.hc-select-disabled')\n    get _disabledClass() {\n        if (this._ngControl && this._ngControl.disabled) {\n            return this._ngControl.disabled;\n        }\n        return this._isDisabled;\n    }\n\n    constructor(\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional()\n        @Self()\n        public _ngControl: NgControl\n    ) {\n        super();\n\n        this._form = _parentForm || _parentFormGroup;\n        if (this._ngControl != null) {\n            this._ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this._valueData) {\n            setTimeout(() => {\n                this.writeValue(this._valueData);\n            });\n        }\n    }\n\n    private onChange: (val: any) => void = () => {};\n\n    private onTouched: (val: any) => void = () => {};\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value: any) {\n        this._valueData = value;\n        let targetVal = value;\n        // If ngValue is being used, set the currently selected value based on that data\n        if (this._options && this._options.length !== 0) {\n            let selectedIndex: number = 0;\n            this._options.forEach((option, index) => {\n                if (option.ngValue === value) {\n                    selectedIndex = index;\n                }\n            });\n            if (this.placeholder) {\n                selectedIndex += 1;\n            }\n            targetVal = this._nativeSelect.nativeElement.options[selectedIndex].value;\n        }\n        this._value = targetVal;\n    }\n\n    _change(event: Event, value: any) {\n        this._valueData = value;\n        // If ngValue is being used, pull that value from the directive to allow objects well as strings\n        if (this._options.length !== 0) {\n            const optionArray = this._options.toArray();\n            const index = this.placeholder\n                ? this._nativeSelect.nativeElement.selectedIndex - 1\n                : this._nativeSelect.nativeElement.selectedIndex;\n            this._valueData = optionArray[index].ngValue;\n        }\n\n        event.stopPropagation();\n        this._value = value;\n        this.onChange(this._valueData);\n        this.change.emit(new SelectChangeEvent(this, this._valueData));\n    }\n\n    ngDoCheck(): void {\n        // This needs to be checked every cycle because we can't subscribe to form submissions\n        if (this._ngControl) {\n            this._updateErrorState();\n        }\n    }\n\n    private _updateErrorState() {\n        const oldState = this._errorState;\n\n        // TODO: this could be abstracted out as an @Input() if we need this to be configurable\n        const newState = !!(\n            this._ngControl &&\n            this._ngControl.invalid &&\n            (this._ngControl.touched || (this._form && this._form.submitted))\n        );\n\n        if (oldState !== newState) {\n            this._errorState = newState;\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectComponent} from './select.component';\nimport {HcOptionDirective} from './hc-option.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [SelectComponent, HcOptionDirective],\n    declarations: [SelectComponent, HcOptionDirective]\n})\nexport class SelectModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CalendarComponent, CalendarHeaderComponent} from './calendar/calendar.component';\nimport {CalendarBodyComponent} from './calendar-body/calendar-body.component';\nimport {DatepickerComponent, HC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER} from './datepicker.component';\nimport {DatepickerContentComponent} from './datepicker-content/datepicker-content.component';\nimport {DatepickerToggleComponent, DatepickerToggleIconDirective} from './datepicker-toggle/datepicker-toggle.component';\nimport {MonthViewComponent} from './month-view/month-view.component';\nimport {YearViewComponent} from './year-view/year-view.component';\nimport {MultiYearViewComponent} from './multi-year-view/multi-year-view.component';\nimport {HcDatepickerIntl} from './datepicker-intl';\nimport {DatepickerInputDirective} from './datepicker-input/datepicker-input.directive';\nimport {ButtonModule} from '../button/button.module';\nimport {IconModule} from '../icon/icon.module';\nimport {InputModule} from '../input/input.module';\nimport {SelectModule} from '../select/select.module';\nimport {FormFieldModule} from '../form-field/hc-form-field.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ButtonModule,\n        IconModule,\n        InputModule,\n        FormFieldModule,\n        SelectModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule\n    ],\n    exports: [\n        CalendarComponent,\n        CalendarBodyComponent,\n        DatepickerComponent,\n        DatepickerContentComponent,\n        DatepickerInputDirective,\n        DatepickerToggleComponent,\n        DatepickerToggleIconDirective,\n        MonthViewComponent,\n        YearViewComponent,\n        MultiYearViewComponent,\n        CalendarHeaderComponent\n    ],\n    declarations: [\n        CalendarComponent,\n        CalendarBodyComponent,\n        DatepickerComponent,\n        DatepickerContentComponent,\n        DatepickerInputDirective,\n        DatepickerToggleComponent,\n        DatepickerToggleIconDirective,\n        MonthViewComponent,\n        YearViewComponent,\n        MultiYearViewComponent,\n        CalendarHeaderComponent\n    ],\n    providers: [HcDatepickerIntl, HC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [DatepickerContentComponent, CalendarHeaderComponent]\n})\nexport class DatepickerModule {}\n","import {Injectable} from '@angular/core';\nimport {DateRangeOptions, DateRange} from '../model/model';\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport {D} from '../../datepicker';\nimport {map, tap} from 'rxjs/operators';\n\n@Injectable()\nexport class ConfigStoreService {\n    private defaultOptions: DateRangeOptions = {\n        presets: [],\n        format: 'medium',\n        mode: 'date',\n        hourCycle: 12,\n        excludeWeekends: false,\n        locale: 'en-us',\n        applyLabel: 'Apply',\n        cancelLabel: 'Cancel',\n        startDatePrefix: 'Start date:',\n        endDatePrefix: 'End date:',\n        invalidDateLabel: 'Please enter valid date'\n    };\n\n    private dateRangeOptionsSubject: BehaviorSubject<DateRangeOptions> = new BehaviorSubject<DateRangeOptions>(this.defaultOptions);\n    public dateRangeOptions$: Observable<DateRangeOptions>;\n\n    private rangeUpdateSubject: BehaviorSubject<DateRange> = new BehaviorSubject<DateRange>({fromDate: undefined, toDate: undefined});\n    public rangeUpdate$: Observable<DateRange>;\n\n    private presetUpdateSubject: BehaviorSubject<number | DateRange> = new BehaviorSubject<number | DateRange>({\n        fromDate: undefined,\n        toDate: undefined\n    });\n    public presetUpdate$: Observable<number | DateRange>;\n\n    public weekendFilter: (d: D) => boolean = () => true;\n\n    private readonly emptyWeekendFilter = () => true;\n    private readonly excludeWeekendFilter = (d: Date): boolean => {\n        const day = d.getDay();\n        return day !== 0 && day !== 6;\n    };\n\n    constructor() {\n        this.dateRangeOptions$ = this.dateRangeOptionsSubject.pipe(\n            map((options: DateRangeOptions) => {\n                return {\n                    ...this.defaultOptions,\n                    ...options\n                };\n            }),\n            tap((options: DateRangeOptions) => {\n                if (!!options.excludeWeekends) {\n                    this.weekendFilter = this.excludeWeekendFilter;\n                } else {\n                    this.weekendFilter = this.emptyWeekendFilter;\n                }\n            })\n        );\n\n        this.rangeUpdate$ = this.rangeUpdateSubject.pipe();\n        this.presetUpdate$ = this.presetUpdateSubject.pipe();\n    }\n\n    updateDateRangeOptions(options: DateRangeOptions) {\n        this.dateRangeOptionsSubject.next(options);\n    }\n\n    updateRange(dateRange: DateRange) {\n        this.rangeUpdateSubject.next(dateRange);\n    }\n\n    updatePreset(value: number | DateRange) {\n        this.presetUpdateSubject.next(value);\n    }\n}\n","import {\n    Component,\n    ViewChild,\n    Input,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    Output,\n    EventEmitter,\n    OnChanges,\n    SimpleChanges,\n    HostBinding\n} from '@angular/core';\nimport {ConfigStoreService} from '../services/config-store.service';\nimport {CalendarComponent} from '../../datepicker/calendar/calendar.component';\nimport {DatepickerInputDirective, HcDatepickerInputEvent} from '../../datepicker/datepicker-input/datepicker-input.directive';\nimport {D} from '../../datepicker/datetime/date-formats';\n\n/** Component combining a calendar and input as a representation of a date  */\n@Component({\n    selector: 'hc-calendar-wrapper',\n    templateUrl: './calendar-wrapper.component.html',\n    styleUrls: ['./calendar-wrapper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CalendarWrapperComponent implements OnChanges {\n    @HostBinding('class.hc-calendar-wrapper')\n    _hostClass = true;\n\n    @ViewChild(CalendarComponent, {static: true})\n    hcCalendar: CalendarComponent;\n\n    @ViewChild(DatepickerInputDirective, {static: true})\n    datePickerInput: DatepickerInputDirective;\n\n    /** Emits when selected date has changed. */\n    @Output()\n    readonly selectedDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Current selected date. */\n    @Input()\n    selectedDate: D | undefined;\n\n    @Input()\n    dateFormat: string;\n\n    /** Whether the pickers include the calendar, time selector, or both. Defaults to `date`. */\n    @Input()\n    mode: 'date' | 'time' | 'date-time' = 'date';\n\n    /** Whether the time picker should use a 12 or 24 hour clock. Defaults to 12. */\n    @Input()\n    hourCycle: number = 12;\n\n    /** Prefix label on top of component. */\n    @Input()\n    prefixLabel: string;\n\n    /** Flag to filter out weekends. */\n    @Input()\n    excludeWeekends: boolean;\n\n    /** The minimum selectable date. */\n    @Input()\n    minDate: D | undefined;\n\n    /** The maximum selectable date. */\n    @Input()\n    maxDate: D | undefined;\n\n    /** Message displayed when a date is invalid. */\n    @Input()\n    invalidDateLabel: string;\n\n    weekendFilter = () => true;\n\n    constructor(public configStore: ConfigStoreService) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Necessary to force view refresh\n        if (changes.selectedDate) {\n            const date: D = changes.selectedDate.currentValue;\n            if (date) {\n                this.hcCalendar.activeDate = date;\n                this.datePickerInput.setDate(date);\n                this.selectedDateChange.emit(date);\n            }\n        }\n    }\n\n    _onCalendarChange(date: D) {\n        this.selectedDateChange.emit(date);\n    }\n\n    _onInputChange(event: HcDatepickerInputEvent) {\n        if (this.mode === 'time') {\n            let tempVal = event.value ? new Date(1900, 1, 1, event.value.getHours(), event.value.getMinutes()) : new Date(1900, 1, 1);\n            let minVal = this.minDate ? new Date(1900, 1, 1, this.minDate.getHours(), this.minDate.getMinutes()) : new Date(1900, 1, 1);\n            let maxVal = this.maxDate ? new Date(1900, 1, 1, this.maxDate.getHours(), this.maxDate.getMinutes()) : new Date(1900, 1, 2);\n\n            if (tempVal < minVal || tempVal > maxVal) {\n                this.selectedDate = undefined;\n                this.selectedDateChange.emit(undefined);\n            } else {\n                this.selectedDateChange.emit(event.value || undefined);\n            }\n        } else {\n            if (event.value && ((this.minDate && event.value < this.minDate) || (this.maxDate && event.value > this.maxDate))) {\n                this.selectedDate = undefined;\n                this.selectedDateChange.emit(undefined);\n            } else {\n                this.selectedDateChange.emit(event.value || undefined);\n            }\n        }\n    }\n\n    /** Focus inner input */\n    focusInput() {\n        this.datePickerInput.focus();\n    }\n}\n","import {Component, OnInit, ViewEncapsulation, AfterViewInit, ViewChildren, QueryList, ChangeDetectionStrategy, ChangeDetectorRef} from '@angular/core';\nimport {DateRangeOptions, PresetItem} from '../model/model';\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {ConfigStoreService} from '../services/config-store.service';\nimport {DateRange} from '../model/model';\nimport {D} from '../../datepicker/datetime/date-formats';\nimport {CalendarWrapperComponent} from '../calendar-wrapper/calendar-wrapper.component';\nimport {Observable} from 'rxjs';\n\n// ** Date range wrapper component */\n@Component({\n    selector: 'hc-date-range-picker-overlay',\n    templateUrl: './picker-overlay.component.html',\n    styleUrls: ['./picker-overlay.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PickerOverlayComponent implements OnInit, AfterViewInit {\n    options$: Observable<DateRangeOptions>;\n    set _fromDate(fd: D | undefined) { this.__fromDate = fd; this.cd.markForCheck(); }\n    set _toDate(td: D | undefined) { this.__toDate = td; this.cd.markForCheck(); }\n    set _selectedPreset(s: number | null ) { this.__selectedPreset = s; this.cd.markForCheck(); }\n    set _rangeIsInvalid(isInvalid: boolean) { this.__rangeIsInvalid = isInvalid; this.cd.markForCheck(); }\n    get _fromDate(): D | undefined { return this.__fromDate; }\n    get _toDate(): D | undefined { return this.__toDate; }\n    get _selectedPreset(): number | null { return this.__selectedPreset; }\n    get _rangeIsInvalid(): boolean { return this.__rangeIsInvalid; }\n    _presetValues: PresetItem[] | undefined;\n    _skipRangeCheck: boolean = false;\n\n    __fromDate: D | undefined;\n    __toDate: D | undefined;\n    __selectedPreset: number | null;\n    __rangeIsInvalid: boolean = false; // if true, the fromDate is after the toDate and save will not be allowed\n\n    @ViewChildren(CalendarWrapperComponent)\n    calendarWrappers: QueryList<CalendarWrapperComponent>;\n\n    constructor(public configStoreService: ConfigStoreService, private overlayRef: OverlayRef, private cd: ChangeDetectorRef) {\n        this.options$ = configStoreService.dateRangeOptions$;\n    }\n\n    ngOnInit() {\n        this.options$.subscribe((options: DateRangeOptions) => {\n            this._presetValues = options.presets;\n            this.cd.markForCheck();\n        });\n        this.configStoreService.rangeUpdate$.subscribe((dateRange: DateRange) => {\n            if (dateRange) {\n                this._fromDate = dateRange.fromDate;\n                this._toDate = dateRange.toDate;\n            } else {\n                this._fromDate = undefined;\n                this._toDate = undefined;\n            }\n            this._validateRange();\n        });\n        this.configStoreService.presetUpdate$.subscribe((presetIndex: number | DateRange) => {\n            if (typeof presetIndex === 'number') {\n                this._selectedPreset = presetIndex;\n                this._updateRangeByPreset( presetIndex );\n            }\n        });\n    }\n\n    ngAfterViewInit(): void {\n        if (this.calendarWrappers.first) {\n            this.calendarWrappers.first.focusInput();\n        }\n    }\n\n    _updateFromDate(date?: D) {\n        if ( !this._skipRangeCheck ) {\n            this._fromDate = date;\n            this._isRangePreset();\n        }\n\n        if (this._rangeIsInvalid) {\n            this._validateRange();\n        }\n    }\n\n    _updateToDate(date?: D) {\n        if ( !this._skipRangeCheck ) {\n            this._toDate = date;\n            this._isRangePreset();\n        }\n\n        if (this._rangeIsInvalid) {\n            this._validateRange();\n        }\n    }\n\n    _updateRangeByPreset(index: number) {\n        if (this._presetValues && index < this._presetValues.length && index >= 0 ) {\n            // Prevent the system from assigning a preset if one has specifically been selected\n            this._skipRangeCheck = true;\n            this._fromDate = this._presetValues[index].range.fromDate;\n            this._toDate = this._presetValues[index].range.toDate;\n\n            setTimeout(() => {\n                if ( this._fromDate ) {\n                    this.calendarWrappers.first.hcCalendar.activeDate = this._fromDate;\n                }\n                if ( this._toDate ) {\n                    this.calendarWrappers.last.hcCalendar.activeDate = this._toDate;\n                }\n                this._skipRangeCheck = false;\n            });\n        }\n    }\n\n    _isRangePreset() {\n        this._selectedPreset = null;\n        if (this._presetValues) {\n            for (let i = 0; i < this._presetValues.length; i++) {\n                let radioRange: DateRange = this._presetValues[i].range;\n                if (this._fromDate && radioRange.fromDate && this._toDate && radioRange.toDate) {\n                    if ( this._fromDate.toDateString() === radioRange.fromDate.toDateString() &&\n                        this._toDate.toDateString() === radioRange.toDate.toDateString() ) {\n                            this._selectedPreset = i;\n                    }\n                }\n            }\n        }\n    }\n\n    _applyNewDates() {\n        if (!!this._toDate && !!this._fromDate) {\n            this._validateRange();\n            if (this._rangeIsInvalid) { return; }\n            this.configStoreService.updateRange({fromDate: this._fromDate, toDate: this._toDate});\n            if (this._selectedPreset !== null) {\n                this.configStoreService.updatePreset(this._selectedPreset);\n            } else {\n                this.configStoreService.updatePreset({fromDate: this._fromDate, toDate: this._toDate});\n            }\n        }\n        this.overlayRef.dispose();\n    }\n\n    _validateRange() {\n        this._rangeIsInvalid = (!!this._fromDate && !!this._toDate) && this._fromDate > this._toDate;\n    }\n\n    _discardNewDates() {\n        this.overlayRef.dispose();\n    }\n}\n","import {Injectable, ElementRef, Injector} from '@angular/core';\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {PickerOverlayComponent} from '../picker-overlay/picker-overlay.component';\n\n@Injectable()\nexport class CalendarOverlayService {\n    private hostElemRef: ElementRef;\n\n    constructor(private overlay: Overlay, private injector: Injector) {}\n\n    open(hostElemRef: ElementRef): OverlayRef {\n        this.hostElemRef = hostElemRef;\n        const overlayRef = this._createOverlay();\n        const portalInjector = this._createInjector(overlayRef);\n        const calendarPortal = new ComponentPortal(PickerOverlayComponent, null, portalInjector);\n        overlayRef.attach(calendarPortal);\n\n        overlayRef.backdropClick().subscribe(() => overlayRef.dispose());\n\n        return overlayRef;\n    }\n\n    private _createOverlay(): OverlayRef {\n        const overlayConfig = this._getOverlayConfig();\n        return this.overlay.create(overlayConfig);\n    }\n\n    private _getOverlayConfig(): OverlayConfig {\n        const positionStrategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.hostElemRef)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withDefaultOffsetY(12)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: true,\n            backdropClass: 'hc-overlay-transparent-backdrop',\n            panelClass: 'hc-date-range-overlay',\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n\n    private _createInjector(overlayRef: OverlayRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n        injectionTokens.set(OverlayRef, overlayRef);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n}\n","import {OnInit, Output, EventEmitter, Input, OnDestroy, ElementRef, Directive, HostListener, OnChanges, SimpleChanges} from '@angular/core';\nimport {DatePipe} from '@angular/common';\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {CalendarOverlayService} from '../services/calendar-overlay.service';\nimport {DateRange, DateRangeOptions} from '../model/model';\nimport {ConfigStoreService} from '../services/config-store.service';\n\n@Directive({\n    selector: '[hcDateRange]',\n    providers: [CalendarOverlayService, ConfigStoreService, DatePipe]\n})\nexport class DateRangeDirective implements OnInit, OnDestroy, OnChanges {\n    /** Emits when date range is been changed. */\n    @Output()\n    readonly selectedDateRangeChanged: EventEmitter<DateRange> = new EventEmitter<DateRange>();\n\n    /** Sets the selected date range. Accepts either a `DateRange` or a numerical index for preset. */\n    @Input()\n    selectedDate: number | DateRange;\n\n    /** Emits either a numerical index for the selected preset, or a `DateRange` if the selected value is not a preset */\n    @Output()\n    readonly selectedPresetChanged: EventEmitter<number | DateRange> = new EventEmitter<number | DateRange>();\n\n    /** Configuration to setup behavior of component. */\n    @Input()\n    options: DateRangeOptions;\n\n    private _overlayRef: OverlayRef;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLInputElement>,\n        private calendarOverlayService: CalendarOverlayService,\n        public configStoreService: ConfigStoreService\n    ) {\n        configStoreService.rangeUpdate$.subscribe((daterange: DateRange) => {\n            this.selectedDateRangeChanged.emit(daterange);\n        });\n        configStoreService.presetUpdate$.subscribe((preset: number | DateRange) => {\n            this.selectedPresetChanged.emit(preset);\n        });\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['options']) {\n            const options: DateRangeOptions = changes['options'].currentValue;\n            this.configStoreService.updateDateRangeOptions(options);\n        }\n        if (changes['selectedDate']) {\n            const selectedDate: number | DateRange = changes['selectedDate'].currentValue;\n\n            if ( typeof selectedDate === 'number' ) {\n                this.configStoreService.updatePreset(selectedDate);\n            } else {\n                this.configStoreService.updateRange(selectedDate);\n            }\n        }\n    }\n\n    @HostListener('click')\n    _onClick() {\n        this._overlayRef = this.calendarOverlayService.open(this._elementRef);\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Directive,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    DoCheck,\n    Self,\n    ElementRef\n} from '@angular/core';\nimport {parseBooleanAttribute} from '../util';\nimport {HcFormControlComponent} from '../form-field/hc-form-control.component';\nimport {ControlValueAccessor, NgForm, FormGroupDirective, NgControl} from '@angular/forms';\n\nlet nextUniqueId = 0;\n\n/** Groups single radio buttons together into a set for which only one can be selected */\n@Directive({\n    // tslint:disable:directive-selector\n    selector: 'hc-radio-group',\n    providers: [{provide: HcFormControlComponent, useExisting: forwardRef(() => RadioGroupDirective), multi: true}],\n    exportAs: 'hcRadioGroup'\n})\nexport class RadioGroupDirective extends HcFormControlComponent implements ControlValueAccessor, AfterContentInit, DoCheck {\n    @HostBinding('class.hc-radio-group-vertical')\n    _verticalClass: boolean = true;\n    @HostBinding('class.hc-radio-group-horizontal')\n    _horizontalClass: boolean = false;\n\n    /** Event emitted when the value of a radio button changes inside the group. */\n    @Output()\n    change: EventEmitter<RadioButtonChangeEvent> = new EventEmitter<RadioButtonChangeEvent>();\n    /** A list of all the radio buttons included in the group */\n    @ContentChildren(\n        forwardRef(() => RadioButtonComponent),\n        {descendants: true}\n    )\n    radios: QueryList<RadioButtonComponent>;\n    private _value: any = null;\n    private _uniqueName = `hc-radio-group-${nextUniqueId++}`;\n    private _name = this._uniqueName;\n    private _inline = false;\n    private _tight: boolean = false;\n    private _initialized = false; // if value of radio group has been set to initial value\n    private _selected: RadioButtonComponent | null = null; // the currently selected radio\n    private _form: NgForm | FormGroupDirective | null;\n\n    _componentId = this._name;\n\n    _onChangeFn: (value: any) => void = () => {};\n    _onTouchFn: () => any = () => {};\n\n    /** Name of radio group. Auto-generated name will be used if no name is set */\n    @Input()\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value ? value : this._uniqueName;\n        this._updateRadioButtonNames();\n    }\n\n    /** Unique id for the radio group. If none is supplied, defaults to name. */\n    @Input()\n    get id(): string {\n        return this._componentId || this._name;\n    }\n\n    set id(idVal: string) {\n        this._componentId = idVal ? idVal : this._name;\n    }\n\n    /** Value of radio buttons */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            this._value = newValue;\n            this._updateSelectedRadio();\n            this._checkSelectedRadio();\n        }\n    }\n\n    /** Boolean value that enables/disables the radio group */\n    @Input()\n    get disabled(): boolean {\n        if (this._ngControl && this._ngControl.disabled) {\n            return this._ngControl.disabled;\n        }\n        return this._isDisabled;\n    }\n\n    set disabled(value) {\n        this._isDisabled = parseBooleanAttribute(value);\n        this._markRadiosForCheck();\n    }\n\n    /** Boolean value of whether the radio group is required on a form */\n    @Input()\n    get required(): boolean {\n        return this._isRequired;\n    }\n\n    set required(value) {\n        this._isRequired = parseBooleanAttribute(value);\n        this._markRadiosForCheck();\n    }\n\n    /** Gets and sets the currently selected value of the radio button group */\n    get selected(): RadioButtonComponent | null {\n        return this._selected;\n    }\n\n    set selected(button: RadioButtonComponent | null) {\n        this._selected = button;\n        this.value = button ? button.value : null;\n        this._checkSelectedRadio();\n    }\n\n    /** Sets the layout orientation of the radio button group; defaults to false */\n    @Input()\n    get inline(): boolean {\n        return this._inline;\n    }\n\n    set inline(value) {\n        this._inline = parseBooleanAttribute(value);\n        this._verticalClass = !this._inline;\n        this._horizontalClass = this._inline;\n    }\n\n    /** If true, condense the default margin and reduce the font size on all contained radios. *Defaults to `false`.*  */\n    @Input()\n    get tight(): boolean {\n        return this._tight;\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n        if (this._initialized) {\n            setTimeout(() => this._markRadiosForCheck());\n        }\n    }\n\n    constructor(\n        private _cdRef: ChangeDetectorRef,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional()\n        @Self()\n        public _ngControl: NgControl\n    ) {\n        super();\n\n        this._form = _parentForm || _parentFormGroup;\n        if (this._ngControl != null) {\n            this._ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterContentInit() {\n        this._initialized = true;\n    }\n\n    writeValue(value: any) {\n        this.value = value;\n        this._cdRef.markForCheck();\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeFn = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchFn = fn;\n    }\n\n    _touch() {\n        if (this._onTouchFn) {\n            this._onTouchFn();\n        }\n    }\n\n    _emitChangeEvent(): void {\n        if (this._initialized) {\n            this.change.emit(new RadioButtonChangeEvent(this._selected, this.value));\n        }\n    }\n\n    private _markRadiosForCheck() {\n        if (this.radios) {\n            this.radios.forEach(radio => radio._markForCheck());\n        }\n    }\n\n    private _updateSelectedRadio() {\n        let isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this.radios && !isAlreadySelected) {\n            this._selected = null;\n            this.radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n\n    private _checkSelectedRadio() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    private _updateRadioButtonNames(): void {\n        if (this.radios) {\n            this.radios.forEach(radio => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    ngDoCheck(): void {\n        // This needs to be checked every cycle because we can't subscribe to form submissions\n        if (this._ngControl) {\n            this._updateErrorState();\n        }\n    }\n\n    private _updateErrorState() {\n        const oldState = this._errorState;\n\n        // TODO: this could be abstracted out as an @Input() if we need this to be configurable\n        const newState = !!(\n            this._ngControl &&\n            this._ngControl.invalid &&\n            (this._ngControl.touched || (this._form && this._form.submitted))\n        );\n\n        if (oldState !== newState) {\n            this._errorState = newState;\n        }\n    }\n}\n\n/** Event type that is emitted when a radio button or radio button group changes */\nexport class RadioButtonChangeEvent {\n    /**\n     * @param source the radio button that fired the event\n     * @param value the value of that radio button\n     */\n    constructor(public source: RadioButtonComponent | null, public value: any) {}\n}\n\n/** Radio buttons allow the user to choose only one of a predefined set of mutually exclusive options. */\n@Component({\n    selector: 'hc-radio-button',\n    templateUrl: './radio-button.component.html',\n    styleUrls: ['./radio-button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RadioButtonComponent implements OnInit {\n    private _uniqueId = `hc-radio-button-${nextUniqueId++}`;\n    /** Element id for the radio button. Auto-generated id will be used if none is set */\n    @Input()\n    id: string = this._uniqueId;\n    /** Name of radio button */\n    @Input()\n    name: string;\n    /** Event emitted when the value of the radio button changes */\n    @Output()\n    change = new EventEmitter<RadioButtonChangeEvent>();\n    private _checked: boolean = false;\n    private _value: any = null;\n    private _required: boolean = false;\n    private _disabled: boolean = false;\n    private _tight: boolean = false;\n    private readonly radioGroup: RadioGroupDirective | null;\n\n    /** Value of radio buttons */\n    @Input()\n    get value() {\n        return this._value;\n    }\n\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null && !this.checked) {\n                this.checked = this.radioGroup.value === value;\n            } else if (this.radioGroup !== null && this.checked) {\n                this.radioGroup.selected = this;\n            }\n        }\n    }\n\n    @HostBinding('attr.id')\n    get _getHostId(): string {\n        return this.id;\n    }\n\n    /** Boolean value of whether the radio button is required */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup != null && this.radioGroup.required);\n    }\n\n    set required(required) {\n        this._required = parseBooleanAttribute(required);\n    }\n\n    /** Boolean value that enables/disables the radio button */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n\n    set disabled(isDisabled) {\n        this._disabled = parseBooleanAttribute(isDisabled);\n    }\n\n    /** Boolean that returns whether the radio button is selected */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        let newCheckedState = parseBooleanAttribute(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                this.radioGroup.selected = null;\n            }\n            this.cdRef.markForCheck();\n        }\n    }\n\n    get _inlineGroup(): boolean {\n        if (this.radioGroup !== null) {\n            return this.radioGroup.inline;\n        } else {\n            return false;\n        }\n    }\n\n    /** If true, condense the default margin, reduce the font size, and decrease the circle size.\n     * Inherits value from parent radio group if part of one. *Defaults to `false`.*  */\n    @Input()\n    get tight(): boolean {\n        if (this.radioGroup !== null) {\n            return this.radioGroup.tight;\n        } else {\n            return this._tight;\n        }\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n    }\n\n    get _inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    constructor(@Optional() radioGroup: RadioGroupDirective, private cdRef: ChangeDetectorRef, public _elementRef: ElementRef) {\n        this.radioGroup = radioGroup;\n    }\n\n    ngOnInit() {\n        if (this.radioGroup !== null) {\n            this.checked = this.radioGroup.value === this._value;\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    _onInputClick(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onInputChange(event: Event) {\n        event.stopPropagation();\n        const valueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this._emitChangeEvent();\n        if (this.radioGroup !== null) {\n            this.radioGroup._onChangeFn(this.value);\n            this.radioGroup._touch();\n            if (valueChanged) {\n                this.radioGroup._emitChangeEvent();\n                this.radioGroup.value = this.value;\n            }\n        } else {\n            this.checked = true;\n        }\n    }\n\n    private _emitChangeEvent(): void {\n        this.change.emit(new RadioButtonChangeEvent(this, this.value));\n    }\n\n    _markForCheck() {\n        this.cdRef.markForCheck();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RadioButtonComponent, RadioGroupDirective} from './radio';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [RadioButtonComponent, RadioGroupDirective],\n    declarations: [RadioButtonComponent, RadioGroupDirective],\n    providers: []\n})\nexport class RadioButtonModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DateRangeDirective} from './date-range/date-range.directive';\nimport {PickerOverlayComponent} from './picker-overlay/picker-overlay.component';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CalendarWrapperComponent} from './calendar-wrapper/calendar-wrapper.component';\nimport {FormsModule} from '@angular/forms';\nimport {HcNativeDateModule} from '../datepicker/datetime/datetime.module';\nimport {DatepickerModule} from '../datepicker/datepicker.module';\nimport {FormFieldModule} from '../form-field/hc-form-field.module';\nimport {InputModule} from '../input/input.module';\nimport {ButtonModule} from '../button/button.module';\nimport {RadioButtonModule} from '../radio-button/radio-button.module';\nimport {ChipModule} from '../chip/chip.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ChipModule,\n        FormFieldModule,\n        DatepickerModule,\n        HcNativeDateModule,\n        InputModule,\n        ButtonModule,\n        RadioButtonModule,\n        OverlayModule,\n        FormsModule\n    ],\n    declarations: [DateRangeDirective, CalendarWrapperComponent, PickerOverlayComponent],\n    entryComponents: [PickerOverlayComponent],\n    exports: [DateRangeDirective]\n})\nexport class DateRangeModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {parseBooleanAttribute} from '../util';\nimport {filter, map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n/** Result of opening or closing the drawer */\nexport class DrawerPromiseResult {\n    constructor(public type: 'open' | 'close') {}\n}\n\nconst supportedModes = ['over', 'push', 'side'];\n\nexport function validateModeInput(inputStr: string) {\n    if (supportedModes.indexOf(inputStr) < 0) {\n        throw Error('Unsupported drawer mode value: ' + inputStr);\n    }\n}\n\nconst supportedAligns = ['left', 'right'];\n\nexport function validateAlignInput(inputStr: string) {\n    if (supportedAligns.indexOf(inputStr) < 0) {\n        throw Error('Unsupported drawer alignment value: ' + inputStr);\n    }\n}\n\nconst openStateAnimation = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n/** Drawer that can be opened or closed on the drawer container */\n@Component({\n    selector: 'hc-drawer',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('openState', [\n            state(\n                'open-left, open-right, open-instant',\n                style({\n                    visibility: 'visible'\n                })\n            ),\n            state(\n                'void',\n                style({\n                    'box-shadow': 'none',\n                    visibility: 'hidden'\n                })\n            ),\n            transition('void => open-instant', animate('0ms')),\n            transition('open-instant => void', animate(openStateAnimation)),\n            transition('void => open-left', [\n                animate('0ms', style({ transform: 'translate3d(-100%, 0, 0)' })),\n                animate(openStateAnimation)\n            ]),\n            transition('open-left => void', [\n                animate(openStateAnimation, style({ transform: 'translate3d(-100%, 0, 0)' }))\n            ]),\n            transition('void => open-right', [\n                animate('0ms', style({ transform: 'translate3d(100%, 0, 0)'})),\n                animate(openStateAnimation)\n            ]),\n            transition('open-right => void', [\n                animate(openStateAnimation, style({ transform: 'translate3d(100%, 0, 0)' }))\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class Drawer implements AfterContentInit {\n    readonly _openChange = new EventEmitter<boolean>();\n    private _mode: string = 'push';\n    private _align: string = 'left';\n\n    /** Mode of the drawer: `over`, `push` or `side` */\n    @Input()\n    get mode(): string {\n        return this._mode;\n    }\n\n    set mode(modeType: string) {\n        validateModeInput(modeType);\n        this._mode = modeType;\n    }\n\n    /** Side the drawer is attached to: `left` or `right` */\n    @Input()\n    get align(): string {\n        return this._align;\n    }\n\n    set align(alignType: string) {\n        validateAlignInput(alignType);\n        this._align = alignType;\n    }\n\n    /** Event emitted when drawer has started to open */\n    @Output()\n    get openStart(): Observable<void> {\n        return this._animationStarted.pipe(\n            filter(event => event.fromState === 'void' && event.toState === 'open'),\n            map(() => {})\n        );\n    }\n\n    /** Event emitted when drawer has started to close */\n    @Output()\n    get closeStart(): Observable<void> {\n        return this._animationStarted.pipe(\n            filter(event => event.fromState === 'open' && event.toState === 'void'),\n            map(() => {})\n        );\n    }\n\n    /** Event emitted when drawer has opened */\n    @Output('opened')\n    get _openStream() {\n        return this._openChange.pipe(\n            filter(value => value),\n            map(() => {})\n        );\n    }\n\n    /** Event emitted when drawer has closed */\n    @Output('closed')\n    get _closeStream() {\n        return this._openChange.pipe(\n            filter(value => !value),\n            map(() => {})\n        );\n    }\n\n    /** Tabindex of the element */\n    @HostBinding()\n    tabindex = -1;\n    @HostBinding('class.hc-drawer')\n    _drawerClass = true;\n\n    readonly _animationStarted = new EventEmitter<AnimationEvent>();\n\n    private _animationDisabled = true;\n    private _drawerOpened = false;\n    private _animationPromise: Promise<DrawerPromiseResult> | null;\n    private _resolveAnimationPromise: () => void = () => {};\n\n    /** Whether the drawer is opened. */\n    @Input()\n    get opened(): boolean {\n        return this._drawerOpened;\n    }\n\n    set opened(opened) {\n        this.toggle(parseBooleanAttribute(opened));\n    }\n\n    get _width(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n\n    @HostBinding('class.hc-drawer-opened')\n    get _isOpened() {\n        return this._drawerOpened && !this._animationPromise;\n    }\n\n    @HostBinding('class.hc-drawer-opening')\n    get _isOpening() {\n        return this._drawerOpened && !!this._animationPromise;\n    }\n\n    @HostBinding('class.hc-drawer-closed')\n    get _isClosed() {\n        return !this._drawerOpened && !this._animationPromise;\n    }\n\n    @HostBinding('class.hc-drawer-closing')\n    get _isClosing() {\n        return !this._drawerOpened && !!this._animationPromise;\n    }\n\n    @HostBinding('class.hc-drawer-right')\n    get _isRight() {\n        return this._align === 'right';\n    }\n\n    @HostBinding('@openState')\n    get _openState(): 'void' | 'open-instant' | 'open-left' | 'open-right' {\n        if (this._drawerOpened) {\n            if (this._animationDisabled) {\n                return 'open-instant';\n            }\n\n            return this._align === 'right' ? 'open-right' : 'open-left';\n        }\n        return 'void';\n    }\n\n    @HostListener('@openState.start', ['$event'])\n    _onAnimationStart(event: AnimationEvent) {\n        this._animationStarted.emit(event);\n    }\n\n    @HostListener('@openState.done', ['$event'])\n    _onAnimationEnd(event: AnimationEvent) {\n        this._openChange.next(this.opened);\n\n        if (this._animationPromise) {\n            this._resolveAnimationPromise();\n            this._resolveAnimationPromise = () => {};\n            this._animationPromise = null;\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    _onKeyDown(event: KeyboardEvent) {\n        if (event.keyCode === 27) {\n            this.toggleClose();\n            event.stopPropagation();\n        }\n    }\n\n    constructor(protected elementRef: ElementRef) {}\n\n    ngAfterContentInit() {\n        if (this._animationPromise) {\n            this._resolveAnimationPromise();\n            this._resolveAnimationPromise = () => {};\n            this._animationPromise = null;\n        }\n        this._animationDisabled = false;\n    }\n\n    /** Toggles the drawer open */\n    toggleOpen(): Promise<DrawerPromiseResult> {\n        return this.toggle(true);\n    }\n\n    /** Toggles the drawer closed */\n    toggleClose(): Promise<DrawerPromiseResult> {\n        return this.toggle(false);\n    }\n\n    /** Toggles the drawer */\n    toggle(isOpen: boolean = !this.opened): Promise<DrawerPromiseResult> {\n        if (!this._animationPromise) {\n            this._drawerOpened = isOpen;\n\n            this._animationPromise = new Promise<DrawerPromiseResult>(resolve => {\n                this._resolveAnimationPromise = () => resolve(new DrawerPromiseResult(isOpen ? 'open' : 'close'));\n            });\n        }\n        return this._animationPromise;\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    HostBinding,\n    NgZone,\n    OnDestroy,\n    QueryList,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\nimport {Drawer, DrawerPromiseResult} from './drawer.component';\nimport {debounceTime, filter, startWith, takeUntil} from 'rxjs/operators';\nimport {AnimationEvent} from '@angular/animations';\nimport {Subject} from 'rxjs';\n\nfunction throwDrawerContainerError(align: string) {\n    throw new Error(`A drawer was already declared for 'align=\"${align}\"'`);\n}\n\n/** Parent component that houses one or two `<hc-drawer>` that applies content styling */\n@Component({\n    selector: 'hc-drawer-container',\n    templateUrl: 'drawer-container.component.html',\n    styleUrls: ['drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DrawerContainer implements AfterContentInit, DoCheck, OnDestroy {\n    @ContentChildren(Drawer)\n    _drawers: QueryList<Drawer>;\n\n    private _leftDrawer: Drawer;\n    private _rightDrawer: Drawer;\n\n    _contentMargins = {left: 0, right: 0};\n\n    private readonly _doCheckSubject = new Subject<void>();\n    private readonly _destroyed = new Subject<void>();\n\n    @HostBinding('class.hc-drawer-container')\n    _hostClass = true;\n\n    constructor(\n        private _elementRef: ElementRef,\n        private _renderer: Renderer2,\n        private _ngZone: NgZone,\n        private _changeDetector: ChangeDetectorRef\n    ) {}\n\n    // If drawer size changes through some async action this will cause it to resize the margins\n    ngDoCheck(): void {\n        // Run outside of angular's scope because debounceTime will cause infinite loop\n        this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n\n    ngAfterContentInit() {\n        // debounceTime allows the component to render before the margins are calculated\n        this._doCheckSubject\n            .pipe(\n                debounceTime(10), // arbitrarily small value is used to quickly render the component so incorrect margins aren't shown\n                takeUntil(this._destroyed)\n            )\n            .subscribe(() => this._calculateContentMargins());\n\n        // startWith used to cause first iteration\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n\n            this._drawers.forEach((drawer: Drawer) => {\n                drawer._animationStarted\n                    .pipe(\n                        takeUntil(this._drawers.changes),\n                        filter((event: AnimationEvent) => event.fromState !== event.toState)\n                    )\n                    .subscribe(() => {\n                        this._calculateContentMargins();\n                    });\n                drawer._openChange.pipe(takeUntil(this._drawers.changes)).subscribe(isOpen => {\n                    if (isOpen) {\n                        this._setContainerClass(true);\n                    } else {\n                        this._setContainerClass(false);\n                    }\n                });\n            });\n\n            if (!this._drawers.length || this._isDrawerOpen(this._leftDrawer) || this._isDrawerOpen(this._rightDrawer)) {\n                this._calculateContentMargins();\n            }\n        });\n    }\n\n    private _isDrawerOpen(drawer: Drawer): boolean {\n        return drawer != null && drawer.opened;\n    }\n\n    /** Open all drawers */\n    open(): Promise<DrawerPromiseResult[]> {\n        return Promise.all([this._leftDrawer, this._rightDrawer].map(drawer => drawer && drawer.toggleOpen()));\n    }\n\n    /** Close all drawers */\n    close(): Promise<DrawerPromiseResult[]> {\n        return Promise.all([this._leftDrawer, this._rightDrawer].map(drawer => drawer && drawer.toggleClose()));\n    }\n\n    private _calculateContentMargins(): void {\n        let left = 0;\n        let right = 0;\n\n        if (this._leftDrawer && this._leftDrawer.opened) {\n            if (this._leftDrawer.mode === 'side') {\n                left += this._leftDrawer._width;\n            } else if (this._leftDrawer.mode === 'push') {\n                left += this._leftDrawer._width;\n                right -= this._leftDrawer._width;\n            }\n        }\n\n        if (this._rightDrawer && this._rightDrawer.opened) {\n            if (this._rightDrawer.mode === 'side') {\n                right += this._rightDrawer._width;\n            } else if (this._rightDrawer.mode === 'push') {\n                right += this._rightDrawer._width;\n                left -= this._rightDrawer._width;\n            }\n        }\n\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = {left, right};\n\n            this._ngZone.run(() => this._changeDetector.markForCheck());\n        }\n    }\n\n    private _validateDrawers(): void {\n        for (let drawer of this._drawers.toArray()) {\n            if (drawer.align === 'right') {\n                if (this._rightDrawer != null) {\n                    throwDrawerContainerError('right');\n                }\n                this._rightDrawer = drawer;\n            } else {\n                if (this._leftDrawer != null) {\n                    throwDrawerContainerError('left');\n                }\n                this._leftDrawer = drawer;\n            }\n        }\n    }\n\n    private _setContainerClass(isOpen: boolean): void {\n        if (isOpen) {\n            this._renderer.addClass(this._elementRef.nativeElement, 'hc-drawer-opened');\n        } else {\n            this._renderer.removeClass(this._elementRef.nativeElement, 'hc-drawer-opened');\n        }\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._doCheckSubject.complete();\n    }\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/* MenuDrawer toolbar that is fixed to the top */\n@Directive({\n    selector: '[hcDrawerToolbar]'\n})\nexport class DrawerToolbar {\n    @HostBinding('class.hc-drawer-toolbar')\n    _hostClass = true;\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Input,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\nimport {Drawer} from '../drawer.component';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {DrawerToolbar} from './drawer-header.directive';\n\nconst drawerThemes = ['dark-theme'];\n\nexport function validateMenuDrawerTheme(menuTheme) {\n    if (!drawerThemes.some(theme => theme === menuTheme)) {\n        throw new Error('Unsupported menuTheme: ' + menuTheme);\n    }\n}\n\nconst openStateAnimation = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n/** Menu drawer that provides default themes */\n@Component({\n    selector: 'hc-menu-drawer',\n    templateUrl: 'menu-drawer.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../drawer.component.scss', 'menu-drawer.component.scss'],\n    animations: [\n        trigger('openState', [\n            state(\n                'open-left, open-right, open-instant',\n                style({\n                    transform: 'translate3d(0, 0, 0)',\n                    visibility: 'visible'\n                })\n            ),\n            state(\n                'void',\n                style({\n                    'box-shadow': 'none',\n                    visibility: 'hidden'\n                })\n            ),\n            transition('void => open-instant', animate('0ms')),\n            transition('open-instant => void', animate(openStateAnimation)),\n            transition('void => open-left', [\n                animate('0ms', style({ transform: 'translate3d(-100%, 0, 0)' })),\n                animate(openStateAnimation)\n            ]),\n            transition('open-left => void', [\n                animate(openStateAnimation, style({ transform: 'translate3d(-100%, 0, 0)' }))\n            ]),\n            transition('void => open-right', [\n                animate('0ms', style({ transform: 'translate3d(100%, 0, 0)'})),\n                animate(openStateAnimation)\n            ]),\n            transition('open-right => void', [\n                animate(openStateAnimation, style({ transform: 'translate3d(100%, 0, 0)' }))\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{provide: Drawer, useExisting: forwardRef(() => MenuDrawer)}]\n})\nexport class MenuDrawer extends Drawer implements AfterContentInit {\n    private _previousTheme: string | null = null;\n\n    @ContentChild(DrawerToolbar, {static: false})\n    toolbar: DrawerToolbar;\n\n    /** Sets menu style of the drawer. Choose from: `'dark-theme'` */\n    @Input()\n    get menuTheme(): string {\n        return this._menuTheme;\n    }\n\n    set menuTheme(menuStyle: string) {\n        validateMenuDrawerTheme(menuStyle);\n\n        this._setThemeClass(this._themeClass(menuStyle));\n        this._previousTheme = this._menuTheme;\n        this._menuTheme = menuStyle;\n    }\n\n    private _menuTheme: string;\n\n    @HostBinding('class.hc-menu-drawer')\n    _hostClass = true;\n\n    constructor(elementRef: ElementRef, private renderer: Renderer2) {\n        super(elementRef);\n        this.menuTheme = 'dark-theme';\n    }\n\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n\n        if (this.toolbar != null) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'hc-drawer-toolbar-visible');\n        } else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'hc-drawer-toolbar-visible');\n        }\n    }\n\n    private _themeClass(menuStyle: string) {\n        return `hc-menu-drawer-${menuStyle}`;\n    }\n\n    private _setThemeClass(className: string) {\n        if (this._previousTheme !== className) {\n            if (this._previousTheme || this._menuTheme) {\n                this.renderer.removeClass(this.elementRef.nativeElement, this._previousTheme || this.menuTheme);\n            }\n            this.renderer.addClass(this.elementRef.nativeElement, className);\n        }\n    }\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n/* Represents a menu item for the MenuDrawer component */\n@Component({\n    selector: 'hc-drawer-item',\n    template: `\n        <div class=\"hc-drawer-item\">\n            <ng-content></ng-content>\n        </div>\n        <hr class=\"hc-drawer-divider\" />\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DrawerItem {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Drawer} from './drawer.component';\nimport {DrawerContainer} from './drawer-container.component';\nimport {MenuDrawer} from './menu-drawer/menu-drawer.component';\nimport {DrawerItem} from './menu-drawer/drawer-item.component';\nimport {DrawerToolbar} from './menu-drawer/drawer-header.directive';\n\nconst exportedComponents = [Drawer, DrawerContainer, MenuDrawer, DrawerItem, DrawerToolbar];\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: exportedComponents,\n    exports: exportedComponents\n})\nexport class DrawerModule {}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n/** Parent component that can house multiple `<hc-list-item>` and applies Cashmere list styling */\n@Component({\n    selector: 'hc-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ListComponent {\n    @HostBinding('class.hc-list')\n    _hostClass = true;\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n/**\n * Represents a row within a `<hc-list>`. Multiple `[hcListLine]` can be used\n * per `<hc-list-item>`. You can also prefix a `[hcListAvatar]` or `[hcListIcon]`\n * to the beginning of the `<hc-list-item>`.\n */\n@Component({\n    selector: 'hc-list-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ListItemComponent {\n    @HostBinding('class.hc-list-item')\n    _hostClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Prepends an avatar styled element to the beginning of a `<hc-list-item>`. */\n@Directive({\n    selector: '[hcListAvatar]'\n})\nexport class ListAvatarDirective {\n    @HostBinding('class.hc-list-avatar')\n    get _hostClass(): boolean {\n        return true;\n    }\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Prefixes an icon to the beginning of a `<hc-list-item>`. */\n@Directive({\n    selector: '[hcListIcon]'\n})\nexport class ListIconDirective {\n    @HostBinding('class.hc-list-icon')\n    _hostClass = true;\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Represents a line within a `hc-list-item` row. Multiple can be used within `hc-list-item`. */\n@Directive({\n    selector: '[hcListLine]'\n})\nexport class ListLineDirective {\n    @HostBinding('class.hc-list-line')\n    _hostClass;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ListComponent} from './list.component';\nimport {ListItemComponent} from './list-item/list-item.component';\nimport {ListAvatarDirective} from './list-item/directives/list-avatar.directive';\nimport {ListIconDirective} from './list-item/directives/list-icon.directive';\nimport {ListLineDirective} from './list-item/directives/list-line.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ListComponent, ListItemComponent, ListAvatarDirective, ListIconDirective, ListLineDirective],\n    exports: [ListComponent, ListItemComponent, ListAvatarDirective, ListIconDirective, ListLineDirective]\n})\nexport class ListModule {}\n","export class ActiveModal<T = any, U = any> {\n    /** Data that was passed in through ModalOptions */\n    public data?: T;\n    /** Closes the modal with an optional result.\n     * Use this close method when opening a modal using a component. When doing so,\n     * ActiveModal must be injected in order to get access to the close method.\n     * To dismiss a modal that was created from a TemplateRef, use the dismiss method\n     * on HcModal */\n    public close(result?: U): void {}\n    /** Dismisses the modal with no result.\n     * Use this dismiss method when opening a modal using a component. When doing so,\n     * ActiveModal must be injected in order to get access to the dismiss method.\n     * To dismiss a modal that was created from a TemplateRef, use the dismiss method\n     * on HcModal */\n    public dismiss(): void {}\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'hc-modal',\n    template: `\n        <ng-content></ng-content>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalComponent {\n    @HostBinding('class.hc-modal-content')\n    _modalWrapperClass = true;\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'hc-modal-footer',\n    template: `\n        <ng-content></ng-content>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalFooterComponent {\n    @HostBinding('class.hc-modal-footer')\n    _modalFooterClass = true;\n}\n","import {animate, state, style, transition, trigger} from '@angular/animations';\nimport {ModalSize} from './modal-options';\nimport {Component, ElementRef, HostBinding, HostListener, Input, ViewEncapsulation} from '@angular/core';\nimport {ActiveModal} from './active-modal';\n\n@Component({\n    selector: 'hc-modal-window',\n    template: `\n        <div [class]=\"'hc-modal hc-modal-' + _size\"><ng-content></ng-content></div>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    // tslint:disable-next-line: no-host-metadata-property\n    host: {class: 'hc-modal-window'},\n    styleUrls: ['./modal-window.component.scss'],\n    animations: [\n        trigger('fadeInOut', [\n            state('in', style({opacity: 1})),\n            transition('void <=> *', [\n                style({\n                    opacity: 0\n                }),\n                animate('0.2s ease-in-out')\n            ])\n        ])\n    ]\n})\nexport class ModalWindowComponent {\n    @Input()\n    _ignoreOverlayClick = false;\n    @Input()\n    _size: ModalSize = 'auto';\n\n    constructor(private activeModal: ActiveModal, private el: ElementRef) {}\n\n    @HostBinding('@fadeInOut')\n    _fadeInOut() {\n        return state;\n    }\n\n    @HostListener('mousedown', ['$event'])\n    _overlayClick(event: any) {\n        let modalContentNotPresent = true;\n        let path = this._eventPath(event);\n        let modalWindowTargetIncluded = path.findIndex(p => p === this.el.nativeElement) > -1;\n        let classList: (DOMTokenList | undefined)[] = path.map(p => p.classList);\n        for (let cl of classList) {\n            if (cl) {\n                if (cl.contains('hc-modal-content')) {\n                    modalContentNotPresent = false;\n                }\n            }\n        }\n\n        /* The hc-modal has 100% height (although not completely visible).\n            To enable closing the modal while clicking above or below the modal (in\n            addition to the sides) this function will check to see if the click\n            event includes:\n                1. This window element\n                2. Not the hc-modal-content and\n                3. the overlay click option is disabled. */\n        if (!this._ignoreOverlayClick && modalContentNotPresent && modalWindowTargetIncluded) {\n            this.activeModal.dismiss();\n        }\n    }\n\n    // Serves as a polyfill for Event.composedPath() or Event.Path\n    _eventPath(evt: any) {\n        let path = (evt.composedPath && evt.composedPath()) || evt.path,\n            target = evt.target;\n\n        if (path != null) {\n            // Safari doesn't include Window, but it should.\n            return path.indexOf(window) < 0 ? path.concat(window) : path;\n        }\n\n        if (target === window) {\n            return [window];\n        }\n\n        function _getParents(node, memo?) {\n            memo = memo || [];\n            let parentNode = node.parentNode;\n\n            if (!parentNode) {\n                return memo;\n            } else {\n                return _getParents(parentNode, memo.concat(parentNode));\n            }\n        }\n\n        return [target].concat(_getParents(target), window);\n    }\n}\n","import {Component, HostBinding, HostListener, Input, ViewEncapsulation} from '@angular/core';\nimport {ActiveModal} from './active-modal';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n    selector: 'hc-modal-overlay',\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    styles: [\n        `\n            .hc-modal-overlay {\n                background-color: #000;\n                position: fixed;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                opacity: 0.5;\n                display: block;\n            }\n        `\n    ],\n    // tslint:disable-next-line: no-host-metadata-property\n    host: {class: 'hc-modal-overlay'},\n    animations: [\n        trigger('fadeInOut', [\n            state('in', style({opacity: 0.5})),\n            transition('void <=> *', [\n                style({\n                    opacity: 0\n                }),\n                animate('0.2s ease-in-out')\n            ])\n        ])\n    ]\n})\nexport class ModalOverlayComponent {\n    @Input()\n    _ignoreEscapeKey = false;\n\n    constructor(private activeModal: ActiveModal) {}\n\n    @HostBinding('@fadeInOut')\n    _fadeInOut() {\n        return state;\n    }\n\n    @HostListener('document:keyup.escape', ['$event'])\n    _escapeKey(event: any) {\n        if (!this._ignoreEscapeKey) {\n            this.activeModal.dismiss();\n        }\n    }\n}\n","import {ModalOverlayComponent} from './modal-overlay.component';\nimport {ComponentRef, EventEmitter} from '@angular/core';\nimport {ModalWindowComponent} from './modal-window.component';\nimport {Subject, Observable} from 'rxjs';\n\nexport class HcModal<T> {\n    /** Allows direct access to the component used to create the modal. Null when TemplateRef is used */\n    componentRef: ComponentRef<T> | null;\n\n    /** Allows direct access to overlay component which holds the component/template */\n    overlay: ComponentRef<ModalOverlayComponent> | null;\n\n    /** Allows direct access to window component which holds the component/template */\n    window: ComponentRef<ModalWindowComponent> | null;\n\n    /** Subscribe to result in order to get access to modal result values passed in ActiveModal.close() */\n    get result(): Observable<any> {\n        return this._result.asObservable();\n    }\n\n    private _result: Subject<any> = new Subject<any>();\n\n    _removeOpenClass: (() => void) | null;\n\n    _modalClose = new EventEmitter();\n\n    /** Data that was passed in through ModalOptions */\n    data?: any;\n\n    /** Closes the modal with a result.\n     * Use this close method when opening a modal using a TemplateRef.\n     * To close a modal that was created from a Component, inject ActiveModal and use the close method\n     * on ActiveModal */\n    close(result?: any): void {\n        this.removeModalElements();\n        this._result.next(result);\n    }\n\n    /** Dismisses the modal with no result.\n     * Use this dismiss method when opening a modal using a TemplateRef.\n     * To dismiss a modal that was created from a Component, inject ActiveModal and use the dismiss method\n     * on ActiveModal */\n    dismiss(): void {\n        this.removeModalElements();\n    }\n\n    private removeModalElements() {\n        if (this.window) {\n            const windowNativeElement = this.window.location.nativeElement;\n            windowNativeElement.parentNode.removeChild(windowNativeElement);\n            this.window.destroy();\n        }\n\n        if (this.overlay) {\n            const overlayNativeElement = this.overlay.location.nativeElement;\n            overlayNativeElement.parentNode.removeChild(overlayNativeElement);\n            this.overlay.destroy();\n        }\n\n        if (this.componentRef) {\n            const componentNativeElement = this.componentRef.location.nativeElement;\n            componentNativeElement.parentNode.removeChild(componentNativeElement);\n            this.componentRef.destroy();\n        }\n\n        if (this._removeOpenClass) {\n            this._removeOpenClass();\n        }\n\n        this._modalClose.emit();\n\n        this.window = null;\n        this.overlay = null;\n        this.componentRef = null;\n        this._removeOpenClass = null;\n    }\n}\n","import {ModalWindowComponent} from './modal-window.component';\nimport {ModalOverlayComponent} from './modal-overlay.component';\nimport {HcModal} from './modal';\nimport {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Injectable,\n    Injector,\n    Renderer2,\n    RendererFactory2,\n    TemplateRef,\n    Type\n} from '@angular/core';\nimport {ModalOptions, ModalSize} from './modal-options';\nimport {ActiveModal} from './active-modal';\n\nexport type ModalContentType = Type<{}> | TemplateRef<any>;\n\n@Injectable()\nexport class ModalService {\n    /** Defaults to false. Restricts multiple modals from being opened on top of each other\n     * (an error will be thrown if attempted). It's generally considered bad practice to open multiple\n     * models at once, so only change this with good reason.\n     */\n    allowMultiple: boolean = false;\n\n    // start at 2000 (reserved range for modals, see _variables.scss)\n    private _zIndexCounter = 2000;\n    private _renderer: Renderer2;\n    private _modalsOpen: number = 0;\n\n    constructor(\n        private _componentFactory: ComponentFactoryResolver,\n        private _injector: Injector,\n        private _applicationRef: ApplicationRef,\n        _rendererFactory: RendererFactory2\n    ) {\n        this._renderer = _rendererFactory.createRenderer(null, null);\n    }\n\n    /** Opens a new modal either from a Component or a TemplateRef with the options specified in ModalOptions\n     * In order to use a component, it must be specified in your module's EntryComponents.\n     */\n    open<T>(modalContent: ModalContentType, modalOptions?: ModalOptions): HcModal<T> {\n        if (!this.allowMultiple && this._modalsOpen !== 0) {\n            throw new Error(`Multiple modals may not be opened at the same time\n                when the allowMultiple property on ModalService is set to false.`);\n        }\n\n        let container = document.querySelector('body') as HTMLElement;\n\n        const defaultOptions = {\n            container,\n            data: {},\n            ignoreEscapeKey: false,\n            size: 'auto',\n            ignoreOverlayClick: false\n        };\n        const options = {...defaultOptions, ...modalOptions};\n        if (options.container) {\n            container = options.container;\n        }\n\n        if (!container) {\n            throw new Error('Modal requires that a container be set in the modal options');\n        }\n\n        // TODO: HcModal and ActiveModal essentially are the same object with HcModal having refs. Might as well merge them to simplify\n        let modal = new HcModal<T>();\n        let activeModalRef = new ActiveModal();\n        modal.data = options.data;\n        activeModalRef.data = options.data;\n\n        const modalInjector = Injector.create({\n            providers: [{provide: ActiveModal, useValue: activeModalRef}],\n            parent: this._injector\n        });\n\n        // disable scrolling when overlay is present\n        this._renderer.addClass(container, 'hc-modal-open');\n        modal._removeOpenClass = () => this._renderer.removeClass(container, 'hc-modal-open');\n\n        // Create, attach, and append overlay to container\n        let overlay = this._componentFactory.resolveComponentFactory(ModalOverlayComponent).create(modalInjector);\n        this._renderer.setStyle(overlay.location.nativeElement, 'z-index', this._zIndexCounter);\n        overlay.instance._ignoreEscapeKey = options.ignoreEscapeKey;\n\n        this._applicationRef.attachView(overlay.hostView);\n        container.appendChild(overlay.location.nativeElement);\n        modal.overlay = overlay;\n\n        // Create and attach content views; prepare nodes to be\n        // transcluded with the window ComponentRef\n        let projectableNodes;\n        if (modalContent instanceof TemplateRef) {\n            const embeddedViewRef = modalContent.createEmbeddedView(activeModalRef);\n            this._applicationRef.attachView(embeddedViewRef);\n            projectableNodes = [embeddedViewRef.rootNodes];\n        } else {\n            const componentRef = this._componentFactory.resolveComponentFactory(modalContent).create(modalInjector);\n\n            // Set host component style to 100% to allow collapsing of body but not header/footer\n            this._renderer.addClass(componentRef.location.nativeElement, 'hc-modal-center-component');\n            this._applicationRef.attachView(componentRef.hostView);\n            modal.componentRef = <ComponentRef<T>>componentRef;\n            projectableNodes = [[componentRef.location.nativeElement]];\n        }\n\n        // Create, attach, and append Window to container\n        // Apply options\n        let window = this._componentFactory.resolveComponentFactory(ModalWindowComponent).create(modalInjector, projectableNodes);\n        this._renderer.setStyle(window.location.nativeElement, 'z-index', this._zIndexCounter + 1);\n        window.instance._size = options.size as ModalSize;\n        window.instance._ignoreOverlayClick = options.ignoreOverlayClick;\n\n        this._applicationRef.attachView(window.hostView);\n        container.appendChild(window.location.nativeElement);\n        modal.window = window;\n\n        activeModalRef.close = (result: any) => {\n            modal.close(result);\n        };\n\n        activeModalRef.dismiss = () => modal.dismiss();\n\n        this._modalsOpen++;\n        modal._modalClose.subscribe(() => {\n            this._modalsOpen--;\n            modal._modalClose.unsubscribe();\n        });\n\n        this._zIndexCounter += 2;\n        return modal;\n    }\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'hc-modal-header',\n    template: `\n        <ng-content></ng-content>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalHeaderComponent {\n    @HostBinding('class.hc-modal-header')\n    _modalHeaderClass = true;\n}\n","import {Component, HostBinding, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'hc-modal-body',\n    template: `\n        <ng-content></ng-content>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalBodyComponent {\n    @HostBinding('class.hc-modal-body')\n    _modalBodyClass = true;\n}\n","import {ModalFooterComponent} from './modal-footer.component';\nimport {ModalWindowComponent} from './modal-window.component';\nimport {ModalOverlayComponent} from './modal-overlay.component';\nimport {ModalService} from './modal.service';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ModalHeaderComponent} from './modal-header.component';\nimport {ModalBodyComponent} from './modal-body.component';\nimport {ModalComponent} from './modal.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        ModalOverlayComponent,\n        ModalWindowComponent,\n        ModalHeaderComponent,\n        ModalBodyComponent,\n        ModalFooterComponent,\n        ModalComponent\n    ],\n    entryComponents: [ModalOverlayComponent, ModalWindowComponent],\n    exports: [ModalHeaderComponent, ModalBodyComponent, ModalFooterComponent, ModalComponent],\n    providers: [ModalService]\n})\nexport class ModalModule {}\n","import {ChangeDetectorRef, Component, ElementRef, HostBinding, Input, ViewEncapsulation} from '@angular/core';\n\n/** Primary navigation links */\n@Component({\n    selector: 'hc-navbar-link',\n    templateUrl: './navbar-link.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class NavbarLinkComponent {\n    /** (optional) forces active state *Default is `null`.* */\n    @Input()\n    active?: boolean;\n\n    /** RouterLink uri. See https://angular.io/api/router/RouterLink */\n    @Input()\n    uri: string;\n\n    /** The text to display. This can also optionally be the contents within the element */\n    @Input()\n    linkText: string;\n\n    /** Sets the RouterLinkActive options to match the url exactly to set active state. *Default is false.*\n     * See https://angular.io/api/router/RouterLinkActive#description\n     */\n    @Input()\n    exact: boolean = false;\n\n    _hidden: boolean = false;\n\n    constructor(private el: ElementRef, private ref: ChangeDetectorRef) {}\n\n    /** Disable visibility of component from view */\n    hide() {\n        this._hidden = true;\n        this.ref.detectChanges();\n    }\n\n    /** Enable visibility of component from view */\n    show() {\n        this._hidden = false;\n        this.ref.detectChanges();\n    }\n\n    _getWidth() {\n        return this.el.nativeElement.scrollWidth;\n    }\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\n\n/** Navigation dropdown for small screen sizes */\n@Component({\n    selector: 'hc-navbar-mobile-menu',\n    templateUrl: './navbar-mobile-menu.component.html',\n    styleUrls: ['./navbar-mobile-menu.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NavbarMobileMenuComponent {\n    public _yPos: string = '-100';\n    constructor() {}\n\n    /** Show the component from view */\n    show(): void {\n        this._yPos = '0';\n    }\n\n    /** Hide the component from view */\n    hide(): void {\n        this._yPos = '-100';\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    HostListener,\n    Input,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport {HcPopoverAnchorDirective} from '../pop/directives/popover-anchor.directive';\nimport {MoreItem} from './more-item';\nimport {NavbarLinkComponent} from './navbar-link/navbar-link.component';\nimport {NavbarMobileMenuComponent} from './navbar-mobile-menu/navbar-mobile-menu.component';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {HcIcon} from '../icon/icon.component';\n\n/** The navbar is a wrapper that positions branding, navigation, and other elements in a concise header. */\n@Component({\n    selector: 'hc-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NavbarComponent implements AfterViewInit, OnDestroy {\n    /** Display name of current user */\n    @Input()\n    user: string = '';\n\n    /** Url to application logo image file */\n    @Input()\n    appIcon: string = '';\n\n    /** Either url to brand icon image file or HcIcon object for a font glyph */\n    @Input()\n    brandIcon: string | HcIcon = '';\n\n    /** Router link triggered when home icon is clicked */\n    @Input()\n    homeUri: any[] | string = '';\n\n    /** Fixes the position of navbar to the top of the page. *Default is false.* */\n    @Input()\n    fixedTop: boolean = false;\n\n    @ContentChildren(NavbarMobileMenuComponent)\n    _mobileMenu: QueryList<NavbarMobileMenuComponent>;\n\n    @ContentChildren(NavbarLinkComponent)\n    _navLinks: QueryList<NavbarLinkComponent>;\n\n    @ViewChild('navbar', {static: false}) navbarContent: ElementRef;\n    @ViewChild('navlinks', {static: false}) navContent: ElementRef;\n\n    @ViewChild('moreLink', {static: false})\n    _navbarMore: HcPopoverAnchorDirective;\n\n    private unsubscribe$ = new Subject<void>();\n\n    private _menuOpen: boolean = false;\n    private _linkWidths: Array<number> = [];\n    private _linksTotalWidth: number = 0;\n    public _collapse: boolean = false;\n    public _moreList: Array<MoreItem> = [];\n\n    @HostListener('window:resize')\n    _navResize() {\n        if (this._navbarMore) {\n            this._navbarMore.closePopover();\n        }\n\n        this._moreList = [];\n        this._collapse = false;\n\n        // If links is zero the page is smaller than the first responsive breakpoint\n        if (this.navbarContent.nativeElement.clientWidth <= 0) {\n            return;\n        }\n\n        let linksContainerWidth: number = this.navContent.nativeElement.offsetWidth;\n        let curLinks: number = 0;\n\n        // Step through the links until we hit the end of the container, then collapse the\n        // remaining into a more menu\n        this._navLinks.forEach((t, i) => {\n            curLinks += this._linkWidths[i];\n\n            let moreWidth: number = this._linksTotalWidth > linksContainerWidth ? 116 : 0;\n            if (curLinks + moreWidth < linksContainerWidth) {\n                t.show();\n            } else {\n                t.hide();\n                this._collapse = true;\n                this._moreList.push({name: t.linkText, uri: t.uri});\n            }\n        });\n\n        this.ref.detectChanges();\n    }\n\n    constructor(private ref: ChangeDetectorRef) {}\n\n    /** Forces a recalculation of the navbar links to determine how many should be rolling into a More menu.\n     * Call this if you've updated the contents of any navbar links. */\n    refreshNavLinks() {\n        this._collectNavLinkWidths();\n        this._navResize();\n    }\n\n    private _collectNavLinkWidths() {\n        this._linkWidths = [];\n        this._linksTotalWidth = 0;\n        this._navLinks.forEach(t => {\n            const isHidden = t._hidden;\n            t.show();\n            this._linksTotalWidth += t._getWidth();\n            this._linkWidths.push(t._getWidth());\n            if (isHidden) {\n                t.hide();\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.refreshNavLinks();\n        }, 100);\n\n        // If links are added dynamically, recheck the navbar link sizing\n        this._navLinks.changes.pipe(takeUntil(this.unsubscribe$)).subscribe(() => this.refreshNavLinks());\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n\n    _toggleMobileMenu() {\n        if (this._menuOpen) {\n            this._mobileMenu.first.hide();\n            this._menuOpen = false;\n        } else {\n            this._mobileMenu.first.show();\n            this._menuOpen = true;\n        }\n    }\n\n    _menuClick(event: any) {\n        let clickTarget: string = event.target.outerHTML;\n\n        // Verify that the click in the mobile menu came from a navigation item\n        if (clickTarget.indexOf('hclistline') >= 0 && clickTarget.indexOf('menu-dropdown') === -1) {\n            this._toggleMobileMenu();\n        }\n    }\n\n    get _mobileMenuIcon(): string {\n        return this._menuOpen ? 'fa-times' : 'fa-bars';\n    }\n\n    _moreClick() {\n        if (this._navbarMore) {\n            this._navbarMore.closePopover();\n        }\n    }\n\n    _brandIconType(): string {\n        return typeof this.brandIcon;\n    }\n\n    _brandIconSet(): string {\n        if (this.brandIcon && typeof this.brandIcon !== 'string') {\n            return this.brandIcon.fontSet;\n        } else {\n            return '';\n        }\n    }\n\n    _brandIconGlyph(): string {\n        if (this.brandIcon && typeof this.brandIcon !== 'string') {\n            return this.brandIcon.fontIcon;\n        } else {\n            return '';\n        }\n    }\n\n    _brandIconSize(): string {\n        if (this.brandIcon && typeof this.brandIcon !== 'string' && this.brandIcon.fontSize) {\n            return this.brandIcon.fontSize + 'px';\n        }\n        return '37px';\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NavbarComponent} from './navbar.component';\nimport {NavbarLinkComponent} from './navbar-link/navbar-link.component';\nimport {NavbarMobileMenuComponent} from './navbar-mobile-menu/navbar-mobile-menu.component';\nimport {RouterModule} from '@angular/router';\nimport {IconModule} from '../icon/icon.module';\nimport {PopModule} from '../pop/popover.module';\n\n@NgModule({\n    imports: [CommonModule, RouterModule, IconModule, PopModule],\n    declarations: [NavbarComponent, NavbarLinkComponent, NavbarMobileMenuComponent],\n    exports: [NavbarComponent, NavbarLinkComponent, NavbarMobileMenuComponent]\n})\nexport class NavbarModule {}\n","import {Subscriber, Observable} from 'rxjs';\n\n/** Abstract class for common initialization functionality */\nexport abstract class Initializable {\n    /** Whether this directive has been marked as initialized. */\n    _isInitialized = false;\n\n    /**\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\n     * not expect to be populated after.\n     */\n    _pendingSubscribers: Subscriber<never>[] | null = [];\n\n    /**\n     * Observable stream that emits when the directive initializes. If already initialized, the\n     * subscriber is stored to be notified once _markInitialized is called.\n     * @docs-private\n     */\n    initialized = new Observable<never>(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n            this._notifySubscriber(subscriber);\n        } else {\n            this._pendingSubscribers!.push(subscriber);\n        }\n    });\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized(): void {\n        if (this._isInitialized) {\n            throw Error('This directive has already been marked as initialized and should not be called twice.');\n        }\n\n        this._isInitialized = true;\n\n        this._pendingSubscribers!.forEach(this._notifySubscriber);\n        this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber: Subscriber<never>): void {\n        subscriber.next();\n        subscriber.complete();\n    }\n}\n","import {EventEmitter, Input, Output, OnInit, Component} from '@angular/core';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Initializable} from '../shared/initializable';\nimport {PageEvent} from './page-event';\nimport {map, distinctUntilChanged} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n/**\n * Base Pagination class for shared functionality\n * */\n@Component({\n    template: ''\n})\nexport class BasePaginationComponent extends Initializable implements OnInit {\n    public static _DEFAULT_PAGE_SIZE = 20;\n\n    /**\n     * The total number of items to be paged through\n     */\n    @Input()\n    get length(): number {\n        return this._length;\n    }\n    set length(value: number) {\n        this._length = coerceNumberProperty(value);\n    }\n    private _length: number = 0;\n\n    private _pageNumber: number = 1;\n    /** The currently displayed page. *Defaults to 1.* */\n    @Input()\n    get pageNumber(): number {\n        return this._pageNumber;\n    }\n    set pageNumber(value: number) {\n        const prevPageNumber = this._pageNumber;\n        this._pageNumber = value;\n\n        const sanitizedValue = this._sanitizePageNumber(value);\n        if (sanitizedValue !== value) {\n            setTimeout(() => (this.pageNumber = sanitizedValue));\n        } else {\n            this.pageNumberChange.emit(this.pageNumber);\n            this._emitPageEvent(prevPageNumber);\n        }\n    }\n\n    /** Number of items to display on a page. *Defaults to 20.* */\n    @Input()\n    get pageSize(): number {\n        return this._pageSize;\n    }\n    set pageSize(value: number) {\n        this._pageSize = coerceNumberProperty(value);\n        this._pageSizeUpdated();\n        this.pageSizeChange.emit(this.pageSize);\n        this._emitPageEvent(this.pageNumber);\n    }\n    private _pageSize: number = BasePaginationComponent._DEFAULT_PAGE_SIZE;\n\n    /** Event emitted when the paginator changes the page size or page index. */\n    @Output()\n    readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n    /** Emits the new page number when the page number changes. */\n    @Output()\n    readonly pageNumberChange: EventEmitter<number> = new EventEmitter<number>();\n    /** Emits the new page size when the page size changes. */\n    @Output()\n    readonly pageSizeChange: EventEmitter<number> = new EventEmitter<number>();\n\n    ngOnInit() {\n        this._markInitialized();\n    }\n\n    /**\n     * The computed total number of pages\n     */\n    get totalPages(): number {\n        return Math.ceil(this._length / this._pageSize);\n    }\n\n    get _isFirstPage() {\n        return this._pageNumber === 1;\n    }\n\n    get _isLastPage() {\n        return !!(this.totalPages && this._pageNumber === this.totalPages);\n    }\n\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 11-20) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 11th item will still be displayed.\n     */\n    _changePageSize(pageSize: number) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = (this.pageNumber - 1) * this.pageSize;\n        this.pageSize = pageSize;\n        this.pageNumber = Math.ceil(startIndex / pageSize) + 1;\n    }\n\n    _pageSizeUpdated() {}\n\n    private _sanitizePageNumber(pageNumber: any): number {\n        const number = Math.max(coerceNumberProperty(pageNumber), 1);\n        return number > this.totalPages ? this.totalPages : number;\n    }\n\n    private _emitPageEvent(previousPageNumber: number) {\n        this.page.emit({\n            previousPageNumber,\n            pageNumber: this.pageNumber,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {BasePaginationComponent} from './base-pagination';\n\n/** The pagination control enables the user to navigate across paged content.\n * Although commonly used with tables and data grids, this control may be used any place where paged data is used.\n * @inheritdoc\n * */\n@Component({\n    selector: 'hc-pagination',\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent extends BasePaginationComponent implements OnInit {\n    /** The set of provided page size options to display to the user. *Defaults to [10, 20, 50].* */\n    @Input()\n    get pageSizeOptions(): number[] {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value: number[]) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    private _pageSizeOptions: number[] = [10, 20, 50];\n\n    isFocused: boolean = false;\n\n    /** Displayed set of page size options. Will be sorted and include current page size. */\n    _displayedPageSizeOptions: number[] = [];\n\n    /** Whether to hide the page size selection UI from the user. *Defaults to false.* */\n    @Input()\n    get hidePageSize(): boolean {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value: boolean) {\n        this._hidePageSize = !!value;\n    }\n    private _hidePageSize = false;\n\n    ngOnInit() {\n        this._updateDisplayedPageSizeOptions();\n        super.ngOnInit();\n    }\n\n    get _visiblePages(): Array<number | null> {\n        /*\n         * if there aren't any pages, don't display any\n         */\n        if (!this.totalPages) {\n            return [];\n        }\n\n        /*\n         * if there are less than nine pages, display them all\n         */\n        if (this.totalPages <= 9) {\n            const visiblePages: number[] = [];\n            for (let i = 1; i <= this.totalPages; i++) {\n                visiblePages.push(i);\n            }\n            return visiblePages;\n        }\n\n        /*\n         * There should always be exactly nine elements in the paging control.\n         * Let n = total pages, p = current page, ... are non-clickable ellipses\n         * If the current page number is less than 6, display 1, 2, 3, 4, 5, 6, ..., n-1, n\n         * If the current page number within is within 4 of the max, display 1, 2, ..., n-5, n-4, n-3, n-2, n-1, n\n         * Otherwise, display 1, 2, ..., p-1, p, p+1, ..., n-1, n\n         */\n        const n = this.totalPages;\n        const p = this.pageNumber || 1;\n\n        if (p < 6) {\n            return [1, 2, 3, 4, 5, 6, null, n - 1, n];\n        } else if (p >= n - 4) {\n            return [1, 2, null, n - 5, n - 4, n - 3, n - 2, n - 1, n];\n        } else {\n            return [1, 2, null, p - 1, p, p + 1, null, n - 1, n];\n        }\n    }\n\n    get _collapsedVisiblePages(): Array<number | null> {\n        /*\n         * if there aren't any pages, don't display any\n         */\n        if (!this.totalPages) {\n            return [];\n        }\n\n        /*\n         * if there are less than five pages, display them all\n         */\n        if (this.totalPages <= 5) {\n            const visiblePages: number[] = [];\n            for (let i = 1; i <= this.totalPages; i++) {\n                visiblePages.push(i);\n            }\n            return visiblePages;\n        }\n\n        /*\n         * There should always be exactly five elements in the paging control when collapsed.\n         * Let n = total pages, p = current page, ... are non-clickable ellipses\n         * If the current page number is less than 4, display 1, 2, 3, ..., n\n         * If the current page number within is within 2 of the max, display 1, ..., n-2, n-1, n\n         * Otherwise, display 1, ..., p, ..., n\n         */\n        const n = this.totalPages;\n        const p = this.pageNumber || 1;\n\n        if (p < 4) {\n            return [1, 2, 3, null, n];\n        } else if (p >= n - 2) {\n            return [1, null, n - 2, n - 1, n];\n        } else {\n            return [1, null, p, null, n];\n        }\n    }\n\n    _pageSizeUpdated() {\n        this._updateDisplayedPageSizeOptions();\n    }\n\n    _previousPage() {\n        if (this._isFirstPage) {\n            return;\n        }\n        this._goToPage((this.pageNumber || 1) - 1);\n    }\n\n    _goToPage(pageNum: number) {\n        this.pageNumber = pageNum;\n    }\n\n    _nextPage() {\n        if (this._isLastPage) {\n            return;\n        }\n        this._goToPage((this.pageNumber || 1) + 1);\n    }\n\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 11-20) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 11th item will still be displayed.\n     */\n    _changePageSize(pageSize: number) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = (this.pageNumber - 1) * this.pageSize + 1;\n        this.pageSize = pageSize;\n        this.pageNumber = Math.ceil(startIndex / pageSize) || 1;\n    }\n\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    private _updateDisplayedPageSizeOptions() {\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this.pageSize = this.pageSizeOptions.length !== 0 ? this.pageSizeOptions[0] : BasePaginationComponent._DEFAULT_PAGE_SIZE;\n        }\n\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n    }\n}\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {validateStyleInput} from '../button/button.component';\nimport {BasePaginationComponent} from './base-pagination';\n\n/** A simple \"load more\" pagination button.\n * @inheritdoc\n * */\n@Component({\n    selector: 'hc-load-more-pagination',\n    templateUrl: './load-more-pagination.component.html',\n    styleUrls: ['./load-more-pagination.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoadMorePaginationComponent extends BasePaginationComponent implements OnInit {\n    /**\n     * Text to show on the button. *Defaults to 'Load more'.*\n     */\n    @Input()\n    buttonText = 'Load more';\n\n    /** Sets style of button. Choose from: `'primary' | 'primary-alt' | 'destructive' | 'neutral' | 'secondary' | 'link' | 'link-inline'`.\n     * *Defaults to `'secondary'`.*\n     */\n    @Input()\n    get buttonStyle(): string {\n        return this._style;\n    }\n\n    set buttonStyle(btnStyle: string) {\n        validateStyleInput(btnStyle);\n        this._style = btnStyle;\n    }\n    private _style: string = 'secondary';\n\n    _loadNextPage() {\n        if (this._isLastPage) {\n            return;\n        }\n        this.pageNumber = this.pageNumber + 1;\n    }\n}\n","/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n    /** The current page index */\n    pageNumber: number;\n\n    /** Index of the page that was selected previously */\n    previousPageNumber?: number;\n\n    /** The current page size */\n    pageSize: number;\n\n    /** The current total number of items being paged */\n    length: number;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonModule} from '../button/button.module';\nimport {SelectModule} from '../select/select.module';\nimport {IconModule} from '../icon/icon.module';\nimport {PaginationComponent} from './pagination.component';\nimport {LoadMorePaginationComponent} from './load-more-pagination.component';\nimport {BasePaginationComponent} from './base-pagination';\n\n@NgModule({\n    imports: [CommonModule, ButtonModule, IconModule, SelectModule],\n    declarations: [PaginationComponent, LoadMorePaginationComponent, BasePaginationComponent],\n    exports: [PaginationComponent, LoadMorePaginationComponent, BasePaginationComponent]\n})\nexport class PaginationModule {}\n","import {Observable} from 'rxjs';\n\n/**\n * @type\n * @ignore\n */\nexport type PicklistValueType = 'values' | 'valuesets' | 'both';\n\n/** Represents a simple picklist option. */\nexport interface IValueOption {\n    /** Any unique string identifier. */\n    code: string;\n    /** The name of the option that will be displayed in the UI. */\n    title: string;\n}\n\n/** Represents a collection or bundle of picklist options. */\nexport interface IValueSetOption extends IValueOption {\n    /** Number of subvalues. Required because of the fact that `subValues` isn't always preloaded. */\n    subValueCount: number;\n    /** Collection of values in this value set. The code and title of each subvalue should match what\n     * is used by the value when used outside of a valueset. Note: The `subValues` array can initially be\n     * empty if the `getValuesForValueset` callback function is provided. */\n    subValues: IValueOption[];\n}\n\nexport interface IPicklistOptions {\n    /** A collection of values. */\n    values: IValueOption[];\n    /** A collection of value sets, which may or may not be pre-seeded with its subvalues. */\n    valueSets: IValueSetOption[];\n}\n\nexport interface IPicklistSettings {\n    /** True if code is considered important. If so, search and sorting will use the code. *Defaults to false.* */\n    codeIsSignificant?: boolean;\n    /** Set to true to use valuesets. *Defaults to false.* */\n    useValuesets?: boolean;\n    /** Set to true to show text in the header. *Defaults to true.* */\n    showHeaderText?: boolean;\n    /** Text for left header. *Defaults to \"Available\".* */\n    leftHeaderText?: string;\n    /** Text for right header. *Defaults to \"Selected\".* */\n    rightHeaderText?: string;\n    /** How to sort options in the pane. Options: `asc` | `desc` | `none`; *Defaults to `none`.* */\n    sort?: string;\n    /** Pre-seed the modal with selected options. */\n    selected?: IPicklistOptions;\n    /** Available options in the picklist. Set with local values or callbacks to retrieve remote values. */\n    options?: IPicklistOptionsSource;\n}\n\nexport interface IPicklistOptionsSource {\n    /** Collection of values to select from. */\n    values?: IValueOption[];\n    /** Collection of value sets to select from. */\n    valueSets?: IValueSetOption[];\n    /** Will the results from the server be paged? *Defaults to false.* Not used without `getOptions` callback. */\n    isPaged?: boolean;\n    /** What size results will be returned from the server? *Defaults to 100.* Not used without `getOptions` callback. */\n    pageSize?: number;\n    /** Callback function retrieve values. */\n    getOptions?: (params: PicklistRemoteQueryOptions) => Observable<IPicklistRemoteQueryResponse>;\n    /** Callback function to retrieve values for a value set. */\n    getValuesForValueset?: (code: string) => Observable<IValueOption[]>;\n}\n\n/**\n * @ignore\n */\nexport class PicklistOptionsSource implements IPicklistOptionsSource {\n    public values = new Array<IValueOption>();\n    public valueSets = new Array<IValueSetOption>();\n    public isPaged = false;\n    public pageSize = 100;\n    public getOptions?: (params: PicklistRemoteQueryOptions) => Observable<IPicklistRemoteQueryResponse>;\n    public getValuesForValueset?: (code: string) => Observable<IValueOption[]>;\n\n    public optionsAreLocal(): boolean {\n        return !this.getOptions;\n    }\n}\n\n/**\n * @ignore\n */\nexport class PicklistSettings implements IPicklistSettings {\n    public codeIsSignificant = false;\n    public useValuesets = false;\n    public showHeaderText = true;\n    public leftHeaderText = 'Available';\n    public rightHeaderText = 'Selected';\n    public sort = 'none';\n    public selected = {values: new Array<IValueOption>(), valueSets: new Array<IValueSetOption>()}; // options selected in modal\n    public options = new PicklistOptionsSource(); // options available for choosing\n}\n\n/** Interface to be used as part of the response when loading values over HTTP. */\nexport interface IPagedCollection<IT> {\n    /** Page being returned in the response, and the number of items per page. */\n    pagerSettings: IPageSettings;\n    /** Total number of items, including those already on the client or included in this response. */\n    totalItems: number;\n    /** Total number of pages. */\n    totalPages: number;\n    /** An array of `IValueOption` or `IValuesetOption`. */\n    values: IT[];\n}\n\nexport interface IPageSettings {\n    /** Current page of the request or response. */\n    currentPage: number;\n    /** Total number of items on a page */\n    itemsPerPage: number;\n}\n\n/** Interface to be used for the response when loading values over HTTP. This the type your `getOptions()` callback should return. */\nexport interface IPicklistRemoteQueryResponse {\n    /** Paged collection of `IValueOptions`. Only used if this picklist has `optionSource.isPaged` set to true. */\n    pagedValues?: IPagedCollection<IValueOption>;\n    /** Paged collection of `IValueSetOptions`. Only used if this picklist has `optionSource.isPaged` set to true. */\n    pagedValueSets?: IPagedCollection<IValueSetOption>;\n    /** An array of `{ code: string, title: string}`. Only used if this picklist has `optionSource.isPaged` set to false. */\n    values?: Array<IValueOption>;\n    /** An array of `{ code: string, title: string, subValueCount: number, subValues: IValueOption[]}`.\n     * Only used if this picklist has `optionSource.isPaged` set to false. Note: The `subValues` array can\n     * initially be empty if the `getValuesForValueset` callback function is provided. */\n    valueSets?: Array<IValueSetOption>;\n}\n\n/** An instance of this class will be sent to the `getOptions()` callback if loading values over HTTP. */\nexport class PicklistRemoteQueryOptions {\n    /** Page and number of items per page requested for values. */\n    valuePageSettings?: IPageSettings;\n    /** Page and number of items per page requested for value sets. */\n    valueSetPageSettings?: IPageSettings;\n\n    constructor(\n        /** The settings for this picklist. Particularly, `codeIsSignificant`, `useValuesets`,\n         * and selected values will be useful in obtaining the needed values & value sets. */\n        public picklist: IPicklistSettings,\n        /** Search term entered by the user that triggered the request. */\n        public searchTerm: string,\n        /** Which types of values should we be getting? */\n        public valueTypeToQuery: PicklistValueType\n    ) {}\n}\n","import {Component, EventEmitter, forwardRef, Input, Output, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {PicklistPaneComponent} from './pane/picklist-pane.component';\nimport {IPicklistOptions, IPicklistSettings, IValueOption, PicklistOptionsSource, PicklistSettings} from './picklist.model';\n\nconst supportedSortModes = ['asc', 'desc', 'none'];\nexport function validateSortInput(inputStr: string) {\n    if (supportedSortModes.indexOf(inputStr) < 0) {\n        throw Error('Unsupported sort input value: ' + inputStr);\n    }\n}\n\n@Component({\n    selector: 'hc-picklist',\n    templateUrl: 'picklist.component.html',\n    styleUrls: ['picklist.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => PicklistComponent),\n            multi: true\n        }\n    ]\n})\nexport class PicklistComponent implements ControlValueAccessor {\n    /**\n     * Settings for the picklist. Internally, this will trigger a call to `reset()`.\n     */\n    @Input()\n    public set settings(settings: PicklistSettings) {\n        this.reset(settings);\n    }\n    public get settings(): PicklistSettings {\n        return this.picklistSettings;\n    }\n    /**\n     * An array of unique strings to be used as the picklist options.\n     */\n    @Input()\n    public set simpleOptions(options: Array<string> | null) {\n        this.updateStateFromStringOptions(options);\n    }\n    public get simpleOptions(): Array<string> | null {\n        return this.stringOptions;\n    }\n    /**\n     * Set to true to show text in the header. *Defaults to true.*\n     */\n    @Input()\n    public set showHeaderText(shouldShow: boolean) {\n        this.update({showHeaderText: shouldShow});\n    }\n    public get showHeaderText(): boolean {\n        return this.picklistSettings.showHeaderText;\n    }\n    /**\n     * Text for left header. *Defaults to \"Available\".*\n     */\n    @Input()\n    public set leftHeaderText(text: string) {\n        this.update({leftHeaderText: text});\n    }\n    public get leftHeaderText(): string {\n        return this.picklistSettings.leftHeaderText;\n    }\n    /**\n     * Text for right header. *Defaults to \"Selected\".*\n     */\n    @Input()\n    public set rightHeaderText(text: string) {\n        this.update({rightHeaderText: text});\n    }\n    public get rightHeaderText(): string {\n        return this.picklistSettings.rightHeaderText;\n    }\n\n    /**\n     * How to sort options in the pane. Options: `asc` | `desc` | `none`; *Defaults to `none`.*\n     */\n    @Input()\n    public set sort(sort: string) {\n        validateSortInput(sort);\n        this.update({sort: sort});\n    }\n    public get sort(): string {\n        return this.picklistSettings.sort;\n    }\n\n    @ViewChild('availableList', {static: true})\n    public _available: PicklistPaneComponent | undefined;\n    @ViewChild('confirmedList', {static: true})\n    public _confirmed: PicklistPaneComponent | undefined;\n    /** Fired when a change is made to the picklist selection. */\n    @Output()\n    public changed = new EventEmitter();\n    private picklistSettings = new PicklistSettings();\n    public get _leftToRightMoveBtnIsDisabled(): boolean {\n        return this._available ? !this._available.isAnySelected() : false;\n    }\n    private stringOptions: Array<string> | null = null;\n\n    /**\n     * Current selected value of the picklist. Will be either `IPicklistOptions` or `string[]` depending on the type of options provided.\n     */\n    public set value(model: IPicklistOptions | string[]) {\n        const selectedValues: IPicklistOptions = {values: [], valueSets: []};\n        if (this.picklistModelisArray(model)) {\n            const selected = this.convertStringsToValueOptions(model);\n            selectedValues.values = selected || [];\n        } else {\n            selectedValues.values = model.values || [];\n            selectedValues.valueSets = model.valueSets || [];\n        }\n        this.update({selected: selectedValues});\n    }\n    public get value(): IPicklistOptions | string[] {\n        if (this.stringOptions) {\n            return this.picklistSettings.selected.values.map(v => v.title);\n        } else {\n            return this.picklistSettings.selected;\n        }\n    }\n    public onChange: any = () => {};\n    public onTouched: any = () => {};\n    public registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n    public registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n    public writeValue(value: IPicklistOptions | string[]) {\n        if (value) {\n            this.value = value;\n        }\n    }\n\n    /**\n     * Will update the picklist with the given settings, maintaining any previous settings that have not been overridden.\n     */\n    public update(settings: IPicklistSettings) {\n        const updatedSettings = Object.assign(this.picklistSettings, settings);\n        this.reset(updatedSettings);\n    }\n\n    /**\n     * Will reset the picklist settings with the given settings. (Clears out any previous settings.)\n     */\n    public reset(settings: IPicklistSettings = new PicklistSettings()) {\n        this.picklistSettings = Object.assign(new PicklistSettings(), settings);\n        this.resetPanes(this.picklistSettings);\n        this.setActiveValueType(this.picklistSettings.useValuesets ? 'valueSets' : 'values');\n        this.applyChangeToModel();\n    }\n\n    /**\n     * Will change the active tab. (Will do nothing if `settings.useValuesets` is false.)\n     */\n    public setActiveValueType(type: 'values' | 'valueSets') {\n        if (!this._available) {\n            console.warn('Available picklist pane not available yet.');\n            return;\n        }\n        if (!this.settings.useValuesets) {\n            type = 'values';\n        }\n\n        this._available.valueList.isActive = type === 'values';\n        this._available.valueSetList.isActive = type === 'valueSets';\n        this._available.selectNone();\n        this._available.scrollToTop();\n    }\n\n    /**\n     * Will move all selected items from the given pane into its companion pane. Used internally by the left and right arrow buttons.\n     * @param pane the pane from which we are moving items out of\n     */\n    public moveSelectedItems(pane: PicklistPaneComponent) {\n        const shouldBreakValuesets = pane === this._confirmed;\n        const selectedOptions = pane.listService.moveOutSelectedOptions(shouldBreakValuesets);\n        if (pane.companion) {\n            pane.companion.listService.addOptions(selectedOptions);\n        } else {\n            console.warn('This pane does not have a companion pane to move the select options in to.');\n        }\n        pane.filterService.reloadIfEmpty();\n        this.applyChangeToModel();\n    }\n\n    private updateStateFromStringOptions(options: Array<string> | null) {\n        const valueOptions = this.convertStringsToValueOptions(options);\n        this.stringOptions = options;\n        this.update({options: {values: valueOptions || []}});\n    }\n\n    private resetPanes(settings: IPicklistSettings) {\n        if (!(this._available && this._confirmed)) {\n            console.warn('Picklist panes not available yet.');\n            return;\n        }\n\n        const confirmedSource = new PicklistOptionsSource();\n        confirmedSource.values = this.picklistSettings.selected.values.slice(0);\n        confirmedSource.valueSets = this.picklistSettings.selected.valueSets.slice(0);\n        confirmedSource.getValuesForValueset = this.picklistSettings.options.getValuesForValueset;\n        this._confirmed.reset(confirmedSource, this.picklistSettings, this._available, false);\n\n        const availableSource = Object.assign(new PicklistOptionsSource(), this.picklistSettings.options);\n        this._available.reset(availableSource, this.picklistSettings, this._confirmed, true);\n    }\n\n    private applyChangeToModel() {\n        if (!(this._available && this._confirmed)) {\n            console.warn('Picklist panes not available yet.');\n            return;\n        }\n\n        this.picklistSettings.selected.values.length = 0;\n        this.picklistSettings.selected.valueSets.length = 0;\n        this._confirmed.valueList.options.forEach(e => this.picklistSettings.selected.values.push(e.option));\n        this._confirmed.valueSetList.options.forEach(e => this.picklistSettings.selected.valueSets.push(e.option));\n\n        this.changed.emit();\n        this.onChange(this.value);\n        this.onTouched();\n    }\n\n    private convertStringsToValueOptions(vals: Array<string> | null): IValueOption[] | null {\n        return vals ? vals.map(o => ({code: `${o}`, title: `${o}`})) : null;\n    }\n\n    private picklistModelisArray(model: IPicklistOptions | Array<string>): model is Array<string> {\n        const array = <Array<string>>model;\n        return array && array.length !== undefined;\n    }\n}\n","import {from, Observable} from 'rxjs';\nimport {IValueOption, IValueSetOption} from '../picklist.model';\n\nexport class FilterableSelectList<T extends SelectListOption> {\n    public selectedOptions = new Map<string, T>();\n    public lastClickedOption: T | null = null;\n    public filteredOptions = new Array<T>();\n    public isActive = true;\n\n    public additionalRemoteOptions = 0;\n    public loadingOptions: Observable<boolean> = from([]);\n    public appendingOptions: Observable<boolean> = from([]);\n    public codeIsSignificant: boolean = false;\n    public sort: string;\n    constructor(public options = new Map<string, T>()) {}\n}\n\nexport class SubSelectList extends FilterableSelectList<ValueListOption> {\n    constructor(public parentValueSet: ValueSetListOption, public options = new Map<string, ValueListOption>()) {\n        super(options);\n    }\n}\n\nexport function isSubList(model: FilterableSelectList<SelectListOption>): model is SubSelectList {\n    const subList = <SubSelectList>model;\n    return subList && subList.parentValueSet !== undefined;\n}\n\nexport class SelectListOption {\n    public selected: boolean;\n\n    constructor(public option: any, public code: string) {\n        this.selected = false;\n    }\n}\n\nexport class ValueListOption extends SelectListOption {\n    constructor(option: IValueOption, code: string) {\n        super(option, code);\n    }\n}\n\nexport class ValueSetListOption extends SelectListOption {\n    public subValuesSelectList: SubSelectList;\n    public showValues = false;\n    public loadingValues = false;\n\n    constructor(option: IValueSetOption, code: string) {\n        super(option, code);\n        this.subValuesSelectList = new SubSelectList(this);\n    }\n}\n\nexport class PicklistValueOptions {\n    public values = new Map<string, ValueListOption>();\n    public valueSets = new Map<string, ValueSetListOption>();\n}\n","import {Injectable} from '@angular/core';\nimport {FilterableSelectList, SelectListOption} from '../pane/picklist-pane.model';\n\n@Injectable()\nexport class PicklistFilterLocalService {\n    public filter<T extends SelectListOption>(list: FilterableSelectList<T>, searchTokens: string[]) {\n        list.filteredOptions = [];\n        list.options.forEach(item => {\n            if (this.itemHasSearchTokens(list, item, searchTokens)) {\n                list.filteredOptions.push(item);\n            }\n        });\n        if (list.sort !== \"none\") {\n            list.filteredOptions.sort(this.getSortFunc(list));\n        }\n    }\n\n    public itemHasSearchTokens<T extends SelectListOption>(list: FilterableSelectList<T>, item: T, searchTokens: string[]): boolean {\n        const valuesToSearchIn = [item.option.title, list.codeIsSignificant ? item.option.code : ''];\n        valuesToSearchIn.filter(val => !!val);\n        return searchTokens.every(token => valuesToSearchIn.some(value => value.toLocaleLowerCase().indexOf(token) > -1));\n    }\n\n    private getSortFunc<T extends SelectListOption>(list: FilterableSelectList<T>): (a: any, b: any) => number {\n        const sortField = list.codeIsSignificant ? 'code' : 'title';\n        return (a, b) => a.option[sortField].localeCompare(b.option[sortField]) * (list.sort === \"asc\" ? -1 : 1);\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {IValueOption, IValueSetOption, PicklistOptionsSource, PicklistSettings} from '../picklist.model';\nimport {FilterableSelectList, SelectListOption, ValueListOption, ValueSetListOption} from '../pane/picklist-pane.model';\nimport {PicklistPaneComponent} from '../pane/picklist-pane.component';\nimport {PicklistFilterLocalService} from './picklist-filter-local.service';\n\n@Injectable()\nexport class PicklistStateService {\n    public pane: PicklistPaneComponent;\n    public picklist = new PicklistSettings();\n    public optionsSource = new PicklistOptionsSource();\n    public valueList = new FilterableSelectList<ValueListOption>();\n    public valueSetList = new FilterableSelectList<ValueSetListOption>();\n\n    public constructor(private localFilterService: PicklistFilterLocalService) {}\n\n    public reset(settings: PicklistSettings, optionsSource: PicklistOptionsSource, pane: PicklistPaneComponent) {\n        this.picklist = settings;\n        this.pane = pane;\n        this.optionsSource = optionsSource;\n        this.clearList(this.valueList);\n        this.clearList(this.valueSetList);\n    }\n\n    public updateValueList(options: IValueOption[], searchTokens: string[] = []) {\n        const listOptions = options.map(v => new ValueListOption(v, v.code));\n        const companionList = this.pane.companion ? this.pane.companion.valueList : null;\n        this.valueList.sort = this.picklist.sort;\n        this.updateList(listOptions, this.valueList, companionList, searchTokens);\n    }\n\n    public updateValueSetList(options: IValueSetOption[], searchTokens: string[] = []) {\n        const listOptions = new Array<ValueSetListOption>();\n        const companionList = this.pane.companion ? this.pane.companion.valueSetList : null;\n        options.forEach(v => {\n            const listOption = new ValueSetListOption(v, v.code);\n            if (v.subValues && v.subValues.length > 0) {\n                const subValueListOptions = v.subValues.map((sv: IValueOption) => new ValueListOption(sv, sv.code));\n                this.updateList(subValueListOptions, listOption.subValuesSelectList, null, searchTokens);\n            }\n            listOptions.push(listOption);\n        });\n        this.updateList(listOptions, this.valueSetList, companionList, searchTokens);\n    }\n\n    public clearList<T extends SelectListOption>(list: FilterableSelectList<T>) {\n        list.options.clear();\n        list.filteredOptions.length = 0;\n        list.selectedOptions.clear();\n        list.lastClickedOption = null;\n        list.additionalRemoteOptions = 0;\n    }\n\n    private updateList<T extends SelectListOption>(\n        options: T[],\n        list: FilterableSelectList<T>,\n        companionList: FilterableSelectList<T> | null = null,\n        searchTokens: string[] = []\n    ) {\n        if (!this.optionsSource.isPaged && this.pane.shouldExcludeCompanion && companionList) {\n            options = options.filter(o => !companionList.options.get(o.code));\n        }\n        options.forEach(o => {\n            list.options.set(o.code, o);\n            list.filteredOptions.push(o);\n        });\n        this.localFilterService.filter(list, searchTokens);\n    }\n}\n","import {from, Observable, of, Subject, Subscription} from 'rxjs';\n\nimport {takeUntil} from 'rxjs/operators';\nimport {Injectable} from '@angular/core';\n\nimport {PicklistFilterService} from './picklist-filter.service';\nimport {PicklistStateService} from './picklist-state.service';\nimport {FilterableSelectList, ValueListOption, ValueSetListOption} from '../pane/picklist-pane.model';\nimport {\n    IPagedCollection,\n    IPicklistRemoteQueryResponse,\n    IValueOption,\n    IValueSetOption,\n    PicklistRemoteQueryOptions,\n    PicklistValueType\n} from '../picklist.model';\n\n@Injectable()\nexport class PicklistFilterRemoteService {\n    public filterService?: PicklistFilterService;\n    public get valueList(): FilterableSelectList<ValueListOption> {\n        return this.stateService.valueList;\n    }\n    public get valueSetList(): FilterableSelectList<ValueSetListOption> {\n        return this.stateService.valueSetList;\n    }\n    public get searchTerm(): string {\n        return this.filterService ? this.filterService.searchTerm : '';\n    }\n    public currentValuePage = 1;\n    public currentValueSetPage = 1;\n    private cancelSearch = new Subject<void>();\n    private get cancelSearch$(): Observable<void> {\n        return this.cancelSearch.asObservable();\n    }\n    private options$: Observable<IPicklistRemoteQueryResponse> = from([]);\n\n    public constructor(private stateService: PicklistStateService) {}\n\n    public reset(filterService: PicklistFilterService) {\n        this.filterService = filterService;\n        this.currentValuePage = 1;\n        this.currentValueSetPage = 1;\n    }\n\n    public filter(type: PicklistValueType = 'both', shouldAppend = false, selectAllCount: number | null = null): Subscription {\n        if (!this.stateService.optionsSource.getOptions) {\n            console.warn('Remote query callback not provided for this picklist.');\n            return from([]).subscribe();\n        }\n\n        if (this.options$) {\n            this.cancelSearch.next();\n        }\n        const params = this.buildRemoteQueryParams(type, selectAllCount);\n        if (!shouldAppend) {\n            this.clearFilteredOptions(type);\n        }\n        this.resetPagingForSelectAllIfNeeded(selectAllCount);\n        this.options$ = this.stateService.optionsSource.getOptions(params).pipe(takeUntil(this.cancelSearch$));\n\n        return this.options$.subscribe(\n            options => {\n                this.processIncomingRemoteOptions(options, type, shouldAppend);\n            },\n            () => {\n                console.warn('Unable to filter options');\n                this.clearLists('both');\n                return of({});\n            },\n            () => {\n                this.options$ = of({});\n            }\n        );\n    }\n\n    private processIncomingRemoteOptions(options: IPicklistRemoteQueryResponse, type: PicklistValueType = 'both', shouldAppend = false) {\n        if (!shouldAppend) {\n            this.clearLists(type);\n        }\n\n        if (this.stateService.optionsSource.isPaged) {\n            if (options.pagedValues) {\n                this.processPagedValues(options.pagedValues);\n            }\n            if (options.pagedValueSets) {\n                this.processPagedValueSets(options.pagedValueSets);\n            }\n        } else {\n            if (options.values) {\n                this.stateService.updateValueList(options.values);\n            }\n            if (options.valueSets) {\n                this.stateService.updateValueSetList(options.valueSets);\n            }\n            this.valueList.additionalRemoteOptions = 0;\n            this.valueSetList.additionalRemoteOptions = 0;\n        }\n    }\n\n    private processPagedValues(pagedValues: IPagedCollection<IValueOption>) {\n        this.stateService.updateValueList(pagedValues.values);\n        this.valueList.additionalRemoteOptions = pagedValues.totalItems - this.valueList.options.size;\n    }\n\n    private processPagedValueSets(pagedValueSets: IPagedCollection<IValueSetOption>) {\n        this.stateService.updateValueSetList(pagedValueSets.values);\n        this.valueSetList.additionalRemoteOptions = pagedValueSets.totalItems - this.valueSetList.options.size;\n    }\n\n    private buildRemoteQueryParams(type: PicklistValueType, selectAllCount: number | null = null): PicklistRemoteQueryOptions {\n        const params = new PicklistRemoteQueryOptions(this.stateService.picklist, this.searchTerm, type);\n        if (type === 'values' || type === 'both') {\n            params.valuePageSettings = this.buildPageSettings(this.currentValuePage, selectAllCount);\n        }\n\n        if (type === 'valuesets' || type === 'both') {\n            params.valueSetPageSettings = this.buildPageSettings(this.currentValueSetPage, selectAllCount);\n        }\n        return params;\n    }\n\n    private buildPageSettings(currentPage: number, selectAllCount: number | null) {\n        const pagerSettings = {currentPage: 1, itemsPerPage: this.stateService.optionsSource.pageSize};\n        pagerSettings.currentPage = selectAllCount ? 1 : currentPage;\n        pagerSettings.itemsPerPage = selectAllCount || pagerSettings.itemsPerPage;\n        return pagerSettings;\n    }\n\n    private resetPagingForSelectAllIfNeeded(selectAllCount: number | null = null) {\n        if (selectAllCount) {\n            this.currentValuePage = Math.floor(selectAllCount / this.stateService.optionsSource.pageSize);\n        }\n    }\n\n    private clearLists(type: PicklistValueType) {\n        if (type === 'both' || type === 'values') {\n            this.stateService.clearList(this.valueList);\n        }\n        if (type === 'both' || type === 'valuesets') {\n            this.stateService.clearList(this.valueSetList);\n        }\n    }\n\n    private clearFilteredOptions(type: PicklistValueType) {\n        if (type === 'both' || type === 'values') {\n            this.valueList.filteredOptions.length = 0;\n        }\n        if (type === 'both' || type === 'valuesets') {\n            this.valueSetList.filteredOptions.length = 0;\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {FilterableSelectList, SelectListOption, ValueListOption, ValueSetListOption} from '../pane/picklist-pane.model';\nimport {PicklistValueType} from '../picklist.model';\nimport {WorkTrackerService} from '../../shared/work-tracker.service';\nimport {PicklistFilterRemoteService} from './picklist-filter-remote.service';\nimport {PicklistFilterLocalService} from './picklist-filter-local.service';\nimport {PicklistStateService} from './picklist-state.service';\n\n@Injectable()\nexport class PicklistFilterService {\n    public get valueList(): FilterableSelectList<ValueListOption> {\n        return this.stateService.valueList;\n    }\n    public get valueSetList(): FilterableSelectList<ValueSetListOption> {\n        return this.stateService.valueSetList;\n    }\n    public get searchTokens(): string[] {\n        return this.searchTerm\n            .toLocaleLowerCase()\n            .replace(/\\s+/g, ' ')\n            .split(' ');\n    }\n    public searchTerm = '';\n\n    constructor(\n        private workTracker: WorkTrackerService,\n        private stateService: PicklistStateService,\n        private remoteFilterService: PicklistFilterRemoteService,\n        private localFilterService: PicklistFilterLocalService\n    ) {}\n\n    public reset() {\n        this.remoteFilterService.reset(this);\n        this.searchTerm = '';\n    }\n\n    public runFilter(searchTerm: string) {\n        this.searchTerm = searchTerm;\n        if (!this.stateService.optionsSource.isPaged) {\n            this.localFilterService.filter(this.valueList, this.searchTokens);\n            this.localFilterService.filter(this.valueSetList, this.searchTokens);\n        } else {\n            this.remoteFilterService.currentValuePage = 1;\n            this.remoteFilterService.currentValueSetPage = 1;\n            const workTracker = this.workTracker.startObservable(() => this.remoteFilterService.filter());\n            this.showListLoadingIndicators(workTracker, 'both');\n        }\n    }\n\n    public filterOptionsRemote(type: PicklistValueType = 'both', shouldAppend = false, selectAllCount: number | null = null): Subscription {\n        return this.remoteFilterService.filter(type, shouldAppend, selectAllCount);\n    }\n\n    public loadMore(type: PicklistValueType = 'both', autoLoadMore = false) {\n        if (type === 'both' || type === 'values') {\n            this.remoteFilterService.currentValuePage++;\n        }\n        if (type === 'both' || type === 'valuesets') {\n            this.remoteFilterService.currentValueSetPage++;\n        }\n        const loading$ = this.workTracker.startObservable(() => this.filterOptionsRemote(type, true));\n        this.showListLoadingIndicators(loading$, type, !autoLoadMore);\n    }\n\n    public loadForSelectAll(numberToLoad: number): Observable<boolean> {\n        const loading$ = this.workTracker.startObservable(() => this.filterOptionsRemote('values', false, numberToLoad));\n        this.showListLoadingIndicators(loading$, 'values');\n        return loading$;\n    }\n\n    public reloadIfEmpty() {\n        const valuesNeedReload = this.valueList.options.size === 0 && this.valueList.additionalRemoteOptions > 0;\n        const valueSetsNeedReload = this.valueSetList.options.size === 0 && this.valueSetList.additionalRemoteOptions > 0;\n        if (valuesNeedReload || valueSetsNeedReload) {\n            this.runFilter(this.searchTerm);\n        }\n    }\n\n    public preFilterOptionsForRemoteMode(valuesMap: Map<string, SelectListOption>, list: FilterableSelectList<SelectListOption>) {\n        // if server is handling filtering, but I want to avoid the round trip to the server when moving options\n        // I need to double check that those options belong before adding them, or risk errant option counts\n        valuesMap.forEach(v => {\n            if (!this.localFilterService.itemHasSearchTokens(list, v, this.searchTokens)) {\n                valuesMap.delete(v.code);\n            }\n        });\n    }\n\n    public showListLoadingIndicators(workTracker: Observable<boolean>, type: PicklistValueType = 'both', isAppending = false) {\n        if (type === 'both' || type === 'values') {\n            this.showLoadingIndicatorForList(this.valueList, workTracker, isAppending);\n        }\n        if (type === 'both' || type === 'valuesets') {\n            this.showLoadingIndicatorForList(this.valueSetList, workTracker, isAppending);\n        }\n    }\n\n    private showLoadingIndicatorForList(list: FilterableSelectList<SelectListOption>, tracker: Observable<boolean>, isAppending = false) {\n        if (isAppending) {\n            list.appendingOptions = tracker;\n        } else {\n            list.loadingOptions = tracker;\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {PicklistFilterService} from './picklist-filter.service';\nimport {PicklistPaneComponent} from '../pane/picklist-pane.component';\nimport {FilterableSelectList, PicklistValueOptions, ValueListOption, ValueSetListOption} from '../pane/picklist-pane.model';\nimport {PicklistStateService} from './picklist-state.service';\n\n@Injectable()\nexport class PicklistValuesetMovingService {\n    public get valueList(): FilterableSelectList<ValueListOption> {\n        return this.stateService.valueList;\n    }\n    public get valueSetList(): FilterableSelectList<ValueSetListOption> {\n        return this.stateService.valueSetList;\n    }\n\n    public constructor(private filterService: PicklistFilterService, private stateService: PicklistStateService) {}\n\n    public moveOutValuesets(optionsToMove: PicklistValueOptions, pane: PicklistPaneComponent, shouldBreakValuesets: boolean = false) {\n        this.valueSetList.selectedOptions.forEach(v => {\n            v.showValues = false;\n            optionsToMove.valueSets.set(v.code, v);\n            this.valueSetList.options.delete(v.code);\n        });\n\n        this.valueSetList.filteredOptions.forEach(valueset => {\n            if (valueset.selected || valueset.subValuesSelectList.selectedOptions.size < 1) {\n                return;\n            }\n\n            if (shouldBreakValuesets) {\n                this.breakValueset(valueset, optionsToMove, pane.companion);\n            } else {\n                this.moveSubValues(valueset.subValuesSelectList.selectedOptions, pane);\n            }\n        });\n    }\n\n    private breakValueset(valueset: ValueSetListOption, optionsToMove: PicklistValueOptions, companionPane: PicklistPaneComponent | null) {\n        valueset.showValues = false;\n        optionsToMove.valueSets.set(valueset.code, valueset);\n        this.valueSetList.options.delete(valueset.code);\n\n        const unselectedSubValues = new Map<string, ValueListOption>();\n        valueset.subValuesSelectList.filteredOptions\n            .filter(o => !o.selected)\n            .forEach(o => {\n                unselectedSubValues.set(o.code, new ValueListOption(o.option, o.code));\n            });\n\n        if (!companionPane) {\n            return;\n        }\n        this.moveSubValues(unselectedSubValues, companionPane);\n    }\n\n    private moveSubValues(valuesMap: Map<string, ValueListOption>, sourcePane: PicklistPaneComponent) {\n        this.removeValuesFromPane(valuesMap, sourcePane);\n        if (!sourcePane.companion) {\n            return;\n        }\n        valuesMap.forEach(o => {\n            // tslint:disable-next-line:no-non-null-assertion\n            sourcePane.companion!.valueList.options.set(o.code, new ValueListOption(o.option, o.code));\n        });\n    }\n\n    /**\n     * Handles complex logic for when one pane is paged, and we want to keep the \"x of y\" counts accurate without a round trip to the server\n     */\n    private removeValuesFromPane(valuesMap: Map<string, ValueListOption>, pane: PicklistPaneComponent) {\n        if (pane.isPaged) {\n            // don't bother trying to remove values or decrement count for options that are already filtered out\n            this.filterService.preFilterOptionsForRemoteMode(valuesMap, pane.valueList);\n        }\n\n        valuesMap.forEach(v => {\n            const optionDeleted = pane.valueList.options.delete(v.code);\n            const optionAlreadyInCompanionList = pane.companion ? pane.companion.valueList.options.has(v.code) : false;\n            if (!optionDeleted && pane.isPaged && !optionAlreadyInCompanionList) {\n                pane.valueList.additionalRemoteOptions--;\n            }\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {WorkTrackerService} from '../../shared/work-tracker.service';\nimport {PicklistFilterService} from './picklist-filter.service';\nimport {PicklistValuesetMovingService} from './picklist-valueset-moving.service';\nimport {PicklistFilterLocalService} from './picklist-filter-local.service';\nimport {PicklistStateService} from './picklist-state.service';\nimport {PicklistPaneComponent} from '../pane/picklist-pane.component';\nimport {PicklistOptionsSource, PicklistSettings} from '../picklist.model';\nimport {FilterableSelectList, PicklistValueOptions, ValueListOption, ValueSetListOption} from '../pane/picklist-pane.model';\n\n/**\n * Handles loading + moving items to/from list\n */\n@Injectable()\nexport class PicklistService {\n    public get pane(): PicklistPaneComponent {\n        return this.stateService.pane;\n    }\n    public get picklist(): PicklistSettings {\n        return this.stateService.picklist;\n    }\n    public get optionsSource(): PicklistOptionsSource {\n        return this.stateService.optionsSource;\n    }\n    public get valueList(): FilterableSelectList<ValueListOption> {\n        return this.stateService.valueList;\n    }\n    public get valueSetList(): FilterableSelectList<ValueSetListOption> {\n        return this.stateService.valueSetList;\n    }\n    public get totalValuesCount(): number {\n        return this.valueList.options.size + this.valueList.additionalRemoteOptions;\n    }\n    public get totalValueSetsCount(): number {\n        return this.valueSetList.options.size + this.valueSetList.additionalRemoteOptions;\n    }\n\n    constructor(\n        private workTracker: WorkTrackerService,\n        private filterService: PicklistFilterService,\n        private localFilterService: PicklistFilterLocalService,\n        private valuesetMovingService: PicklistValuesetMovingService,\n        private stateService: PicklistStateService\n    ) {}\n\n    public reset(settings: PicklistSettings, optionsSource: PicklistOptionsSource, pane: PicklistPaneComponent) {\n        this.stateService.reset(settings, optionsSource, pane);\n        this.filterService.reset();\n\n        if (this.optionsSource.optionsAreLocal()) {\n            this.stateService.updateValueList(this.optionsSource.values);\n            this.stateService.updateValueSetList(this.optionsSource.valueSets);\n            this.localFilterService.filter(this.valueList, this.filterService.searchTokens);\n            this.localFilterService.filter(this.valueSetList, this.filterService.searchTokens);\n        } else {\n            const loading$ = this.workTracker.startObservable(() => this.filterService.filterOptionsRemote());\n            this.valueList.loadingOptions = loading$;\n            this.valueSetList.loadingOptions = loading$;\n        }\n    }\n\n    public addOptions(listOptions: PicklistValueOptions) {\n        if (!this.optionsSource.optionsAreLocal()) {\n            this.filterService.preFilterOptionsForRemoteMode(listOptions.values, this.valueList);\n            this.filterService.preFilterOptionsForRemoteMode(listOptions.valueSets, this.valueSetList);\n        }\n\n        listOptions.values.forEach(o => {\n            this.valueList.options.set(o.code, o);\n        });\n        listOptions.valueSets.forEach(o => {\n            this.valueSetList.options.set(o.code, o);\n        });\n        this.localFilterService.filter(this.valueList, this.filterService.searchTokens);\n        this.localFilterService.filter(this.valueSetList, this.filterService.searchTokens);\n        this.pane.selectNone();\n    }\n\n    public moveOutSelectedOptions(shouldBreakValuesets: boolean = false): PicklistValueOptions {\n        let optionsToMove = new PicklistValueOptions();\n        this.valueList.selectedOptions.forEach(o => {\n            optionsToMove.values.set(o.code, o);\n            this.valueList.options.delete(o.code);\n        });\n\n        this.valuesetMovingService.moveOutValuesets(optionsToMove, this.pane, shouldBreakValuesets);\n\n        this.localFilterService.filter(this.valueList, this.filterService.searchTokens);\n        this.localFilterService.filter(this.valueSetList, this.filterService.searchTokens);\n        this.pane.selectNone();\n        return optionsToMove;\n    }\n\n    public loadValuesForValueset(valueset: ValueSetListOption) {\n        valueset.loadingValues = true;\n        if (!this.optionsSource.getValuesForValueset) {\n            return;\n        }\n        this.optionsSource.getValuesForValueset(valueset.option.code).subscribe(\n            values => {\n                valueset.subValuesSelectList.filteredOptions.length = 0;\n                values.forEach(v => {\n                    valueset.subValuesSelectList.filteredOptions.push(new ValueListOption(v, v.code));\n                });\n            },\n            () => {\n                console.warn('Unable to load values for valueset');\n                valueset.showValues = false;\n            },\n            () => {\n                valueset.loadingValues = false;\n            }\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {FilterableSelectList, isSubList, SelectListOption, ValueListOption, ValueSetListOption} from '../pane/picklist-pane.model';\nimport {PicklistService} from './picklist.service';\n\n@Injectable()\nexport class PicklistActionService {\n    public get valueList(): FilterableSelectList<ValueListOption> {\n        return this.listService.valueList;\n    }\n    public get valueSetList(): FilterableSelectList<ValueSetListOption> {\n        return this.listService.valueSetList;\n    }\n    public constructor(private listService: PicklistService) {}\n\n    public onItemClicked<T extends SelectListOption>(event: MouseEvent, index: number, list: FilterableSelectList<T>, item: T) {\n        if (event.shiftKey && list.lastClickedOption && !(item.code === list.lastClickedOption.code)) {\n            this.shiftClick(index, list, item, list.lastClickedOption);\n        } else if (event.ctrlKey) {\n            this.ctrlClick(list, item);\n        } else {\n            // regular click\n            this.selectNone();\n            this.selectItem(list, item);\n            list.lastClickedOption = item;\n        }\n    }\n\n    public onItemDoubleClicked<T extends SelectListOption>(event: MouseEvent, list: FilterableSelectList<T>, item: T) {\n        this.selectNone();\n        this.selectItem(list, item);\n    }\n\n    public onValuesetCaretClicked(event: MouseEvent, valueset: ValueSetListOption) {\n        if (!valueset.showValues && valueset.subValuesSelectList.filteredOptions.length === 0) {\n            this.listService.loadValuesForValueset(valueset);\n        }\n        valueset.showValues = !valueset.showValues;\n    }\n\n    public selectAll() {\n        this.valueSetList.filteredOptions.forEach(v => {\n            this.clearListSelection(v.subValuesSelectList);\n        }); // deselect sublist items\n        this.selectAllInList(this.valueList);\n        this.selectAllInList(this.valueSetList);\n    }\n\n    public selectNone() {\n        this.valueSetList.filteredOptions.forEach(v => {\n            this.clearListSelection(v.subValuesSelectList);\n        });\n        this.clearListSelection(this.valueList);\n        this.clearListSelection(this.valueSetList);\n    }\n\n    public selectAllInList<T extends SelectListOption>(list: FilterableSelectList<T>) {\n        if (!list.isActive) {\n            return;\n        }\n\n        list.selectedOptions.clear();\n        list.lastClickedOption = null;\n\n        list.filteredOptions.forEach(item => {\n            item.selected = true;\n            list.selectedOptions.set(item.code, item);\n        });\n    }\n\n    private clearListSelection<T extends SelectListOption>(list: FilterableSelectList<T>) {\n        list.selectedOptions.clear();\n        list.lastClickedOption = null;\n\n        list.filteredOptions.forEach(item => {\n            item.selected = false;\n        });\n    }\n\n    private shiftClick<T extends SelectListOption>(index: number, list: FilterableSelectList<T>, item: T, lastClickedItem: T) {\n        const lastIndex = list.filteredOptions.indexOf(lastClickedItem);\n        let largeIndex = Math.max(index, lastIndex);\n        let smallIndex = Math.min(index, lastIndex);\n\n        const formerLastClicked = list.lastClickedOption;\n        this.selectNone();\n        list.lastClickedOption = formerLastClicked;\n\n        for (let i = smallIndex; i <= largeIndex; i++) {\n            this.selectItem(list, list.filteredOptions[i]);\n        }\n    }\n\n    private ctrlClick<T extends SelectListOption>(list: FilterableSelectList<T>, item: T) {\n        // if ctrl clicking a sub value of a valueset that is selected (such that all subvalues appear selected)\n        if (isSubList(list) && list.parentValueSet.selected) {\n            this.selectAllInList<ValueListOption>(list);\n            this.deselectItem(this.valueSetList, list.parentValueSet);\n            this.deselectItem<ValueListOption>(list, item);\n        } else {\n            this.toggleItemSelection(list, item);\n        }\n\n        list.lastClickedOption = item;\n    }\n\n    private deselectItem<T extends SelectListOption>(list: FilterableSelectList<T>, item: T) {\n        item.selected = false;\n        list.selectedOptions.delete(item.code);\n    }\n\n    private selectItem<T extends SelectListOption>(list: FilterableSelectList<T>, item: T) {\n        item.selected = true;\n        list.selectedOptions.set(item.code, item);\n    }\n\n    private toggleItemSelection<T extends SelectListOption>(list: FilterableSelectList<T>, item: T) {\n        if (item.selected) {\n            this.deselectItem(list, item);\n        } else {\n            this.selectItem(list, item);\n        }\n    }\n}\n","import {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {PicklistService} from '../services/picklist.service';\nimport {PicklistActionService} from '../services/picklist-action.service';\nimport {PicklistFilterService} from '../services/picklist-filter.service';\nimport {PicklistFilterRemoteService} from '../services/picklist-filter-remote.service';\nimport {PicklistFilterLocalService} from '../services/picklist-filter-local.service';\nimport {PicklistStateService} from '../services/picklist-state.service';\nimport {PicklistValuesetMovingService} from '../services/picklist-valueset-moving.service';\nimport {WorkTrackerService} from '../../shared/work-tracker.service';\nimport {PicklistOptionsSource, PicklistSettings, PicklistValueType} from '../picklist.model';\nimport {FilterableSelectList, SelectListOption, ValueListOption, ValueSetListOption} from './picklist-pane.model';\n\n@Component({\n    selector: 'hc-picklist-pane',\n    templateUrl: 'picklist-pane.component.html',\n    styleUrls: ['picklist-pane.component.scss'],\n    providers: [\n        PicklistService,\n        PicklistStateService,\n        PicklistValuesetMovingService,\n        PicklistActionService,\n        PicklistFilterService,\n        PicklistFilterRemoteService,\n        PicklistFilterLocalService,\n        WorkTrackerService\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PicklistPaneComponent {\n    @Input()\n    public emptyMsg: string = 'No options';\n    @Output()\n    public moveSelectedItems = new EventEmitter<PicklistPaneComponent>();\n    @ViewChild('listContainer', {static: false})\n    public listContainerEl: ElementRef | undefined;\n    @ViewChild('search', {static: false})\n    public searchInputEl: ElementRef | undefined;\n    public companion: PicklistPaneComponent | null = null;\n    public shouldExcludeCompanion = false;\n    public codeIsSignificant = false;\n    public searchTerm: string = '';\n    public searchTermStream = new Subject<string>();\n    public selectAllWasLastClicked = false;\n    public selectAllLimit = 2000;\n\n    constructor(\n        public listService: PicklistService,\n        public actionService: PicklistActionService,\n        public filterService: PicklistFilterService\n    ) {}\n\n    public reset(source: PicklistOptionsSource, settings: PicklistSettings, companion: PicklistPaneComponent, excludeCompanion = false) {\n        this.companion = companion;\n        this.shouldExcludeCompanion = excludeCompanion;\n        this.codeIsSignificant = settings.codeIsSignificant;\n        this.selectAllWasLastClicked = false;\n        this.searchTerm = '';\n        this.wireUpSearch();\n        this.listService.reset(settings, source, this);\n    }\n\n    public get valueList(): FilterableSelectList<ValueListOption> {\n        return this.listService.valueList;\n    }\n    public get valueSetList(): FilterableSelectList<ValueSetListOption> {\n        return this.listService.valueSetList;\n    }\n    public get isPaged(): boolean {\n        return this.listService.optionsSource.isPaged;\n    }\n    public get optionsAvailableCount(): number {\n        return this.PicklistValueOptionsTotal + this.valueSetOptionsTotal;\n    }\n    public get PicklistValueOptionsTotal(): number {\n        return this.valueList.isActive ? this.listService.totalValuesCount : 0;\n    }\n    public get valueSetOptionsTotal(): number {\n        return this.valueSetList.isActive ? this.listService.totalValueSetsCount : 0;\n    }\n    public get optionsShowingCount(): number {\n        const valueListShowing = this.valueList.isActive ? this.valueList.filteredOptions.length : 0;\n        const valueSetListShowing = this.valueSetList.isActive ? this.valueSetList.filteredOptions.length : 0;\n        return valueListShowing + valueSetListShowing;\n    }\n\n    public get showTooManyToSelectAllMsg(): boolean {\n        const serverMatches = this.valueList.additionalRemoteOptions;\n        return (\n            this.selectAllWasLastClicked &&\n            Number.isFinite(serverMatches) &&\n            serverMatches + this.valueList.options.size > this.selectAllLimit\n        );\n    }\n\n    public shouldShowList<T extends SelectListOption>(list: FilterableSelectList<T>): boolean {\n        return list.isActive && (list.filteredOptions.length > 0 || list.additionalRemoteOptions > 0);\n    }\n\n    public listIsFilteredToEmpty<T extends SelectListOption>(list: FilterableSelectList<T>): boolean {\n        return list.options.size > 0 && list.filteredOptions.length === 0 && list.isActive;\n    }\n\n    public isAnySelected(): boolean {\n        const topLevelListHasSelection = this.valueList.selectedOptions.size > 0 || this.valueSetList.selectedOptions.size > 0;\n        const subListHasSelection = this.valueSetList.filteredOptions.some(o => o.subValuesSelectList.selectedOptions.size > 0);\n        return topLevelListHasSelection || subListHasSelection;\n    }\n\n    public focusSearch() {\n        if (this.searchInputEl) {\n            this.searchInputEl.nativeElement.focus();\n        }\n    }\n\n    public scrollToTop() {\n        if (this.listContainerEl) {\n            this.listContainerEl.nativeElement.scrollTop = 0;\n        }\n    }\n\n    public onSearchKeyup() {\n        this.selectNone();\n        this.searchTermStream.next(this.searchTerm);\n    }\n\n    public onItemClicked<T extends SelectListOption>(event: MouseEvent, index: number, list: FilterableSelectList<T>, item: T) {\n        this.selectAllWasLastClicked = false;\n        event.stopPropagation();\n        this.actionService.onItemClicked(event, index, list, item);\n    }\n\n    public preventIEHighlightBug() {\n        // for IE: https://stackoverflow.com/questions/1527751/disable-text-selection-while-pressing-shift\n        (document as any).onselectstart = function() {\n            return false;\n        };\n        setTimeout(function() {\n            (document as any).onselectstart = () => null;\n        }, 0);\n    }\n\n    public onValuesetCaretClicked(event: MouseEvent, valueset: ValueSetListOption) {\n        this.selectAllWasLastClicked = false;\n        event.stopPropagation();\n        this.actionService.onValuesetCaretClicked(event, valueset);\n    }\n\n    public triggerLoadMore(type: PicklistValueType) {\n        this.selectAllWasLastClicked = false;\n        this.filterService.loadMore(type);\n    }\n\n    public onItemDoubleClicked<T extends SelectListOption>(event: MouseEvent, list: FilterableSelectList<T>, item: T) {\n        this.selectAllWasLastClicked = false;\n        event.stopPropagation();\n        this.actionService.onItemDoubleClicked(event, list, item);\n        this.moveSelectedItems.emit(this);\n    }\n\n    public selectAll() {\n        this.selectAllWasLastClicked = true;\n        const shouldLoadMoreBeforeSelectAll = this.valueList.additionalRemoteOptions && this.valueList.options.size < this.selectAllLimit;\n        if (this.pagingValueList() && shouldLoadMoreBeforeSelectAll) {\n            const totalMatches = this.valueList.additionalRemoteOptions + this.valueList.options.size;\n            const numberToLoad = totalMatches > this.selectAllLimit ? this.selectAllLimit : totalMatches;\n            this.loadAndSelectAll(numberToLoad);\n        } else {\n            this.actionService.selectAll();\n        }\n    }\n\n    public selectNone() {\n        this.selectAllWasLastClicked = false;\n        this.actionService.selectNone();\n    }\n\n    private loadAndSelectAll(numberToLoad: number) {\n        this.filterService.loadForSelectAll(numberToLoad).subscribe(() => {\n            this.actionService.selectAllInList(this.valueList);\n        });\n    }\n\n    private pagingValueList(): boolean {\n        return this.isPaged && this.shouldShowList(this.valueList) && !this.shouldShowList(this.valueSetList);\n    }\n\n    private wireUpSearch() {\n        this.searchTermStream.pipe(debounceTime(300), distinctUntilChanged()).subscribe(t => {\n            this.filterService.runFilter(t);\n            this.selectNone();\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {PicklistPaneComponent} from './pane/picklist-pane.component';\nimport {PicklistComponent} from './picklist.component';\nimport {ButtonModule} from '../button/button.module';\nimport {IconModule} from '../icon/icon.module';\nimport {InputModule} from '../input/input.module';\nimport {FormFieldModule} from '../form-field/hc-form-field.module';\nimport {ProgressIndicatorsModule} from '../progress-indicators/progress-indicators.module';\n\nexport {PicklistPaneComponent} from './pane/picklist-pane.component';\nexport {PicklistComponent} from './picklist.component';\nexport {\n    IPicklistSettings,\n    IValueOption,\n    IValueSetOption,\n    IPicklistOptions,\n    IPicklistOptionsSource,\n    PicklistRemoteQueryOptions,\n    IPicklistRemoteQueryResponse,\n    IPageSettings,\n    IPagedCollection\n} from './picklist.model';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ButtonModule, IconModule, InputModule, FormFieldModule, ProgressIndicatorsModule],\n    declarations: [PicklistPaneComponent, PicklistComponent],\n    exports: [PicklistPaneComponent, PicklistComponent]\n})\nexport class PicklistModule {}\n","import {Directive, HostBinding, ElementRef, Input, HostListener} from '@angular/core';\n\n/** Marks the host element as a link within an `hc-scroll-nav`. */\n@Directive({\n    selector: '[hcScrollLink]'\n})\nexport class ScrollNavLinkDirective {\n    /** The `id` of the corresponding `hcScrollTarget` that you would like to link to. */\n    @Input() public hcScrollLink: string;\n    @HostBinding('class.hc-scroll-nav-link')\n    _hostClass = true;\n\n    constructor(public _el: ElementRef) {}\n\n    @HostListener('click') _onClick() {\n        this.navigateToSection(this.hcScrollLink);\n    }\n\n    private navigateToSection(id: string) {\n        const el = document.getElementById(id);\n        if (!el) {\n            throw new Error(`Failed to navigate. Could not find the element with the id: ${id}.`);\n        } else {\n            el.scrollIntoView();\n        }\n    }\n}\n","import {Component, ElementRef, ViewEncapsulation, AfterViewInit, QueryList, ContentChildren} from '@angular/core';\nimport {ScrollNavLinkDirective} from './scroll-nav-link.directive';\n\n/** Container for scroll navigation links. */\n@Component({\n    selector: 'hc-scroll-nav',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['scroll-nav.component.scss'],\n    templateUrl: 'scroll-nav.component.html'\n})\nexport class HcScrollNavComponent implements AfterViewInit {\n    @ContentChildren(ScrollNavLinkDirective) private linkList: QueryList<ScrollNavLinkDirective>;\n    public get _links(): Array<HTMLElement> {\n        return this.linkList.toArray().map(e => e._el.nativeElement);\n    }\n    private readonly ACTIVE_CLASS = 'hc-scroll-nav-link-active';\n\n    constructor(public _elementRef: ElementRef) {}\n\n    public ngAfterViewInit(): void {\n        if (this._links && this._links[0]) {\n            this._links[0].classList.add(this.ACTIVE_CLASS);\n        }\n    }\n\n    public _setActiveClassById(id: string): void {\n        const link = this.linkList.find(e => e.hcScrollLink === id);\n        if (!link) {\n            throw new Error(`Failed to mark active class. Could not find the element with the data target for id: ${id}.`);\n        }\n        this.setActiveClass(link._el.nativeElement);\n    }\n\n    private setActiveClass(element: HTMLElement): void {\n        this._links.forEach(e => {\n            e.classList.remove(this.ACTIVE_CLASS);\n        });\n        element.classList.add(this.ACTIVE_CLASS);\n    }\n}\n","import {Directive, HostBinding, ElementRef, Input} from '@angular/core';\n\n/** Marks the host element as a linkable section within an `hc-scroll-nav-content`.\n * Must set the `id` and link to it via an `hcScrollLink`. */\n@Directive({\n    selector: '[hcScrollTarget]'\n})\nexport class ScrollNavTargetDirective {\n    @HostBinding('class.hc-scroll-nav-target')\n    _hostClass = true;\n\n    constructor(public _el: ElementRef) {}\n}\n","import {\n    Component,\n    ViewEncapsulation,\n    Input,\n    AfterViewInit,\n    ViewChild,\n    OnDestroy,\n    EventEmitter,\n    Output,\n    QueryList,\n    ContentChildren,\n    HostListener,\n    AfterViewChecked\n} from '@angular/core';\nimport {CdkScrollable} from '@angular/cdk/scrolling';\nimport {Subject} from 'rxjs';\nimport {HcScrollNavComponent} from '../nav/scroll-nav.component';\nimport {takeUntil} from 'rxjs/operators';\nimport {ScrollNavTargetDirective} from './scroll-nav-target.directive';\n\n/** Contains scrollable content that is navigable via `hc-scroll-nav` links. */\n@Component({\n    selector: 'hc-scroll-nav-content',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['scroll-nav-content.component.scss'],\n    templateUrl: 'scroll-nav-content.component.html'\n})\nexport class HcScrollNavContentComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n    private readonly DEFAULT_BUFFER = 40;\n    /** Reference to the scroll nav component. */\n    @Input() public nav: HcScrollNavComponent;\n    /** If true, will force the height of the final scroll target area to be the height of the scrollable container.\n     * This is helpful if you want the last target in the content area to be able to scroll to the top. You can alternatively\n     * target the last item with css. *Defaults to true.* */\n    @Input() public makeLastTargetFullHeight = true;\n    /** Number in pixels, used to give a little leeway in the shifting of the active nav when scrolling. *Defaults to 40.*\n     * Example: Left at default, if showing just the bottom 40 pixels of the section before, count the next section as active. */\n    @Input() public bufferSpace = this.DEFAULT_BUFFER;\n    /** If true, applies smooth scrolling via css. *Defaults to true.* */\n    @Input() public shouldAnimateScroll = true;\n    /** Fires when a new section is scrolled into view. Broadcasts the id of that section. */\n    @Output() public newSectionInView: EventEmitter<string> = new EventEmitter<string>();\n    @ViewChild('scrollContainer', {read: CdkScrollable, static: false}) public _cdkScrollableElement: CdkScrollable;\n    @ContentChildren(ScrollNavTargetDirective) private targets: QueryList<ScrollNavTargetDirective>;\n    /** Id of the current section scrolled into view. */\n    public sectionInView: string;\n    public get _scrollTargets(): Array<HTMLElement> {\n        return this.targets.toArray().map(t => t._el.nativeElement);\n    }\n    private unsubscribe$ = new Subject<void>();\n    private minHeightForLastTargetSet = false;\n\n    public ngOnDestroy(): void {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n\n    public ngAfterViewInit(): void {\n        if (this._cdkScrollableElement) {\n            this._cdkScrollableElement\n                .elementScrolled()\n                .pipe(takeUntil(this.unsubscribe$))\n                .subscribe(() => {\n                    this.checkActiveSection();\n                });\n        }\n    }\n\n    public ngAfterViewChecked(): void {\n        if (this.makeLastTargetFullHeight && !this.minHeightForLastTargetSet) {\n            this.insureMinHeightForLastTarget();\n        }\n    }\n\n    @HostListener('window:resize') _onWindowResize() {\n        if (this.makeLastTargetFullHeight) {\n            this.minHeightForLastTargetSet = false;\n        }\n    }\n\n    /** Scroll to top and reset the \"automatic full height for the last item\" setting. */\n    public refresh() {\n        this.scrollToTop();\n        this.minHeightForLastTargetSet = false;\n    }\n\n    /** Helper function to scroll to the top of the content area. */\n    public scrollToTop() {\n        this._cdkScrollableElement.scrollTo({top: 0});\n    }\n\n    /** Will update the navigation state. */\n    public checkActiveSection() {\n        let offset: number = this._cdkScrollableElement.measureScrollOffset('top') + this._scrollTargets[0].offsetTop;\n\n        this._scrollTargets.forEach((t, index) => {\n            const el = t;\n            let initialOffset = 0;\n            let nextOffset = 0;\n\n            if (index > 0) {\n                initialOffset = el.offsetTop - this.bufferSpace;\n            }\n            if (index + 1 < this._scrollTargets.length) {\n                const nextEl = this._scrollTargets[index + 1];\n                nextOffset = nextEl.offsetTop;\n            }\n\n            if (\n                (initialOffset && nextOffset && offset >= initialOffset && offset < nextOffset) ||\n                (initialOffset && !nextOffset && offset >= initialOffset) ||\n                (!initialOffset && nextOffset && offset < nextOffset)\n            ) {\n                this.setActiveClass(el.getAttribute('id') || '');\n            }\n        });\n    }\n\n    private insureMinHeightForLastTarget() {\n        const containerHeight = this._cdkScrollableElement.getElementRef().nativeElement.offsetHeight;\n        if (containerHeight && this._scrollTargets.length > 0) {\n            const targetEl = this._scrollTargets[this._scrollTargets.length - 1];\n            targetEl.style.minHeight = `${containerHeight + 50}px`;\n            this.minHeightForLastTargetSet = true;\n        }\n    }\n\n    private setActiveClass(scrollTarget: string): void {\n        if (this.sectionInView !== scrollTarget) {\n            this.sectionInView = scrollTarget;\n            this.nav._setActiveClassById(scrollTarget);\n            this.newSectionInView.next(scrollTarget);\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ScrollDispatchModule} from '@angular/cdk/scrolling';\n\nimport {HcScrollNavContentComponent} from './content/scroll-nav-content.component';\nimport {HcScrollNavComponent} from './nav/scroll-nav.component';\nimport {ScrollNavTargetDirective} from './content/scroll-nav-target.directive';\nimport {ScrollNavLinkDirective} from './nav/scroll-nav-link.directive';\n\n@NgModule({\n    declarations: [HcScrollNavContentComponent, HcScrollNavComponent, ScrollNavTargetDirective, ScrollNavLinkDirective],\n    exports: [HcScrollNavContentComponent, HcScrollNavComponent, ScrollNavTargetDirective, ScrollNavLinkDirective],\n    imports: [CommonModule, ScrollDispatchModule],\n    providers: []\n})\nexport class ScrollNavModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getSortDuplicateSortableIdError(id: string): Error {\n    return Error(`Cannot have two HcSortables with the same id (${id}).`);\n}\n\n/** @docs-private */\nexport function getSortHeaderNotContainedWithinSortError(): Error {\n    return Error(`HcSortHeader must be placed within a parent element with the HcSort directive.`);\n}\n\n/** @docs-private */\nexport function getSortHeaderMissingIdError(): Error {\n    return Error(`HcSortHeader must be provided with a unique id.`);\n}\n\n/** @docs-private */\nexport function getSortInvalidDirectionError(direction: string): Error {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n","/* tslint:disable:no-output-rename no-input-rename directive-class-suffix */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, Input, isDevMode, OnChanges, OnDestroy, OnInit, Output} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SortDirection} from './sort-direction';\nimport {getSortDuplicateSortableIdError, getSortHeaderMissingIdError, getSortInvalidDirectionError} from './sort-errors';\nimport {Subject} from 'rxjs';\nimport {Initializable} from '../shared/initializable';\n\n/** Interface for a directive that holds sorting state consumed by `HcSortHeaderComponent`. */\nexport interface HcSortable {\n    /** The id of the column being sorted. */\n    id: string;\n\n    /** Starting sort direction. */\n    start: 'asc' | 'desc';\n\n    /** Whether to disable clearing the sorting state. */\n    disableClear: boolean;\n}\n\n/** The current sort state. */\nexport interface Sort {\n    /** The id of the column being sorted. */\n    active: string;\n\n    /** The sort direction. */\n    direction: SortDirection;\n}\n\n/** Container for HcSortables to manage the sort state and provide default sort parameters. */\n@Directive({\n    selector: '[hcSort]',\n    exportAs: 'hcSort'\n})\nexport class HcSort extends Initializable implements OnChanges, OnDestroy, OnInit {\n    /** Collection of all registered sortables that this directive manages. */\n    sortables = new Map<string, HcSortable>();\n\n    /** Used to notify any child components listening to state changes. */\n    readonly _stateChanges = new Subject<never>();\n\n    /** The id of the most recently sorted HcSortable. */\n    @Input('hcSortActive')\n    active: string;\n\n    /**\n     * The direction to set when an HcSortable is initially sorted.\n     * May be overriden by the HcSortable's sort start.\n     */\n    @Input('hcSortStart')\n    start: 'asc' | 'desc' = 'asc';\n\n    /** The sort direction of the currently active HcSortable. */\n    @Input('hcSortDirection')\n    get direction(): SortDirection {\n        return this._direction;\n    }\n    set direction(direction: SortDirection) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    private _direction: SortDirection = '';\n\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the HcSortable's disable clear input.\n     */\n    @Input('hcSortDisableClear')\n    get disableClear(): boolean {\n        return this._disableClear;\n    }\n    set disableClear(v: boolean) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    private _disableClear: boolean;\n\n    @Input('hcSortDisabled')\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    /** Event emitted when the user changes either the active sort or sort direction. */\n    @Output('hcSortChange')\n    readonly sortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\n\n    /**\n     * Register function to be used by the contained HcSortables. Adds the HcSortable to the\n     * collection of HcSortables.\n     */\n    register(sortable: HcSortable): void {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n\n    /**\n     * Unregister function to be used by the contained HcSortables. Removes the HcSortable from the\n     * collection of contained HcSortables.\n     */\n    deregister(sortable: HcSortable): void {\n        this.sortables.delete(sortable.id);\n    }\n\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable: HcSortable): void {\n        if (this.active !== sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        } else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n\n        this.sortChange.emit({active: this.active, direction: this.direction});\n    }\n\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable: HcSortable): SortDirection {\n        if (!sortable) {\n            return '';\n        }\n\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n\n    ngOnInit() {\n        this._markInitialized();\n    }\n\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\n\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): SortDirection[] {\n    let sortOrder: SortDirection[] = ['asc', 'desc'];\n    if (start === 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n\n    return sortOrder;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {animate, state, style, transition, trigger, keyframes, AnimationTriggerMetadata, query, animateChild} from '@angular/animations';\n\nconst animationDurationEnter = '225ms';\nconst animationCurveStandard = 'cubic-bezier(0.4,0.0,0.2,1)';\nconst SORT_ANIMATION_TRANSITION = animationDurationEnter + ' ' + animationCurveStandard;\n\n/** Animations used by HcSort. */\nexport const hcSortAnimations: {\n    readonly indicator: AnimationTriggerMetadata;\n    readonly leftPointer: AnimationTriggerMetadata;\n    readonly rightPointer: AnimationTriggerMetadata;\n    readonly arrowOpacity: AnimationTriggerMetadata;\n    readonly arrowPosition: AnimationTriggerMetadata;\n    readonly allowChildren: AnimationTriggerMetadata;\n} = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({transform: 'translateY(0px)'})),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({transform: 'translateY(10px)'})),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({transform: 'rotate(-45deg)'})),\n        state('active-desc, desc', style({transform: 'rotate(45deg)'})),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({transform: 'rotate(45deg)'})),\n        state('active-desc, desc', style({transform: 'rotate(-45deg)'})),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({opacity: 1})),\n        state('desc-to-hint, asc-to-hint, hint', style({opacity: 0.54})),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({opacity: 0})),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition(\n            '* => desc-to-hint, * => desc-to-active',\n            animate(SORT_ANIMATION_TRANSITION, keyframes([style({transform: 'translateY(-25%)'}), style({transform: 'translateY(0)'})]))\n        ),\n        // Hint Center => Hidden Below\n        transition(\n            '* => hint-to-desc, * => active-to-desc',\n            animate(SORT_ANIMATION_TRANSITION, keyframes([style({transform: 'translateY(0)'}), style({transform: 'translateY(25%)'})]))\n        ),\n        // Hidden Below => Hint Center\n        transition(\n            '* => asc-to-hint, * => asc-to-active',\n            animate(SORT_ANIMATION_TRANSITION, keyframes([style({transform: 'translateY(25%)'}), style({transform: 'translateY(0)'})]))\n        ),\n        // Hint Center => Hidden Above\n        transition(\n            '* => hint-to-asc, * => active-to-asc',\n            animate(SORT_ANIMATION_TRANSITION, keyframes([style({transform: 'translateY(0)'}), style({transform: 'translateY(-25%)'})]))\n        ),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({transform: 'translateY(0)'})),\n        state('hint-to-desc, active-to-desc, desc', style({transform: 'translateY(-25%)'})),\n        state('hint-to-asc, active-to-asc, asc', style({transform: 'translateY(25%)'}))\n    ]),\n\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [transition('* <=> *', [query('@*', animateChild(), {optional: true})])])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, SkipSelf, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * To modify the labels and text displayed, create a new instance of HcSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable({providedIn: 'root'})\nexport class HcSortHeaderIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** ARIA label for the sorting button. */\n    sortButtonLabel = (id: string) => {\n        return `Change sorting for ${id}`;\n    };\n}\n/** @docs-private */\nexport function HC_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: HcSortHeaderIntl) {\n    return parentIntl || new HcSortHeaderIntl();\n}\n\n/** @docs-private */\nexport const HC_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an HcSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: HcSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), HcSortHeaderIntl]],\n    useFactory: HC_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n","/* tslint:disable:component-selector no-host-metadata-property no-input-rename component-class-suffix */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    ViewEncapsulation,\n    HostBinding\n} from '@angular/core';\nimport {merge, Subscription} from 'rxjs';\nimport {HcSort, HcSortable} from './sort';\nimport {hcSortAnimations} from './sort-animations';\nimport {SortDirection} from './sort-direction';\nimport {getSortHeaderNotContainedWithinSortError} from './sort-errors';\nimport {HcSortHeaderIntl} from './sort-header-intl';\n\n/**\n * Valid positions for the arrow to be in for its opacity and translation. If the state is a\n * sort direction, the position of the arrow will be above/below and opacity 0. If the state is\n * hint, the arrow will be in the center with a slight opacity. Active state means the arrow will\n * be fully opaque in the center.\n *\n * @docs-private\n */\nexport type ArrowViewState = SortDirection | 'hint' | 'active';\n\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * @docs-private\n */\nexport interface ArrowViewStateTransition {\n    fromState?: ArrowViewState;\n    toState: ArrowViewState;\n}\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent HcSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n    selector: '[hc-sort-header]',\n    exportAs: 'hcSortHeader',\n    templateUrl: 'sort-header.html',\n    styleUrls: ['sort-header.scss'],\n    host: {\n        '(click)': '_handleClick()',\n        '[attr.aria-sort]': '_getAriaSortAttribute()',\n        '[class.hc-sort-header-disabled]': '_isDisabled()'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        hcSortAnimations.indicator,\n        hcSortAnimations.leftPointer,\n        hcSortAnimations.rightPointer,\n        hcSortAnimations.arrowOpacity,\n        hcSortAnimations.arrowPosition,\n        hcSortAnimations.allowChildren\n    ]\n})\nexport class HcSortHeader implements HcSortable, OnDestroy, OnInit {\n    private _rerenderSubscription: Subscription;\n\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     */\n    _showIndicatorHint: boolean = false;\n\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     */\n    _viewState: ArrowViewStateTransition;\n\n    /** The direction the arrow should be facing according to the current state. */\n    _arrowDirection: SortDirection = '';\n\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     */\n    _disableViewStateAnimation = false;\n\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     */\n    @Input('hc-sort-header')\n    id: string;\n\n    /** Sets the position of the arrow that displays when sorted. */\n    @Input()\n    arrowPosition: 'before' | 'after' = 'after';\n\n    /** Overrides the sort start value of the containing HcSort for this HcSortable. */\n    @Input()\n    start: 'asc' | 'desc';\n\n    /** Overrides the disable clear value of the containing HcSort for this HcSortable. */\n    @Input()\n    get disableClear(): boolean {\n        return this._disableClear;\n    }\n\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n\n    private _disableClear: boolean;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @HostBinding('class.hc-sort-header')\n    _hostClass = true;\n\n    private _disabled: boolean = false;\n\n    constructor(\n        public _intl: HcSortHeaderIntl,\n        changeDetectorRef: ChangeDetectorRef,\n        @Optional() public _sort: HcSort,\n        @Optional() public _cdkColumnDef: CdkColumnDef\n    ) {\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({fromState: 'active', toState: this._arrowDirection});\n            }\n\n            changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnInit() {\n        if (!this.id && this._cdkColumnDef) {\n            this.id = this._cdkColumnDef.name;\n        }\n\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({toState: this._isSorted() ? 'active' : this._arrowDirection});\n\n        this._sort.register(this);\n    }\n\n    ngOnDestroy() {\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible: boolean) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n\n        this._showIndicatorHint = visible;\n\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({fromState: this._arrowDirection, toState: 'hint'});\n            } else {\n                this._setAnimationTransitionState({fromState: 'hint', toState: this._arrowDirection});\n            }\n        }\n    }\n\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState: ArrowViewStateTransition) {\n        this._viewState = viewState;\n\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = {toState: viewState.toState};\n        }\n    }\n\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n\n        this._sort.sort(this);\n\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        const viewState: ArrowViewStateTransition = this._isSorted()\n            ? {fromState: this._arrowDirection, toState: 'active'}\n            : {fromState: 'active', toState: this._arrowDirection};\n        this._setAnimationTransitionState(viewState);\n\n        this._showIndicatorHint = false;\n    }\n\n    /** Whether this HcSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active === this.id && (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n\n        return this._sort.direction === 'asc' ? 'ascending' : 'descending';\n    }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {HcSortHeader} from './sort-header';\nimport {HcSort} from './sort';\nimport {HC_SORT_HEADER_INTL_PROVIDER} from './sort-header-intl';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [HcSort, HcSortHeader],\n    declarations: [HcSort, HcSortHeader],\n    providers: [HC_SORT_HEADER_INTL_PROVIDER]\n})\nexport class SortModule {}\n","import {Component, Input, AfterContentInit, HostBinding, ViewEncapsulation, Output, EventEmitter} from '@angular/core';\nimport {Router, NavigationEnd, Params, UrlSerializer} from '@angular/router';\nimport {parseBooleanAttribute} from '../util';\n\nexport function throwErrorForMissingRouterLink(stepsWithoutRouterLink: StepInterface[]) {\n    const stepLabels = stepsWithoutRouterLink.map(step => step.label);\n    throw Error(`Routerlink missing on ${stepLabels.join(',')}`);\n}\n\nexport interface StepInterface {\n    /** The text to be displayed under the step indicator */\n    label?: string;\n    /** If using a router, the route this step should navigate to */\n    routerLink?: string;\n    /** The icon set the step's hc-icon should use. Must be set if using the icon parameter. */\n    iconSet?: string;\n    /** An glyph that should be displayed inside the step's circle.\n     * If not set, the step number will display in the circle instead. */\n    icon?: string;\n    /** If true, the step will not be clickable */\n    disabled?: boolean;\n    /** Apply query params to the routerLink */\n    queryParams?: Params;\n}\n\nexport type StepColor = 'green' | 'blue' | 'purple' | 'orange' | 'red' | 'none';\nexport type StepType = 'arrow' | 'isolated';\n\n/** Convey progress through numbered steps, providing a wizard-like workflow.  */\n@Component({\n    selector: 'hc-stepper',\n    templateUrl: './stepper.component.html',\n    styleUrls: ['./stepper.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StepperComponent implements AfterContentInit {\n    _routerEnabled = false;\n\n    /** An array defining the steps in the stepper */\n    @Input()\n    public steps: StepInterface[];\n\n    /** Sets the layout of the progress stepper. *Defaults to `arrow`.*  */\n    @Input()\n    public type: StepType = 'arrow';\n\n    /** Sets the highlight color of the progress stepper. *Defaults to `green`.*  */\n    @Input()\n    get color(): StepColor {\n        return this._color;\n    }\n    set color(value: StepColor) {\n        this._color = value;\n        this._hostClass = 'hc-stepper-' + this._color;\n    }\n    private _color: StepColor = 'green';\n\n    /** Determines whether numerals should be displayed on each step indicator for the isolated type.\n     * *Defaults to `false`.*  */\n    @Input()\n    get showStepCount(): boolean {\n        return this._showStepCount;\n    }\n    set showStepCount(value) {\n        this._showStepCount = parseBooleanAttribute(value);\n    }\n    private _showStepCount = false;\n\n    /** If true, include a router outlet with the component. *Defaults to `true`.*  */\n    @Input()\n    get useRouterOutlet(): boolean {\n        return this._useRouterOutlet;\n    }\n    set useRouterOutlet(value) {\n        this._useRouterOutlet = parseBooleanAttribute(value);\n    }\n    private _useRouterOutlet = true;\n\n    /** Get or set the currently selected zero-based index of the stepper */\n    @Input()\n    get activeIndex(): number | undefined {\n        return this._activeIndex;\n    }\n    set activeIndex(value: number | undefined) {\n        if (!this.steps) {\n            return;\n        }\n        if (value !== undefined && (value < 0 || value >= this.steps.length)) {\n            throw Error('The hc-stepper activeIndex value of ' + value + ' is out of bounds');\n        }\n        if (this._routerEnabled && value !== undefined) {\n            this.router.navigate([this.steps[value].routerLink]);\n        } else {\n            this._activeIndex = value;\n            this.activeIndexChange.emit(this._activeIndex);\n        }\n    }\n    private _activeIndex: number | undefined = undefined;\n\n    /** Emits the current zero-based index for the active step whenever it changes */\n    @Output()\n    activeIndexChange = new EventEmitter<number>();\n\n    @HostBinding('class') _hostClass = 'hc-stepper-' + this.color;\n\n    constructor(private router: Router, private urlSerializer: UrlSerializer) {\n        this.router.events.forEach(event => {\n            if (event instanceof NavigationEnd) {\n                this.findCurrentStep();\n            }\n        });\n    }\n\n    ngAfterContentInit() {\n        this._checkForRouterUse();\n        if (this._routerEnabled) {\n            this.findCurrentStep();\n        }\n    }\n\n    _stepClick(index: number | undefined) {\n        if (!this._routerEnabled && index !== undefined && this.steps[index].disabled !== true) {\n            this._activeIndex = index;\n            this.activeIndexChange.emit(this._activeIndex);\n        }\n    }\n\n    private _checkForRouterUse() {\n        const countUsingRouter = this.steps.filter(step => step.routerLink !== undefined).length;\n        if (countUsingRouter > 0 && countUsingRouter < this.steps.length) {\n            const stepMissingRouterLink = this.steps.filter(step => step.routerLink === undefined);\n            throwErrorForMissingRouterLink(stepMissingRouterLink);\n        } else {\n            this._routerEnabled = countUsingRouter === this.steps.length;\n        }\n    }\n\n    /** Can be used to activate the current step following @Input() steps routerLink or queryParams updates  */\n    findCurrentStep() {\n        const foundActiveRouteIndex = this.steps.findIndex(step => {\n            const urlTree = this.router.createUrlTree([step.routerLink], {queryParams: step.queryParams});\n            const stepURL = this.urlSerializer.serialize(urlTree);\n            return this.router.isActive(stepURL, true);\n        });\n        this._activeIndex = foundActiveRouteIndex > -1 ? foundActiveRouteIndex : undefined;\n        this.activeIndexChange.emit(this._activeIndex);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {StepperComponent} from './stepper.component';\nimport {IconModule} from '../icon/icon.module';\n\nexport {StepInterface} from './stepper.component';\n\n@NgModule({\n    imports: [CommonModule, RouterModule, IconModule],\n    exports: [StepperComponent],\n    declarations: [StepperComponent]\n})\nexport class StepperModule {}\n","import {Component, HostBinding, Input, ViewEncapsulation} from '@angular/core';\n\n/** Secondary navigation bar appearing below the primary navbar  */\n@Component({\n    selector: 'hc-subnav',\n    template: `\n        <ng-content></ng-content>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class SubnavComponent {\n    @HostBinding('class.hc-subnav')\n    _hostClass: boolean = true;\n\n    /**\n     * @deprecated\n     * @description Not compatible with notification banners, so you should set\n     *  the fixed position of the subnav and other header content within your app instead\n     * */\n    @HostBinding('class.hc-subnav-fixed-top')\n    @Input()\n    public fixedTop: boolean = false;\n\n    constructor() {}\n}\n","import {Directive, HostBinding} from '@angular/core';\n\n/** Can be added to a div or individual component to align it to the right side of the subnav  */\n@Directive({\n    selector: '[hcSubnavRight]'\n})\nexport class SubnavRightDirective {\n    @HostBinding('class.hc-subnav-right')\n    _hostClass: boolean = true;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SubnavComponent} from './subnav.component';\nimport {SubnavRightDirective} from './subnav-right.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [SubnavComponent, SubnavRightDirective],\n    declarations: [SubnavComponent, SubnavRightDirective]\n})\nexport class SubnavModule {}\n","/* tslint:disable:component-class-suffix no-host-metadata-property */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CDK_TABLE_TEMPLATE, CdkTable} from '@angular/cdk/table';\nimport {\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    IterableDiffers,\n    Optional,\n    ViewEncapsulation,\n    HostBinding,\n    Input\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {parseBooleanAttribute} from '../util';\nimport {Platform} from '@angular/cdk/platform';\n\n@Component({\n    selector: 'hc-table, table[hc-table]',\n    exportAs: 'matTable',\n    template: CDK_TABLE_TEMPLATE,\n    styleUrls: ['table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HcTable<T> extends CdkTable<T> {\n    /** Overrides the sticky CSS class set by the `CdkTable`. */\n    protected stickyCssClass = 'hc-table-sticky';\n\n    constructor(\n        protected _differs: IterableDiffers,\n        protected _changeDetectorRef: ChangeDetectorRef,\n        protected _elementRef: ElementRef,\n        _platform: Platform,\n        @Attribute('role') role: string,\n        @Optional() protected readonly _dir: Directionality\n    ) {\n        super(_differs, _changeDetectorRef, _elementRef, role, _dir, document, _platform);\n    }\n\n    @HostBinding('class.hc-table')\n    _hostHcTableClass = true;\n    @HostBinding('class.hc-table-borders')\n    _hostHcBordersClass = true;\n    @HostBinding('class.hc-table-small')\n    _hostHcTableSmall = false;\n\n    /** Sets whether the table should have a 2px border around each cell (defaults to true) */\n    @Input()\n    get borders(): boolean {\n        return this._hostHcBordersClass;\n    }\n\n    set borders(hasBorders) {\n        this._hostHcBordersClass = parseBooleanAttribute(hasBorders);\n    }\n\n    /** If true, table has less padding and a smaller font size (defaults to false)  */\n    @Input()\n    get tight(): boolean {\n        return this._hostHcTableSmall;\n    }\n    set tight(value) {\n        this._hostHcTableSmall = parseBooleanAttribute(value);\n    }\n}\n","/* tslint:disable:directive-class-suffix directive-selector no-host-metadata-property no-input-rename*/\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Input} from '@angular/core';\nimport {CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef} from '@angular/cdk/table';\n\n/**\n * Cell definition for the hc-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n    selector: '[hcCellDef]',\n    providers: [{provide: CdkCellDef, useExisting: HcCellDef}]\n})\nexport class HcCellDef extends CdkCellDef {}\n\n/**\n * Header cell definition for the hc-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n    selector: '[hcHeaderCellDef]',\n    providers: [{provide: CdkHeaderCellDef, useExisting: HcHeaderCellDef}]\n})\nexport class HcHeaderCellDef extends CdkHeaderCellDef {}\n\n/**\n * Footer cell definition for the hc-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n    selector: '[hcFooterCellDef]',\n    providers: [{provide: CdkFooterCellDef, useExisting: HcFooterCellDef}]\n})\nexport class HcFooterCellDef extends CdkFooterCellDef {}\n\n/**\n * Column definition for the hc-table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n    selector: '[hcColumnDef]',\n    providers: [{provide: CdkColumnDef, useExisting: HcColumnDef}]\n})\nexport class HcColumnDef extends CdkColumnDef {\n    private _justify: string = 'left';\n\n    /** Unique name for this column. */\n    @Input('hcColumnDef')\n    name: string;\n\n    /** Sets the text alignment for this column: `left` (default), `center` or `right` */\n    @Input()\n    get justify(): string {\n        return this._justify;\n    }\n\n    set justify(justifyVal: string) {\n        if (justifyVal === 'left' || justifyVal === 'center' || justifyVal === 'right') {\n            this._justify = justifyVal;\n        } else {\n            throw Error('Unsupported table column alignment value: ' + justifyVal);\n        }\n    }\n\n    /** Whether this column should be sticky positioned at the start of the row */\n    @Input()\n    sticky: boolean;\n\n    /** Whether this column should be sticky positioned on the end of the row */\n    @Input()\n    stickyEnd: boolean;\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n    selector: 'hc-header-cell, th[hc-header-cell]',\n    host: {\n        class: 'hc-header-cell',\n        role: 'columnheader'\n    }\n})\nexport class HcHeaderCell extends CdkHeaderCell {\n    constructor(columnDef: HcColumnDef, elementRef: ElementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`hc-column-${columnDef.cssClassFriendlyName}`);\n        elementRef.nativeElement.classList.add(`hc-table-justify-` + columnDef.justify);\n    }\n}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n    selector: 'hc-footer-cell, td[hc-footer-cell]',\n    host: {\n        class: 'hc-footer-cell',\n        role: 'gridcell'\n    }\n})\nexport class HcFooterCell extends CdkFooterCell {\n    constructor(columnDef: HcColumnDef, elementRef: ElementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`hc-column-${columnDef.cssClassFriendlyName}`);\n        elementRef.nativeElement.classList.add(`hc-table-justify-` + columnDef.justify);\n    }\n}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n    selector: 'hc-cell, td[hc-cell]',\n    host: {\n        class: 'hc-cell',\n        role: 'gridcell'\n    }\n})\nexport class HcCell extends CdkCell {\n    constructor(columnDef: HcColumnDef, elementRef: ElementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`hc-column-${columnDef.cssClassFriendlyName}`);\n        elementRef.nativeElement.classList.add(`hc-table-justify-` + columnDef.justify);\n    }\n}\n","// tslint:disable:directive-class-suffix use-input-property-decorator component-class-suffix\n// tslint:disable:no-host-metadata-property no-inputs-metadata-property\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Directive, ViewEncapsulation} from '@angular/core';\nimport {CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef} from '@angular/cdk/table';\n\n/**\n * Header row definition for the hc-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n    selector: '[hcHeaderRowDef]',\n    providers: [{provide: CdkHeaderRowDef, useExisting: HcHeaderRowDef}],\n    inputs: ['columns: hcHeaderRowDef', 'sticky: hcHeaderRowDefSticky']\n})\nexport class HcHeaderRowDef extends CdkHeaderRowDef {}\n\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n@Directive({\n    selector: '[hcFooterRowDef]',\n    providers: [{provide: CdkFooterRowDef, useExisting: HcFooterRowDef}],\n    inputs: ['columns: hcFooterRowDef', 'sticky: hcFooterRowDefSticky']\n})\nexport class HcFooterRowDef extends CdkFooterRowDef {}\n\n/**\n * Data row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n    selector: '[hcRowDef]',\n    providers: [{provide: CdkRowDef, useExisting: HcRowDef}],\n    inputs: ['columns: hcRowDefColumns', 'when: hcRowDefWhen']\n})\nexport class HcRowDef<T> extends CdkRowDef<T> {}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n    selector: 'hc-header-row, tr[hc-header-row]',\n    template: CDK_ROW_TEMPLATE,\n    host: {\n        class: 'hc-header-row',\n        role: 'row'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'hcHeaderRow',\n    providers: [{provide: CdkHeaderRow, useExisting: HcHeaderRow}]\n})\nexport class HcHeaderRow extends CdkHeaderRow {}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n    selector: 'hc-footer-row, tr[hc-footer-row]',\n    template: CDK_ROW_TEMPLATE,\n    host: {\n        class: 'hc-footer-row',\n        role: 'row'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'hcFooterRow',\n    providers: [{provide: CdkFooterRow, useExisting: HcFooterRow}]\n})\nexport class HcFooterRow extends CdkFooterRow {}\n\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n    selector: 'hc-row, tr[hc-row]',\n    template: CDK_ROW_TEMPLATE,\n    host: {\n        class: 'hc-row',\n        role: 'row'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'hcRow',\n    providers: [{provide: CdkRow, useExisting: HcRow}]\n})\nexport class HcRow extends CdkRow {}\n","/* Copyright 2017 PSanetra <code@psanetra.de>\n\nOpen Source typescript decorator which binds class properties to observable companion properties.\nhttps://github.com/PSanetra/bind-observable\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */\n\nexport interface BindObservableOpts {\n    /**\n     * optional custom key of the companion property.\n     * If not provided, the decorator will take the name of the original property key with a '$' suffix.\n     */\n    key?: string;\n    /**\n     * If true, the observable will emit the raw setter value if the decorated property is an accessor.\n     * Otherwise the observable will call the getter once and emit the returned value.\n     * This option will be ignored if the decorated property has no get accessor.\n     */\n    emitRawSetterValue?: boolean;\n}\n\nexport function isBindObservableOpts(pet: any): pet is BindObservableOpts {\n    return pet && typeof pet === 'object';\n}\n","/* Copyright 2017 PSanetra <code@psanetra.de>\n\nOpen Source typescript decorator which binds class properties to observable companion properties.\nhttps://github.com/PSanetra/bind-observable\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */\n\nimport {ReplaySubject} from 'rxjs';\nimport {BindObservableOpts, isBindObservableOpts} from './bind-observable-options';\n\ntype SubjectByProp = Map<string, ReplaySubject<any>>;\n\nconst subjects: WeakMap<Object, SubjectByProp> = new WeakMap();\n\ntype ValueByProp = Map<string, any>;\n\nconst values: WeakMap<Object, ValueByProp> = new WeakMap();\n\nfunction subject(instance: any, key: string): ReplaySubject<any> {\n    let subjectByProp = subjects.get(instance);\n\n    if (!subjectByProp) {\n        subjectByProp = new Map<string, ReplaySubject<any>>();\n        subjects.set(instance, subjectByProp);\n    }\n\n    let _subject = subjectByProp.get(key);\n\n    if (!_subject) {\n        _subject = new ReplaySubject<any>(1);\n        subjectByProp.set(key, _subject);\n    }\n\n    return _subject;\n}\n\nfunction valueMap(instance: any): ValueByProp {\n    let _valueMap = values.get(instance);\n\n    if (!_valueMap) {\n        _valueMap = new Map<string, any>();\n        values.set(instance, _valueMap);\n    }\n\n    return _valueMap;\n}\n\nfunction defineObservableProperty(target: Object, observableKey: string): void {\n    Object.defineProperty(target, observableKey, {\n        configurable: true,\n        enumerable: false,\n        get() {\n            return subject(this, observableKey);\n        }\n    });\n}\n\nfunction redefineSimpleProperty(target: any, propertyKey: string, observableKey: string): void {\n    Object.defineProperty(target, propertyKey, {\n        configurable: true,\n        enumerable: true,\n        set(value) {\n            valueMap(this).set(propertyKey, value);\n            subject(this, observableKey).next(value);\n        },\n        get() {\n            return valueMap(this).get(propertyKey);\n        }\n    });\n}\n\nfunction redefineAccessorProperty(\n    target: Object,\n    propertyKey: string,\n    observableKey: string,\n    emitRawSetterValue: boolean,\n    descriptor: PropertyDescriptor\n): void {\n    Object.defineProperty(target, propertyKey, {\n        configurable: descriptor.configurable,\n        enumerable: descriptor.enumerable,\n        set(value) {\n            if (!descriptor.set) {\n                throw new Error(`Property ${propertyKey} doesn't have a setter and cannot be written`);\n            }\n\n            descriptor.set.call(this, value);\n\n            const companionProp = subject(this, observableKey);\n\n            if (emitRawSetterValue || !descriptor.get) {\n                companionProp.next(value);\n            } else {\n                companionProp.next(descriptor.get());\n            }\n        },\n        get(): any {\n            if (!descriptor.get) {\n                throw new Error(`Property ${propertyKey} doesn't have a getter and cannot be read`);\n            }\n\n            return descriptor.get.call(this);\n        }\n    });\n}\n\n/**\n * Binds a property to an observable companion property.\n * The observable companion property will emit on all assignments (including initialization),\n * but will not emit undefined if undefined is not explicitly assigned on initialization.\n */\nexport function BindObservable(observableKeyOrOpts?: string | BindObservableOpts) {\n    return (target: any, propertyKey: string) => {\n        const opts: BindObservableOpts = isBindObservableOpts(observableKeyOrOpts) ? observableKeyOrOpts : {};\n\n        if (typeof observableKeyOrOpts === 'string') {\n            opts.key = observableKeyOrOpts;\n        }\n\n        const observableKey: string = opts.key || propertyKey + '$';\n\n        // The third parameter of this function (descriptor) is passed only if the decorated property\n        // is an accessor, but it won't be passed if another decorator has replaced the descriptor.\n        // See Property Decorators at https://www.typescriptlang.org/docs/handbook/decorators.html\n        // Because of this, we are forced to retrieve the current descriptor with Reflection API\n        const descriptor = Reflect.getOwnPropertyDescriptor(target, propertyKey);\n\n        delete target[propertyKey];\n        delete target[observableKey];\n\n        defineObservableProperty(target, observableKey);\n\n        if (descriptor !== undefined) {\n            redefineAccessorProperty(target, propertyKey, observableKey, !!opts.emitRawSetterValue, descriptor);\n        } else {\n            redefineSimpleProperty(target, propertyKey, observableKey);\n        }\n    };\n}\n","/* Based on an example posted by Paolo Caleffi at: https://github.com/angular/material2/issues/8312 */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport {BindObservable} from './bind-observable/bind-observable';\nimport {untilDestroyed} from '../util';\nimport {fromEvent, Observable, Subscription} from 'rxjs';\nimport {skip} from 'rxjs/operators';\n\nexport class CellResizeEvent {\n    constructor(public width: number, public directionLeft: boolean) {}\n}\n\n@Component({\n    selector: 'hc-cell-resizer',\n    template: '<div class=\"hc-cell-resizer-left\"></div><div class=\"hc-cell-resizer-right\"></div>',\n    styleUrls: [],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcCellResizer implements OnInit, OnDestroy {\n    /**\n     * Sets whether the resizer is active or not\n     */\n    @HostBinding('class.disabled') @Input() disabled = false;\n\n    /**\n     * Stores the width value for this resizer;\n     * typically used with two-way binding on the cell's style.width property\n     */\n    @Input()\n    get width(): number {\n        return this._width;\n    }\n    set width(value: number) {\n        if (value > 0) {\n            this._width = value;\n        }\n    }\n    private _width!: number;\n\n    private _directionModifier: number = 1;\n\n    private _mouseX: number;\n\n    /**\n     * Emits a `CellResizeEvent` when a cell has been resized\n     */\n    @Output() public resized = new EventEmitter<CellResizeEvent>();\n\n    @BindObservable() private isResizing = false;\n    private isResizing$!: Observable<boolean>;\n\n    /**\n     * Emits a boolean value of true while a cell is being resized\n     */\n    @Output() public resizing = new EventEmitter<boolean>();\n\n    private dragSubscription?: Subscription;\n\n    public ngOnInit(): void {\n        this.isResizing$\n            .pipe(\n                // Skip default value\n                skip(1),\n                untilDestroyed(this)\n            )\n            .subscribe(isResizing => {\n                this.resizing.emit(isResizing);\n\n                if (isResizing) {\n                    // We must use arrow function to avoid losing the context,\n                    //  we cannot pass directly the functions references\n                    this.dragSubscription = fromEvent<MouseEvent>(window.document, 'mousemove')\n                        .pipe(untilDestroyed(this))\n                        .subscribe(event => this._resizeColumn(event));\n                    this.dragSubscription.add(\n                        fromEvent(window.document, 'mouseup')\n                            .pipe(untilDestroyed(this))\n                            .subscribe(() => this._stopResizing())\n                    );\n                } else {\n                    // When resize finishes, we emit one last \"resized\" event for which\n                    //  the corresponding \"isResizing\" value will be false.\n                    // This can be used to detect which is the final resizing event\n                    //  and ignore the others\n                    this.resized.emit(new CellResizeEvent(this.width, this._directionModifier === -1));\n                    if (this.dragSubscription) {\n                        this.dragSubscription.unsubscribe();\n                    }\n                }\n            });\n    }\n\n    private _resizeColumn(event: MouseEvent) {\n        const deltaX = event.screenX - this._mouseX;\n        const newWidth = this.width + deltaX * this._directionModifier;\n\n        this._mouseX = event.screenX;\n\n        if (newWidth >= 0) {\n            this.resized.emit(new CellResizeEvent(newWidth, this._directionModifier === -1));\n        }\n        // Prevent text selection while resizing\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    // Same problems that mousemove listener have\n    private _stopResizing() {\n        this.isResizing = false;\n    }\n\n    // isResizing can be set to true only when the component is not disabled\n    @HostListener('mousedown', ['$event']) _startResizing(event: MouseEvent) {\n        this.isResizing = !this.disabled;\n\n        this._mouseX = event.screenX;\n\n        if ((<Element>event.target).className === 'hc-cell-resizer-left') {\n            this._directionModifier = -1;\n        } else {\n            this._directionModifier = 1;\n        }\n\n        // Prevent text selection while resizing\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    // Must be present for AOT compilation to work, even if empty\n    // Otherwise 'ng build --prod' will optimize away any calls to ngOnDestroy,\n    // even if the method is added by the untilDestroyed operator\n    public ngOnDestroy() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {HcTable} from './table.component';\nimport {HcCell, HcCellDef, HcColumnDef, HcFooterCell, HcFooterCellDef, HcHeaderCell, HcHeaderCellDef} from './cell';\nimport {HcFooterRow, HcFooterRowDef, HcHeaderRow, HcHeaderRowDef, HcRow, HcRowDef} from './row';\nimport {HcCellResizer} from './cell-resizer.component';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CommonModule} from '@angular/common';\n\nconst EXPORTED_DECLARATIONS = [\n    // HcTable\n    HcTable,\n\n    // Template defs\n    HcHeaderCellDef,\n    HcHeaderRowDef,\n    HcColumnDef,\n    HcCellDef,\n    HcRowDef,\n    HcFooterCellDef,\n    HcFooterRowDef,\n\n    // Cell directives\n    HcHeaderCell,\n    HcCell,\n    HcFooterCell,\n\n    // Row directions\n    HcHeaderRow,\n    HcRow,\n    HcFooterRow,\n\n    // Cell resizer\n    HcCellResizer\n];\n\n@NgModule({\n    imports: [CdkTableModule, CommonModule],\n    exports: EXPORTED_DECLARATIONS,\n    declarations: EXPORTED_DECLARATIONS\n})\nexport class TableModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {_isNumberValue} from '@angular/cdk/coercion';\nimport {DataSource} from '@angular/cdk/table';\nimport {BehaviorSubject, combineLatest, merge, Observable, of as observableOf, Subscription} from 'rxjs';\n// import {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {HcSort, Sort} from '../sort/index';\nimport {map} from 'rxjs/operators';\nimport {PaginationComponent, LoadMorePaginationComponent, PageEvent} from '../pagination/index';\nimport {BasePaginationComponent} from '../pagination/base-pagination';\nimport {isString} from 'util';\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Use to see what kind of pager we have\n */\nexport function _isLoadMorePaginator(pager: BasePaginationComponent): pager is LoadMorePaginationComponent {\n    const loadMorePager = <LoadMorePaginationComponent>pager;\n    return loadMorePager && loadMorePager.buttonText !== undefined;\n}\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using HcSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n */\nexport class HcTableDataSource<T> extends DataSource<T> {\n    /** Stream that emits when a new data array is set on the data source. */\n    private readonly _data: BehaviorSubject<T[]>;\n\n    /** Stream emitting render data to the table (depends on ordered data changes). */\n    private readonly _renderData = new BehaviorSubject<T[]>([]);\n\n    /** Stream that emits when a new filter string is set on the data source. */\n    private readonly _filter = new BehaviorSubject<string>('');\n\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     */\n    _renderChangesSubscription = Subscription.EMPTY;\n\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     */\n    filteredData: T[];\n\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data: T[]) {\n        this._data.next(data);\n    }\n\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter(): string {\n        return this._filter.value;\n    }\n    set filter(filter: string) {\n        this._filter.next(filter);\n    }\n\n    /**\n     * Instance of the HcSort directive used by the table to control its sorting. Sort changes\n     * emitted by the HcSort will trigger an update to the table's rendered data.\n     */\n    get sort(): HcSort | null {\n        return this._sort;\n    }\n    set sort(sort: HcSort | null) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    private _sort: HcSort | null;\n\n    /**\n     * Instance of the PaginationComponentused by the table to control what page of the data is\n     * displayed. Page changes emitted by the hc-pagination will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator(): BasePaginationComponent | null {\n        return this._paginator;\n    }\n    set paginator(paginator: BasePaginationComponent | null) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    private _paginator: BasePaginationComponent | null;\n\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * Converts strings to lowercase characters\n     * May be set to a custom function for different behavior.\n     * @param data Data object that is being accessed.\n     * @param sortHeaderId The name of the column that represents the data.\n     */\n    sortingDataAccessor: (data: T, sortHeaderId: string) => string | number = (data: T, sortHeaderId: string): string | number => {\n        const value: any = data[sortHeaderId];\n\n        if (_isNumberValue(value)) {\n            const numberValue = Number(value);\n\n            // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n            // return them as strings. For more info: https://goo.gl/y5vbSg\n            return numberValue < MAX_SAFE_INTEGER ? numberValue : `${value}`;\n        }\n\n        // lowercase strings\n        if (isString(value)) {\n            return value.toLocaleLowerCase();\n        }\n\n        // convert null/undefined to an empty string so they sort first\n        if (value === null || value === undefined) {\n            return '';\n        }\n\n        // leave dates or other values as is\n        return value;\n    };\n\n    // sortingDataAccessor: ((data: T, sortHeaderId: string) => string) = (data: T, sortHeaderId: string): string => {\n    //     return `${data[sortHeaderId]}`.toLocaleLowerCase();\n    // };\n\n    /**\n     * Gets a sorted copy of the data array based on the state of the HcSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from HcSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * @param data The array of data that should be sorted.\n     * @param sort The connected HcSort that holds the current sort state.\n     */\n    sortData: (data: T[], sort: HcSort) => T[] = (data: T[], sort: HcSort): T[] => {\n        const active = sort.active;\n        const direction = sort.direction;\n        if (!active || direction === '') {\n            return data;\n        }\n\n        return data.sort((a, b) => {\n            let valueA = this.sortingDataAccessor(a, active);\n            let valueB = this.sortingDataAccessor(b, active);\n\n            // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n            // one value exists while the other doesn't. In this case, existing value should come first.\n            // This avoids inconsistent results when comparing values to undefined/null.\n            // If neither value exists, return 0 (equal).\n            let comparatorResult = 0;\n            if (valueA != null && valueB != null) {\n                // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                if (valueA > valueB) {\n                    comparatorResult = 1;\n                } else if (valueA < valueB) {\n                    comparatorResult = -1;\n                }\n            } else if (valueA != null) {\n                comparatorResult = 1;\n            } else if (valueB != null) {\n                comparatorResult = -1;\n            }\n\n            return comparatorResult * (direction === 'asc' ? 1 : -1);\n        });\n    };\n\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * @param data Data object used to check against the filter.\n     * @param filter Filter string that has been set on the data source.\n     * @returns Whether the filter matches against the data\n     */\n    filterPredicate: (data: T, filter: string) => boolean = (data: T, filter: string): boolean => {\n        // Transform the data into a lowercase string of all property values.\n        const accumulator = (currentTerm, key) => currentTerm + data[key];\n        const dataStr = Object.keys(data)\n            .reduce(accumulator, '')\n            .toLowerCase();\n\n        // Transform the filter by converting it to lowercase and removing whitespace.\n        const transformedFilter = filter.trim().toLowerCase();\n\n        return dataStr.indexOf(transformedFilter) !== -1;\n    };\n\n    constructor(initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n        this._updateChangeSubscription();\n    }\n\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if HcSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange: Observable<Sort | null | void> = this._sort\n            ? merge<Sort | void>(this._sort.sortChange, this._sort.initialized)\n            : observableOf(null);\n        const pageChange: Observable<PageEvent | null> = this._paginator\n            ? merge<PageEvent>(this._paginator.page, this._paginator.initialized)\n            : observableOf(null);\n\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest(dataStream, this._filter).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest(filteredData, sortChange).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest(orderedData, pageChange).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data: T[]) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n\n        return this.filteredData;\n    }\n\n    /**\n     * Returns a sorted copy of the data if HcSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data: T[]): T[] {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n\n        return this.sortData(data.slice(), this.sort);\n    }\n\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data: T[]): T[] {\n        const pager = this.paginator;\n        if (!pager) {\n            return data;\n        }\n        const startIndex = _isLoadMorePaginator(pager) ? 0 : (pager.pageNumber - 1) * pager.pageSize;\n        const numElsToGrab = _isLoadMorePaginator(pager) ? pager.pageNumber * pager.pageSize : pager.pageSize;\n        return data.slice().splice(startIndex, numElsToGrab);\n    }\n\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength: number) {\n        Promise.resolve().then(() => {\n            if (!this.paginator) {\n                return;\n            }\n\n            this.paginator.length = filteredDataLength;\n\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (this.paginator.pageNumber > 0) {\n                const lastPageIndex = Math.ceil(this.paginator.length / this.paginator.pageSize) || 1;\n                this.paginator.pageNumber = Math.min(this.paginator.pageNumber, lastPageIndex);\n            }\n        });\n    }\n\n    /**\n     * Used by the HcTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        return this._renderData;\n    }\n\n    /**\n     * Used by the HcTable. Called when it is destroyed. No-op.\n     * @docs-private\n     */\n    disconnect() {}\n}\n","import {Component, ViewEncapsulation, TemplateRef, ViewChild} from '@angular/core';\n\n/** Contains the HTML markup for tab titles */\n@Component({\n    selector: 'hc-tab-title',\n    template: '<ng-template #tabTitle><ng-content></ng-content></ng-template>',\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcTabTitleComponent {\n    @ViewChild('tabTitle', {static: false})\n    public tabTitle: TemplateRef<any>;\n}\n","import {Component, Input, ContentChildren, QueryList, AfterContentInit, Output, ViewEncapsulation} from '@angular/core';\nimport {EventEmitter, TemplateRef, ViewChild} from '@angular/core';\nimport {HcTabTitleComponent} from './tab-title.component';\nimport {Params} from '@angular/router';\n\n@Component({\n    templateUrl: './tab.component.html',\n    selector: `hc-tab`,\n    styleUrls: ['./tab.component.scss'],\n    // tslint:disable-next-line: no-host-metadata-property\n    host: {class: 'hc-tab'},\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabComponent implements AfterContentInit {\n    /** Plain text title of the tab; for HTML support include a `hc-tab-title` element */\n    @Input()\n    tabTitle: string = '';\n    /** Router path that the tab routes to. If one tab uses the routerLink in a tab set, all must use the router link.\n     * Can be specified as '/path/2' or ['path', '2']\n     */\n    @Input()\n    routerLink: any[] | string;\n\n    /** Add queryParams to the routerLink */\n    @Input()\n    queryParams: Params;\n\n    /** If set to true, [routerLinkActiveOptions]=\"{exact: true}\" is added */\n    @Input()\n    exactRouteMatch: boolean;\n\n    /** Emits when this tab is selected; use instead of `(click)` for click binding    */\n    @Output()\n    tabClick: EventEmitter<Event> = new EventEmitter();\n\n    /** The template to be used when this tab is selected. Defaults to the content of this tab component.\n     * Not used when the tab set uses routing. */\n    @ViewChild('tabContent', {static: false})\n    tabContent: TemplateRef<any>;\n\n    _direction: string;\n    _active: boolean = false;\n    _tight: boolean = false;\n    _htmlTitle: HcTabTitleComponent;\n\n    @ContentChildren(HcTabTitleComponent)\n    _tabTitle: QueryList<HcTabTitleComponent>;\n\n    ngAfterContentInit() {\n        if (this._tabTitle) {\n            this._htmlTitle = this._tabTitle.first;\n        }\n    }\n\n    tabClickHandler(event: MouseEvent) {\n        // Prevent a tab anchor click from also calling the router on the host element\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.tabClick.emit();\n    }\n}\n","import {AfterContentInit, Component, ContentChildren, Input, QueryList, Output, ViewEncapsulation} from '@angular/core';\nimport {EventEmitter, TemplateRef} from '@angular/core';\nimport {TabComponent} from '../tab/tab.component';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {parseBooleanAttribute} from '../../util';\n\nexport class TabChangeEvent {\n    constructor(public index: number, public tab: TabComponent) {}\n}\n\nexport function throwErrorForMissingRouterLink(tabsWithoutRouterLink: TabComponent[]) {\n    const tabTitles = tabsWithoutRouterLink.map(tab => tab.tabTitle);\n    throw Error(`Routerlink missing on ${tabTitles.join(',')}`);\n}\n\nconst supportedDirections = ['horizontal', 'vertical'];\n\nexport function validateDirectionInput(inputStr: string) {\n    if (supportedDirections.indexOf(inputStr) < 0) {\n        throw Error('Unsupported tab direction value: ' + inputStr);\n    }\n}\n\nexport function tabComponentMissing(): Error {\n    return new Error(`TabSet must contain at least one TabComponent. Make sure to add a hc-tab to the hc-tab-set element.`);\n}\n\nexport function invalidDefaultTab(tabVal: string | number) {\n    throw Error('Invalid default tab value: ' + tabVal + \". Must be 'none' or a value less than the total number of tabs in the set.\");\n}\n\n@Component({\n    selector: `hc-tab-set`,\n    templateUrl: './tab-set.component.html',\n    styleUrls: ['./tab-set.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabSetComponent implements AfterContentInit {\n    _routerEnabled: boolean = false;\n    private _direction: string = 'vertical';\n    private _defaultTab: string | number = 0;\n    private _stopTabSubscriptionSubject: Subject<any> = new Subject();\n\n    /** The content to be displayed for the currently selected tab.\n     * This is read from the tab when it is selected.\n     * Not used when this component uses routing.\n     */\n    tabContent: TemplateRef<any>;\n\n    @ContentChildren(TabComponent)\n    _tabs: QueryList<TabComponent>;\n\n    /** Emits when the selected tab is changed */\n    @Output()\n    selectedTabChange: EventEmitter<TabChangeEvent> = new EventEmitter();\n\n    /** Specify direction of tabs as either `horizontal` or `vertical`. Defaults to `vertical` */\n    @Input()\n    get direction(): string {\n        return this._direction;\n    }\n\n    set direction(directionType: string) {\n        validateDirectionInput(directionType);\n        this._direction = directionType;\n    }\n\n    /** Zero-based numerical value specifying which tab to select by default, setting to `none` means no tab\n     * will be immediately selected. Defaults to 0 (the first tab). */\n    @Input()\n    get defaultTab(): string | number {\n        return this._defaultTab;\n    }\n\n    set defaultTab(tabValue: string | number) {\n        if (!isNaN(+tabValue) || tabValue === 'none') {\n            this._defaultTab = tabValue;\n        } else {\n            invalidDefaultTab(tabValue);\n        }\n    }\n\n    /** Determines whether the tab set will create a router-outlet or ng-container for the tab content.\n     * If set to false, the app will need to add its own container.  Defaults to `true`. */\n    @Input()\n    get addContentContainer(): boolean {\n        return this._addContentContainer;\n    }\n\n    set addContentContainer(value) {\n        this._addContentContainer = parseBooleanAttribute(value);\n    }\n\n    _addContentContainer: boolean = true;\n\n    /** If true, condense the default padding on all included tabs. *Defaults to `false`.*  */\n    @Input()\n    get tight(): boolean {\n        return this._tight;\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n        this.setTabDirection();\n    }\n    private _tight = false;\n\n    constructor(private router: Router, private route: ActivatedRoute) {}\n\n    ngAfterContentInit(): void {\n        this.setUpTabs();\n        this._tabs.changes.subscribe(() => this.setUpTabs());\n    }\n\n    private setUpTabs(): void {\n        if (this._tabs.length === 0) {\n            throw tabComponentMissing();\n        }\n\n        if (this.defaultTab !== 'none') {\n            this.defaultToFirstTab();\n        }\n        this.checkForRouterUse();\n        this.setTabDirection();\n        this.subscribeToTabClicks();\n    }\n\n    private setTabDirection(): void {\n        setTimeout(() =>\n            this._tabs.forEach(t => {\n                t._direction = this.direction;\n                t._tight = this.tight;\n            })\n        );\n    }\n\n    private subscribeToTabClicks(): void {\n        this._stopTabSubscriptionSubject.next();\n        this._tabs.forEach(t => t.tabClick.pipe(takeUntil(this._stopTabSubscriptionSubject)).subscribe(() => this._setActive(t)));\n    }\n\n    /** Sets the currently selected tab by either its numerical index or `TabComponent` object  */\n    selectTab(tab: number | TabComponent) {\n        const activeTab = typeof tab === 'number' ? this._tabs.toArray()[tab] : tab;\n        this._setActive(activeTab);\n    }\n\n    _setActive(tab: TabComponent) {\n        let activeIndex = 0;\n        this._tabs.toArray().forEach((t, index) => {\n            t._active = false;\n            if (t === tab) {\n                activeIndex = index;\n            }\n        });\n        tab._active = true;\n        this.tabContent = tab.tabContent;\n        this.selectedTabChange.emit(new TabChangeEvent(activeIndex, tab));\n    }\n\n    private defaultToFirstTab() {\n        if (!this._tabs.find(tab => tab._active)) {\n            // setTimeout to avoid change after checked error\n            // when ngFor is used as projected nodes are registered\n            // and stored as part of the existing view, not\n            // the view in which they are projected\n            // embedded views are checked *before* AfterContentInit\n            // is triggered\n            const tabArray = this._tabs.toArray();\n            if (tabArray[Number(this.defaultTab)]) {\n                setTimeout(() => this._setActive(tabArray[Number(this.defaultTab)]));\n            } else {\n                invalidDefaultTab(this.defaultTab);\n            }\n        }\n    }\n\n    private checkForRouterUse() {\n        const countUsingRouter = this._tabs.filter(tab => tab.routerLink !== undefined).length;\n        if (countUsingRouter > 0 && countUsingRouter < this._tabs.length) {\n            const tabsMissingRouterLink = this._tabs.filter(tab => tab.routerLink === undefined);\n            throwErrorForMissingRouterLink(tabsMissingRouterLink);\n        }\n\n        if (countUsingRouter === this._tabs.length) {\n            this._routerEnabled = true;\n            if (this._defaultTab !== 'none') {\n                this.defaultToFirstRoute();\n            }\n        }\n    }\n\n    private defaultToFirstRoute() {\n        const foundRoute = this._tabs\n            .map(tab => tab.routerLink)\n            .map(routerLink => this.mapRouterLinkToString(routerLink))\n            .find(routerLink => {\n                let currentRoute = this.router.url;\n                return currentRoute === routerLink || currentRoute.indexOf(`${routerLink}/`) > -1;\n            });\n\n        if (foundRoute) {\n            return;\n        }\n\n        const tabArray = this._tabs.toArray();\n        if (tabArray[Number(this.defaultTab)]) {\n            const firstRoute = this.mapRouterLinkToString(tabArray[Number(this.defaultTab)].routerLink);\n            this.router.navigate([firstRoute], {relativeTo: this.route});\n        }\n    }\n\n    private mapRouterLinkToString(routerLink: string | any[]): string {\n        if (routerLink instanceof Array) {\n            routerLink = routerLink.join('/').replace('//', '/');\n        }\n        return routerLink;\n    }\n}\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TabComponent} from './tab/tab.component';\nimport {HcTabTitleComponent} from './tab/tab-title.component';\nimport {TabSetComponent} from './tab-set/tab-set.component';\n\n@NgModule({\n    imports: [CommonModule, RouterModule],\n    declarations: [TabComponent, HcTabTitleComponent, TabSetComponent],\n    exports: [TabComponent, HcTabTitleComponent, TabSetComponent]\n})\nexport class TabsModule {}\n","import {Component, Input, HostBinding, ViewEncapsulation} from '@angular/core';\nimport {parseBooleanAttribute} from '../util';\n\n/** Container element to help segment content visually against a gray background.\n * The tile will expand to the height and width of the content it contains. */\n@Component({\n    selector: 'hc-tile',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TileComponent {\n    @HostBinding('class.hc-tile')\n    _hostClass = true;\n\n    @HostBinding('class.hc-tile-tight')\n    _tight = false;\n\n    /** If true, compress the default padding in the tile. Defaults to false  */\n    @Input()\n    get tight(): boolean {\n        return this._tight;\n    }\n    set tight(value) {\n        this._tight = parseBooleanAttribute(value);\n    }\n\n    constructor() {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TileComponent} from './tile.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [TileComponent],\n    declarations: [TileComponent]\n})\nexport class TileModule {}\n","import {Component, EventEmitter, ElementRef, ViewContainerRef, ComponentRef, ChangeDetectorRef, ViewEncapsulation} from '@angular/core';\nimport {trigger, state, style, transition, animate, AnimationEvent} from '@angular/animations';\nimport {Portal, CdkPortalOutletAttachedRef} from '@angular/cdk/portal';\nimport {BehaviorSubject} from 'rxjs';\n\nconst ANIMATION_TIMINGS = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n@Component({\n    selector: 'hc-toaster',\n    templateUrl: './hc-toast.component.html',\n    styleUrls: ['./hc-toast.component.scss'],\n    // tslint:disable-next-line: no-host-metadata-property\n    host: {class: 'hc-toaster'},\n    animations: [\n        trigger('fade', [\n            state('void', style({transform: 'none', opacity: 0})),\n            state('enter', style({transform: 'none', opacity: 1})),\n            state('leave', style({transform: 'none', opacity: 0})),\n            transition('* => *', animate(ANIMATION_TIMINGS))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HcToastComponent {\n    _styleType: string = 'success';\n    _toastIcon: string = 'fa-check-circle';\n    _headerText: string;\n    _bodyText: string;\n    _animationState: 'void' | 'enter' | 'leave' = 'enter';\n    _animationStateChanged = new EventEmitter<AnimationEvent>();\n    _closeClick = new EventEmitter<MouseEvent>();\n    _canDismiss: boolean = false;\n    _toastPortal: Portal<any>;\n    _width: number = 300;\n    _hasProgressBar: boolean = false;\n    _progressVal: number;\n    _progressWidth: string = '100%';\n    readonly _componentInstance = new BehaviorSubject<any>(null);\n\n    get _widthStr() {\n        return this._width ? `${this._width}px` : 'auto';\n    }\n\n    constructor(public _el: ElementRef, public _viewContainerRef: ViewContainerRef, public _changeRef: ChangeDetectorRef) {}\n\n    _onAnimationStart(event: AnimationEvent) {\n        this._animationStateChanged.emit(event);\n    }\n\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationStateChanged.emit(event);\n    }\n\n    _startExitAnimation() {\n        this._animationState = 'leave';\n    }\n\n    _dismissClick(event: MouseEvent) {\n        this._closeClick.emit(event);\n    }\n\n    _customComponentAttached(ref: CdkPortalOutletAttachedRef) {\n        if (ref instanceof ComponentRef) {\n            this._componentInstance.next(ref.instance);\n        }\n    }\n}\n","import {OverlayRef} from '@angular/cdk/overlay';\nimport {HcToastComponent} from './hc-toast.component';\nimport {Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {Input} from '@angular/core';\n\nexport class HcToastRef {\n    private _beforeClose = new Subject<void>();\n    private _afterClosed = new Subject<void>();\n\n    _toastPosition: string;\n\n    /** The HcToast component associated with the toast reference */\n    componentInstance: HcToastComponent;\n\n    /** If the `hasProgressBar` option is set to true in `hc-toast-options`, this 0-100 value can\n     * be used to make it a determinate progress bar. If the progress bar is on but a value is not set,\n     * the progress bar will be indeterminate.*/\n    @Input()\n    get progress(): number {\n        return this.componentInstance._progressVal;\n    }\n\n    set progress(progVal: number) {\n        if (progVal < 0) {\n            progVal = 0;\n        } else if (progVal > 100) {\n            progVal = 100;\n        }\n        this.componentInstance._progressVal = progVal;\n        this.componentInstance._progressWidth = progVal + '%';\n    }\n\n    constructor(public _overlayRef: OverlayRef) {}\n\n    /** Closes the associated toast message with this reference */\n    close(): void {\n        if (this.componentInstance._animationState !== 'leave') {\n            this.componentInstance._animationStateChanged\n                .pipe(\n                    filter(event => event.phaseName === 'start'),\n                    take(1)\n                )\n                .subscribe(() => {\n                    this._beforeClose.next();\n                    this._beforeClose.complete();\n                });\n\n            this.componentInstance._animationStateChanged\n                .pipe(\n                    filter(event => event.phaseName === 'done' && event.toState === 'leave'),\n                    take(1)\n                )\n                .subscribe(() => {\n                    this._overlayRef.dispose();\n                    this._afterClosed.next();\n                    this._afterClosed.complete();\n                    this.componentInstance._componentInstance.unsubscribe();\n                    this.componentInstance = null!;\n                });\n\n            this.componentInstance._startExitAnimation();\n        }\n    }\n}\n","import {Injectable, ComponentRef, Injector, TemplateRef, Type, ComponentFactory} from '@angular/core';\nimport {Overlay, OverlayConfig, OverlayRef, PositionStrategy} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {HcToastComponent} from './hc-toast.component';\nimport {HcToastOptions} from './hc-toast-options';\nimport {HcToastRef} from './hc-toast-ref';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {Subject, Observable} from 'rxjs';\n\nexport type ComponentSetup<T> = Partial<T> | ((instance: T) => void);\nexport type ToastContentType<T> = Type<T> | TemplateRef<any>;\n\n/** Toasts provide users with instant feedback on actions they've taken. For more general information,\n * use a `hc-banner`. */\n@Injectable()\nexport class HcToasterService {\n    _toasts: HcToastRef[] = [];\n\n    // Inject overlay service\n    constructor(private injector: Injector, private _overlay: Overlay) {}\n\n    /** Displays a new toaster message with the settings included in `toastOptions`. `toastContent` can be used to\n     * create entirely custom toasts, but only if the type in toastOptions is set to `custom`. Be sure to set `border-radius: 5px`\n     * in the style of your custom content template so it matches the toast container. If your custom toast is\n     * using a component, the `componentSetup` parameter accepts an object or function to configure that component. */\n    addToast<T = any>(toastOptions?: HcToastOptions, toastContent?: ToastContentType<T>, componentSetup?: ComponentSetup<T>): HcToastRef {\n        const defaultOptions: HcToastOptions = {\n            type: 'success',\n            position: 'bottom-right',\n            timeout: 5000,\n            clickDismiss: false\n        };\n        const options = {...defaultOptions, ...toastOptions};\n\n        // Returns an OverlayRef (which is a PortalHost)\n        const _overlayRef = this._createOverlay(options);\n\n        // Instantiate remote control\n        const _toastRef = new HcToastRef(_overlayRef);\n\n        const overlayComponent = this._attachToastContainer(_overlayRef, _toastRef);\n\n        _toastRef.componentInstance = overlayComponent;\n\n        if (options.type === 'custom' && toastContent) {\n            if (toastContent instanceof TemplateRef) {\n                _toastRef.componentInstance._toastPortal = new TemplatePortal(toastContent, _toastRef.componentInstance._viewContainerRef);\n            } else {\n                _toastRef.componentInstance._toastPortal = new ComponentPortal(toastContent);\n                if (componentSetup) {\n                    _toastRef.componentInstance._componentInstance.pipe(filter(c => !!c)).subscribe(c => {\n                        if (componentSetup instanceof Function) {\n                            componentSetup(c);\n                        } else {\n                            Object.keys(componentSetup).forEach(k => (c[k] = componentSetup[k]));\n                        }\n                    });\n                }\n            }\n        }\n\n        // Listen for click events to close the toast if the option is set\n        if (options.clickDismiss) {\n            _toastRef.componentInstance._canDismiss = options.clickDismiss;\n            _toastRef.componentInstance._closeClick.subscribe(() => {\n                _toastRef.close();\n            });\n        }\n\n        // Set the class for the type set in options\n        if (options.type) {\n            if (\n                options.type === 'success' ||\n                options.type === 'info' ||\n                options.type === 'warning' ||\n                options.type === 'alert' ||\n                options.type === 'custom'\n            ) {\n                _toastRef.componentInstance._styleType = options.type;\n            } else {\n                throw Error('Unsupported toaster type: ' + options.type);\n            }\n        }\n\n        // Set the header text\n        if (options.header) {\n            _toastRef.componentInstance._headerText = options.header;\n        }\n\n        // Set the toast width\n        if (options.width || options.width === 0) {\n            _toastRef.componentInstance._width = options.width;\n        }\n\n        // Set the body text\n        if (options.body) {\n            _toastRef.componentInstance._bodyText = options.body;\n        }\n\n        // Store the positioning of the toast\n        _toastRef._toastPosition = String(options.position);\n\n        // Set progress bar\n        if (options.hasProgressBar) {\n            _toastRef.componentInstance._hasProgressBar = options.hasProgressBar;\n        }\n\n        // Set the timeout interval to close the toast if non-zero\n        if (options.timeout !== 0) {\n            setTimeout(() => {\n                if (_toastRef.componentInstance) {\n                    _toastRef.close();\n                }\n            }, options.timeout);\n        }\n\n        // Cleanup functions called when the toast close animation is triggered\n        _toastRef.componentInstance._animationStateChanged\n            .pipe(\n                filter(event => event.phaseName === 'done' && event.toState === 'leave'),\n                take(1)\n            )\n            .subscribe(() => {\n                this._removeToastPointer(_toastRef);\n                if (options.toastClosed) {\n                    options.toastClosed();\n                }\n                this._updateToastPositions();\n                _toastRef.componentInstance._closeClick.unsubscribe();\n            });\n\n        _toastRef.componentInstance._changeRef.detectChanges();\n        this._toasts.push(_toastRef);\n        return _toastRef;\n    }\n\n    /** Closes the most recent toast displayed */\n    closeLastToast() {\n        if (this._toasts.length > 0) {\n            const element = this._toasts[this._toasts.length - 1];\n            if (element) {\n                element.close();\n            }\n        }\n    }\n\n    /** Closes currently visible toasts */\n    closeAllToasts() {\n        let len = this._toasts.length;\n        for (let index = 0; index < len; index++) {\n            const element = this._toasts[index];\n            if (element) {\n                element.close();\n            }\n        }\n    }\n\n    private _createOverlay(config: HcToastOptions) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n\n    private _attachToastContainer(overlayRef: OverlayRef, toastRef: HcToastRef) {\n        const injector = this._createInjector(toastRef);\n\n        const containerPortal = new ComponentPortal(HcToastComponent, null, injector);\n        const containerRef: ComponentRef<HcToastComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private _createInjector(toastRef: HcToastRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(HcToastRef, toastRef);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    private _getOverlayConfig(config: HcToastOptions): OverlayConfig {\n        let overlayConfig;\n        let positionStrategy = this._getPositionStrategy(String(config.position), this._toasts.length);\n\n        if (config.position === 'top-full-width' || config.position === 'bottom-full-width') {\n            overlayConfig = new OverlayConfig({positionStrategy, width: '96%', panelClass: 'overlay-pointer-events'});\n        } else {\n            overlayConfig = new OverlayConfig({positionStrategy, panelClass: 'overlay-pointer-events'});\n        }\n\n        return overlayConfig;\n    }\n\n    private _getPositionStrategy(position: string, index: number): PositionStrategy {\n        let positionStrategy: PositionStrategy;\n        let toastIndex: number = this._getLastToast(position, index);\n\n        switch (position) {\n            case 'top-right':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withPositions([\n                            {\n                                overlayX: 'end',\n                                overlayY: 'top',\n                                originX: 'end',\n                                originY: 'bottom'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .right('10px');\n                }\n                break;\n            case 'top-center':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withPositions([\n                            {\n                                overlayX: 'center',\n                                overlayY: 'top',\n                                originX: 'center',\n                                originY: 'bottom'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .centerHorizontally();\n                }\n                break;\n            case 'top-left':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withPositions([\n                            {\n                                overlayX: 'start',\n                                overlayY: 'top',\n                                originX: 'start',\n                                originY: 'bottom'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .left('10px');\n                }\n                break;\n            case 'top-full-width':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withFlexibleDimensions(false)\n                        .withPositions([\n                            {\n                                overlayX: 'center',\n                                overlayY: 'top',\n                                originX: 'center',\n                                originY: 'bottom'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .centerHorizontally();\n                }\n                break;\n            case 'bottom-right':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withPositions([\n                            {\n                                overlayX: 'end',\n                                overlayY: 'bottom',\n                                originX: 'end',\n                                originY: 'top'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .bottom()\n                        .right('10px');\n                }\n                break;\n            case 'bottom-center':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withPositions([\n                            {\n                                overlayX: 'center',\n                                overlayY: 'bottom',\n                                originX: 'center',\n                                originY: 'top'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .bottom()\n                        .centerHorizontally();\n                }\n                break;\n            case 'bottom-left':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withPositions([\n                            {\n                                overlayX: 'start',\n                                overlayY: 'bottom',\n                                originX: 'start',\n                                originY: 'top'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .bottom()\n                        .left('10px');\n                }\n                break;\n            case 'bottom-full-width':\n                if (toastIndex !== -1) {\n                    positionStrategy = this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._toasts[toastIndex].componentInstance._el.nativeElement.children[0])\n                        .withFlexibleDimensions(false)\n                        .withPositions([\n                            {\n                                overlayX: 'center',\n                                overlayY: 'bottom',\n                                originX: 'center',\n                                originY: 'top'\n                            }\n                        ]);\n                } else {\n                    positionStrategy = this._overlay\n                        .position()\n                        .global()\n                        .bottom()\n                        .centerHorizontally();\n                }\n                break;\n            default:\n                throw Error('Unsupported toaster message position: ' + position);\n        }\n\n        return positionStrategy;\n    }\n\n    // Removes the toast that was closed from the storage array\n    private _removeToastPointer(toastRef: HcToastRef) {\n        for (let index = 0; index < this._toasts.length; index++) {\n            if (this._toasts[index] === toastRef) {\n                this._toasts.splice(index, 1);\n            }\n        }\n    }\n\n    // Returns one toast back from the index provided in the position provided\n    private _getLastToast(toastPos: string, startIndex: number): number {\n        let toastIndex: number = -1;\n\n        for (let index = startIndex - 1; index >= 0; index--) {\n            if (this._toasts[index]._toastPosition === toastPos) {\n                toastIndex = index;\n                break;\n            }\n        }\n        return toastIndex;\n    }\n\n    // Updates the position strategy for what toasts are connected after one is closed\n    private _updateToastPositions() {\n        for (let index = 0; index < this._toasts.length; index++) {\n            this._toasts[index]._overlayRef.updatePositionStrategy(this._getPositionStrategy(this._toasts[index]._toastPosition, index));\n        }\n    }\n}\n","import {HcToastComponent} from './hc-toast.component';\nimport {HcToasterService} from './hc-toaster.service';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n    imports: [CommonModule, PortalModule, OverlayModule],\n    exports: [HcToastComponent],\n    declarations: [HcToastComponent],\n    providers: [HcToasterService],\n    entryComponents: [HcToastComponent]\n})\nexport class ToasterModule {}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\nexport function throwErrorForMissingSurveyUri() {\n    throw Error(`SurveyUri must be specified on element hc-typeform-survey`);\n}\n\nexport class TypeformWindow extends Window {\n    public typeformEmbed: any;\n}\n\n@Component({\n    selector: 'hc-typeform-survey',\n    template: `\n        <a\n            class=\"typeform-share link\"\n            [href]=\"_fullUri\"\n            data-mode=\"drawer_right\"\n            data-auto-open=\"true\"\n            data-submit-close-delay=\"0\"\n            target=\"_blank\"\n            rel=\"noopener\"\n        ></a>\n    `,\n    styles: [],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TypeformSurveyComponent {\n    /**\n     * TypeForm survey URI you want to use. Example: https://somecompany.typeform.com/to/surveyId?parameter=parametervalue\n     */\n    @Input() public set surveyUri(uri: string) {\n        this._surveyUri = uri;\n        this.refreshFullUri();\n    }\n    public get surveyUri(): string {\n        return this._surveyUri;\n    }\n    /**\n     * App version which will be passed to the survey in a hidden field. Ensures you know what version the feedback is referencing.\n     */\n    @Input() public set appVersion(version: string) {\n        this._appVersion = version;\n        this.refreshFullUri();\n    }\n    public get appVersion(): string {\n        return this._appVersion;\n    }\n    public _fullUri: string;\n    private _surveyUri: string;\n    private _appVersion: string;\n    private _id: string = 'typef_orm_share';\n\n    /**\n     * Opens the survey specified in the surveyUri\n     */\n    public open() {\n        if (!document.getElementById(this._id)) {\n            this.getScripts();\n        } else {\n            (<TypeformWindow>window).typeformEmbed.makePopup(this._fullUri, {\n                mode: 'drawer_right',\n                autoOpen: true,\n                opacity: 100,\n                autoClose: 0,\n                hideScrollbars: true\n            });\n        }\n    }\n\n    private refreshFullUri() {\n        let varChar: string = this.surveyUri.includes('?') ? '&' : '?';\n        this._fullUri = this.appVersion ? this.surveyUri + varChar + 'app_version=' + this.appVersion : this.surveyUri;\n    }\n\n    private getScripts(): void {\n        if (!this.surveyUri) {\n            throwErrorForMissingSurveyUri();\n        }\n        /* this is directly from the embed\n           markup given from TypeForm */\n        let embedScript, firstScript;\n        if (!document.getElementById(this._id)) {\n            // create new embed script with typeform cdn source\n            embedScript = document.createElement('script');\n            embedScript.id = this._id;\n            embedScript.src = `https://embed.typeform.com/embed.js`;\n\n            // insert embed script before other js scripts\n            firstScript = document.getElementsByTagName.call(document, 'script')[0];\n            if (firstScript.parentNode) {\n                firstScript.parentNode.insertBefore(embedScript, firstScript);\n            }\n        }\n    }\n}\n","import {TypeformSurveyComponent} from './typeform-survey.component';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [TypeformSurveyComponent],\n    declarations: [TypeformSurveyComponent]\n})\nexport class TypeformSurveyModule {}\n"],"names":["coerceBooleanProperty","supportedColors","validateColorInput","observableOf","uniqueId","supportedAligns","validateAlignInput","openStateAnimation","tslib_1.__decorate","throwErrorForMissingRouterLink"],"mappings":"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"}